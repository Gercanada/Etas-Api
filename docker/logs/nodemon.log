[33m[nodemon] 3.0.2[39m
[33m[nodemon] to restart at any time, enter `rs`[39m
[33m[nodemon] watching path(s): *.*[39m
[33m[nodemon] watching extensions: js,mjs,cjs,json[39m
[32m[nodemon] starting `node dist/app.js`[39m
{
  HOSTNAME: 'c3932e6a800f',
  PWD: '/usr/src/app',
  HOME: '/root',
  DB_HOST: 'mysql',
  SHLVL: '0',
  PATH: '/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin',
  LC_CTYPE: 'C.UTF-8',
  SUPERVISOR_ENABLED: '1',
  SUPERVISOR_PROCESS_NAME: 'nodemon',
  SUPERVISOR_GROUP_NAME: 'nodemon'
}
{
  accessKey: '8XCSIKA2UUQ0QG75GPN1',
  secretKey: 'sGyCpLYBLnT805JPYZBukpfiKnbtyGuBqHrYmAMX',
  region: 'us-east-1'
}
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
{
  HOSTNAME: 'c3932e6a800f',
  PWD: '/usr/src/app',
  HOME: '/root',
  DB_HOST: 'mysql',
  SHLVL: '0',
  PATH: '/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin',
  LC_CTYPE: 'C.UTF-8',
  SUPERVISOR_ENABLED: '1',
  SUPERVISOR_PROCESS_NAME: 'nodemon',
  SUPERVISOR_GROUP_NAME: 'nodemon'
}
{
  accessKey: '8XCSIKA2UUQ0QG75GPN1',
  secretKey: 'sGyCpLYBLnT805JPYZBukpfiKnbtyGuBqHrYmAMX',
  region: 'us-east-1'
}
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
Try to up a file
{
  error: TypeError [ERR_INVALID_URL]: Invalid URL
      at new NodeError (node:internal/errors:405:5)
      at new URL (node:internal/url:676:13)
      at parseUrl (/usr/src/app/node_modules/@smithy/url-parser/dist-cjs/index.js:7:38)
      at toEndpointV1 (/usr/src/app/node_modules/@smithy/middleware-endpoint/dist-cjs/adaptors/toEndpointV1.js:12:38)
      at customEndpointProvider (/usr/src/app/node_modules/@smithy/middleware-endpoint/dist-cjs/resolveEndpointConfig.js:10:99)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
    input: 'sjc1.vultrobjects.com',
    code: 'ERR_INVALID_URL'
  }
}
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
{
  accessKey: '8XCSIKA2UUQ0QG75GPN1',
  secretKey: 'sGyCpLYBLnT805JPYZBukpfiKnbtyGuBqHrYmAMX',
  region: 'us-east-1'
}
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
{
  credentials: {
    accessKey: '8XCSIKA2UUQ0QG75GPN1',
    secretKey: 'sGyCpLYBLnT805JPYZBukpfiKnbtyGuBqHrYmAMX',
    region: 'us-east-1'
  }
}
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
{
  credentials: {
    accessKey: '8XCSIKA2UUQ0QG75GPN1',
    secretKey: 'sGyCpLYBLnT805JPYZBukpfiKnbtyGuBqHrYmAMX',
    region: 'us-east-1'
  }
}
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
{
  credentials: {
    accessKey: '8XCSIKA2UUQ0QG75GPN1',
    secretKey: 'sGyCpLYBLnT805JPYZBukpfiKnbtyGuBqHrYmAMX',
    region: 'us-east-1'
  }
}
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
{
  credentials: {
    accessKey: '8XCSIKA2UUQ0QG75GPN1',
    secretKey: 'sGyCpLYBLnT805JPYZBukpfiKnbtyGuBqHrYmAMX',
    region: 'us-east-1'
  }
}
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
Try to up a file
{
  error: TypeError [ERR_INVALID_URL]: Invalid URL
      at new NodeError (node:internal/errors:405:5)
      at new URL (node:internal/url:676:13)
      at parseUrl (/usr/src/app/node_modules/@smithy/url-parser/dist-cjs/index.js:7:38)
      at toEndpointV1 (/usr/src/app/node_modules/@smithy/middleware-endpoint/dist-cjs/adaptors/toEndpointV1.js:12:38)
      at customEndpointProvider (/usr/src/app/node_modules/@smithy/middleware-endpoint/dist-cjs/resolveEndpointConfig.js:10:99)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
    input: 'sjc1.vultrobjects.com',
    code: 'ERR_INVALID_URL'
  }
}
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
{
  credentials: {
    accessKey: '8XCSIKA2UUQ0QG75GPN1',
    secretKey: 'sGyCpLYBLnT805JPYZBukpfiKnbtyGuBqHrYmAMX',
    region: 'us-east-1'
  }
}
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
{
  credentials: {
    accessKey: '8XCSIKA2UUQ0QG75GPN1',
    secretKey: 'sGyCpLYBLnT805JPYZBukpfiKnbtyGuBqHrYmAMX',
    region: 'us-east-1'
  }
}
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
Try to up a file
Objetos en el bucket: undefined
Try to up a file
Objetos en el bucket: undefined
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
{
  credentials: {
    accessKey: '8XCSIKA2UUQ0QG75GPN1',
    secretKey: 'sGyCpLYBLnT805JPYZBukpfiKnbtyGuBqHrYmAMX',
    region: 'us-east-1'
  }
}
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
Try to up a file
Objetos en el bucket: undefined
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
{
  credentials: {
    accessKey: '8XCSIKA2UUQ0QG75GPN1',
    secretKey: 'sGyCpLYBLnT805JPYZBukpfiKnbtyGuBqHrYmAMX',
    region: 'us-east-1'
  }
}
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
Try to up a file
Objetos en el bucket: undefined
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
{
  credentials: {
    accessKey: '8XCSIKA2UUQ0QG75GPN1',
    secretKey: 'sGyCpLYBLnT805JPYZBukpfiKnbtyGuBqHrYmAMX',
    region: 'us-east-1'
  }
}
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
{
  credentials: {
    accessKey: '8XCSIKA2UUQ0QG75GPN1',
    secretKey: 'sGyCpLYBLnT805JPYZBukpfiKnbtyGuBqHrYmAMX',
    region: 'us-east-1'
  }
}
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
Try to up a file
Objetos en el bucket: undefined
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
{
  credentials: {
    accessKey: '8XCSIKA2UUQ0QG75GPN1',
    secretKey: 'sGyCpLYBLnT805JPYZBukpfiKnbtyGuBqHrYmAMX',
    region: 'us-east-1'
  }
}
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
{
  credentials: {
    accessKey: '8XCSIKA2UUQ0QG75GPN1',
    secretKey: 'sGyCpLYBLnT805JPYZBukpfiKnbtyGuBqHrYmAMX',
    region: 'us-east-1'
  }
}
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
Try to up a file
Objetos en el bucket: undefined
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
{
  credentials: {
    accessKey: '8XCSIKA2UUQ0QG75GPN1',
    secretKey: 'sGyCpLYBLnT805JPYZBukpfiKnbtyGuBqHrYmAMX',
    region: 'us-east-1'
  }
}
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
Try to up a file
Objetos en el bucket: undefined
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
{
  credentials: {
    accessKey: '8XCSIKA2UUQ0QG75GPN1',
    secretKey: 'sGyCpLYBLnT805JPYZBukpfiKnbtyGuBqHrYmAMX',
    region: 'us-east-1'
  }
}
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
{
  credentials: {
    accessKey: '8XCSIKA2UUQ0QG75GPN1',
    secretKey: 'sGyCpLYBLnT805JPYZBukpfiKnbtyGuBqHrYmAMX',
    region: 'us-east-1'
  }
}
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
{
  credentials: {
    accessKey: '8XCSIKA2UUQ0QG75GPN1',
    secretKey: 'sGyCpLYBLnT805JPYZBukpfiKnbtyGuBqHrYmAMX',
    region: 'us-east-1'
  }
}
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
{
  credentials: {
    accessKey: '8XCSIKA2UUQ0QG75GPN1',
    secretKey: 'sGyCpLYBLnT805JPYZBukpfiKnbtyGuBqHrYmAMX',
    region: 'us-east-1'
  }
}
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
{
  credentials: {
    accessKey: '8XCSIKA2UUQ0QG75GPN1',
    secretKey: 'sGyCpLYBLnT805JPYZBukpfiKnbtyGuBqHrYmAMX',
    region: 'us-east-1'
  }
}
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
{
  credentials: {
    accessKey: '8XCSIKA2UUQ0QG75GPN1',
    secretKey: 'sGyCpLYBLnT805JPYZBukpfiKnbtyGuBqHrYmAMX',
    region: 'us-east-1'
  }
}
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
{
  credentials: {
    accessKey: '8XCSIKA2UUQ0QG75GPN1',
    secretKey: 'sGyCpLYBLnT805JPYZBukpfiKnbtyGuBqHrYmAMX',
    region: 'us-east-1'
  }
}
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
Try to up a file
Objetos en el bucket: undefined
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
Try to up a file
Objetos en el bucket: undefined
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
Try to up a file
Objetos en el bucket: undefined
{
  error: Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client
      at new NodeError (node:internal/errors:405:5)
      at ServerResponse.setHeader (node:_http_outgoing:648:11)
      at ServerResponse.header (/usr/src/app/node_modules/express/lib/response.js:794:10)
      at ServerResponse.send (/usr/src/app/node_modules/express/lib/response.js:174:12)
      at ServerResponse.json (/usr/src/app/node_modules/express/lib/response.js:278:15)
      at ServerResponse.send (/usr/src/app/node_modules/express/lib/response.js:162:21)
      at /usr/src/app/dist/controllers/AttachmentController.js:106:13
      at Generator.next (<anonymous>)
      at fulfilled (/usr/src/app/dist/controllers/AttachmentController.js:5:58)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
    code: 'ERR_HTTP_HEADERS_SENT'
  }
}
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
Try to up a file
{
  error: TypeError: client.listBuckets is not a function
      at /usr/src/app/dist/controllers/AttachmentController.js:93:16
      at Generator.next (<anonymous>)
      at /usr/src/app/dist/controllers/AttachmentController.js:8:71
      at new Promise (<anonymous>)
      at __awaiter (/usr/src/app/dist/controllers/AttachmentController.js:4:12)
      at uploadFile (/usr/src/app/dist/controllers/AttachmentController.js:79:34)
      at Layer.handle [as handle_request] (/usr/src/app/node_modules/express/lib/router/layer.js:95:5)
      at next (/usr/src/app/node_modules/express/lib/router/route.js:144:13)
      at Route.dispatch (/usr/src/app/node_modules/express/lib/router/route.js:114:3)
      at Layer.handle [as handle_request] (/usr/src/app/node_modules/express/lib/router/layer.js:95:5)
}
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
Try to up a file
Objetos en el bucket: undefined
{
  data: {
    '$metadata': {
      httpStatusCode: 200,
      requestId: 'tx00000d97fabe5b3e1d212-0065a0755b-150d2851-sjc1',
      extendedRequestId: undefined,
      cfId: undefined,
      attempts: 1,
      totalRetryDelay: 0
    },
    Buckets: [ [Object], [Object] ],
    Owner: { DisplayName: '69062889', ID: '69062889' }
  }
}
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
Try to up a file
Objetos en el bucket: undefined
{
  data: {
    '$metadata': {
      httpStatusCode: 200,
      requestId: 'tx0000037d6a4227a09d60b-0065a0757c-150d942e-sjc1',
      extendedRequestId: undefined,
      cfId: undefined,
      attempts: 1,
      totalRetryDelay: 0
    },
    Buckets: [ [Object], [Object] ],
    Owner: { DisplayName: '69062889', ID: '69062889' }
  }
}
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
Try to up a file
{
  data: {
    '$metadata': {
      httpStatusCode: 200,
      requestId: 'tx00000395018d78dde32e0-0065a0758d-150d4a85-sjc1',
      extendedRequestId: undefined,
      cfId: undefined,
      attempts: 1,
      totalRetryDelay: 0
    },
    Buckets: [ [Object], [Object] ],
    Owner: { DisplayName: '69062889', ID: '69062889' }
  }
}
Objetos en el bucket: undefined
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
Try to up a file
Objetos en el bucket: undefined
{
  data: {
    '$metadata': {
      httpStatusCode: 200,
      requestId: 'tx000001dfd6a7358ba404c-0065a07600-150d4a85-sjc1',
      extendedRequestId: undefined,
      cfId: undefined,
      attempts: 1,
      totalRetryDelay: 0
    },
    Buckets: [ [Object], [Object] ],
    Owner: { DisplayName: '69062889', ID: '69062889' }
  }
}
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
Try to up a file
{
  error: Error: No value provided for input HTTP label: Bucket.
      at resolvedPath (/usr/src/app/node_modules/@smithy/smithy-client/dist-cjs/resolve-path.js:19:15)
      at /usr/src/app/node_modules/@smithy/core/dist-cjs/protocols/requestBuilder.js:51:58
      at RequestBuilder.build (/usr/src/app/node_modules/@smithy/core/dist-cjs/protocols/requestBuilder.js:26:13)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
}
{
  data: {
    '$metadata': {
      httpStatusCode: 200,
      requestId: 'tx00000ae83e61b70e356a5-0065a07635-150daeb5-sjc1',
      extendedRequestId: undefined,
      cfId: undefined,
      attempts: 1,
      totalRetryDelay: 0
    },
    Buckets: [ [Object], [Object] ],
    Owner: { DisplayName: '69062889', ID: '69062889' }
  }
}
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
Try to up a file
{
  data: {
    '$metadata': {
      httpStatusCode: 200,
      requestId: 'tx000002fdfcc71dc50235b-0065a0764f-150d952d-sjc1',
      extendedRequestId: undefined,
      cfId: undefined,
      attempts: 1,
      totalRetryDelay: 0
    },
    Buckets: [ [Object], [Object] ],
    Owner: { DisplayName: '69062889', ID: '69062889' }
  }
}
Objetos en el bucket: [
  {
    Key: 'ira/',
    LastModified: 2024-01-11T23:04:32.916Z,
    ETag: '"d41d8cd98f00b204e9800998ecf8427e"',
    Size: 0,
    StorageClass: 'STANDARD',
    Owner: { DisplayName: '69062889', ID: '69062889' }
  }
]
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
Try to up a file
{
  error: TypeError: Cannot read properties of undefined (reading 'originalname')
      at /usr/src/app/dist/controllers/AttachmentController.js:110:38
      at Generator.next (<anonymous>)
      at /usr/src/app/dist/controllers/AttachmentController.js:31:71
      at new Promise (<anonymous>)
      at __awaiter (/usr/src/app/dist/controllers/AttachmentController.js:27:12)
      at uploadFile (/usr/src/app/dist/controllers/AttachmentController.js:103:34)
      at Layer.handle [as handle_request] (/usr/src/app/node_modules/express/lib/router/layer.js:95:5)
      at next (/usr/src/app/node_modules/express/lib/router/route.js:144:13)
      at Route.dispatch (/usr/src/app/node_modules/express/lib/router/route.js:114:3)
      at Layer.handle [as handle_request] (/usr/src/app/node_modules/express/lib/router/layer.js:95:5)
}
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
Try to up a file
{
  error: TypeError: Cannot read properties of undefined (reading 'originalname')
      at /usr/src/app/dist/controllers/AttachmentController.js:111:38
      at Generator.next (<anonymous>)
      at /usr/src/app/dist/controllers/AttachmentController.js:31:71
      at new Promise (<anonymous>)
      at __awaiter (/usr/src/app/dist/controllers/AttachmentController.js:27:12)
      at uploadFile (/usr/src/app/dist/controllers/AttachmentController.js:103:34)
      at Layer.handle [as handle_request] (/usr/src/app/node_modules/express/lib/router/layer.js:95:5)
      at next (/usr/src/app/node_modules/express/lib/router/route.js:144:13)
      at Route.dispatch (/usr/src/app/node_modules/express/lib/router/route.js:114:3)
      at Layer.handle [as handle_request] (/usr/src/app/node_modules/express/lib/router/layer.js:95:5)
}
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
Try to up a file
{
  error: TypeError: Cannot read properties of undefined (reading 'originalname')
      at /usr/src/app/dist/controllers/AttachmentController.js:111:38
      at Generator.next (<anonymous>)
      at /usr/src/app/dist/controllers/AttachmentController.js:31:71
      at new Promise (<anonymous>)
      at __awaiter (/usr/src/app/dist/controllers/AttachmentController.js:27:12)
      at uploadFile (/usr/src/app/dist/controllers/AttachmentController.js:103:34)
      at Layer.handle [as handle_request] (/usr/src/app/node_modules/express/lib/router/layer.js:95:5)
      at next (/usr/src/app/node_modules/express/lib/router/route.js:144:13)
      at Route.dispatch (/usr/src/app/node_modules/express/lib/router/route.js:114:3)
      at Layer.handle [as handle_request] (/usr/src/app/node_modules/express/lib/router/layer.js:95:5)
}
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
Try to up a file
{
  error: ReferenceError: params is not defined
      at /usr/src/app/dist/controllers/AttachmentController.js:114:58
      at Generator.next (<anonymous>)
      at /usr/src/app/dist/controllers/AttachmentController.js:31:71
      at new Promise (<anonymous>)
      at __awaiter (/usr/src/app/dist/controllers/AttachmentController.js:27:12)
      at uploadFile (/usr/src/app/dist/controllers/AttachmentController.js:103:34)
      at Layer.handle [as handle_request] (/usr/src/app/node_modules/express/lib/router/layer.js:95:5)
      at next (/usr/src/app/node_modules/express/lib/router/route.js:144:13)
      at Route.dispatch (/usr/src/app/node_modules/express/lib/router/route.js:114:3)
      at Layer.handle [as handle_request] (/usr/src/app/node_modules/express/lib/router/layer.js:95:5)
}
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
Try to up a file
{
  error: TypeError: Converting circular structure to JSON
      --> starting at object with constructor 'Socket'
      |     property 'parser' -> object with constructor 'HTTPParser'
      --- property 'socket' closes the circle
      at JSON.stringify (<anonymous>)
      at stringify (/usr/src/app/node_modules/express/lib/response.js:1150:12)
      at ServerResponse.json (/usr/src/app/node_modules/express/lib/response.js:271:14)
      at ServerResponse.send (/usr/src/app/node_modules/express/lib/response.js:162:21)
      at /usr/src/app/dist/controllers/AttachmentController.js:108:13
      at Generator.next (<anonymous>)
      at /usr/src/app/dist/controllers/AttachmentController.js:31:71
      at new Promise (<anonymous>)
      at __awaiter (/usr/src/app/dist/controllers/AttachmentController.js:27:12)
      at uploadFile (/usr/src/app/dist/controllers/AttachmentController.js:103:34)
}
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
Try to up a file
{
  error: TypeError: Converting circular structure to JSON
      --> starting at object with constructor 'Socket'
      |     property 'parser' -> object with constructor 'HTTPParser'
      --- property 'socket' closes the circle
      at JSON.stringify (<anonymous>)
      at /usr/src/app/dist/controllers/AttachmentController.js:108:23
      at Generator.next (<anonymous>)
      at /usr/src/app/dist/controllers/AttachmentController.js:31:71
      at new Promise (<anonymous>)
      at __awaiter (/usr/src/app/dist/controllers/AttachmentController.js:27:12)
      at uploadFile (/usr/src/app/dist/controllers/AttachmentController.js:103:34)
      at Layer.handle [as handle_request] (/usr/src/app/node_modules/express/lib/router/layer.js:95:5)
      at next (/usr/src/app/node_modules/express/lib/router/route.js:144:13)
      at Route.dispatch (/usr/src/app/node_modules/express/lib/router/route.js:114:3)
}
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
Try to up a file
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
Try to up a file
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
Try to up a file
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
Try to up a file
{
  error: TypeError: Converting circular structure to JSON
      --> starting at object with constructor 'Socket'
      |     property 'parser' -> object with constructor 'HTTPParser'
      --- property 'socket' closes the circle
      at JSON.stringify (<anonymous>)
      at stringify (/usr/src/app/node_modules/express/lib/response.js:1150:12)
      at ServerResponse.json (/usr/src/app/node_modules/express/lib/response.js:271:14)
      at ServerResponse.send (/usr/src/app/node_modules/express/lib/response.js:162:21)
      at /usr/src/app/dist/controllers/AttachmentController.js:108:13
      at Generator.next (<anonymous>)
      at /usr/src/app/dist/controllers/AttachmentController.js:31:71
      at new Promise (<anonymous>)
      at __awaiter (/usr/src/app/dist/controllers/AttachmentController.js:27:12)
      at uploadFile (/usr/src/app/dist/controllers/AttachmentController.js:103:34)
}
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
Try to up a file
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
Try to up a file
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
Try to up a file
Objetos en el bucket: undefined
{
  error: Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client
      at new NodeError (node:internal/errors:405:5)
      at ServerResponse.setHeader (node:_http_outgoing:648:11)
      at ServerResponse.header (/usr/src/app/node_modules/express/lib/response.js:794:10)
      at ServerResponse.send (/usr/src/app/node_modules/express/lib/response.js:174:12)
      at ServerResponse.json (/usr/src/app/node_modules/express/lib/response.js:278:15)
      at ServerResponse.send (/usr/src/app/node_modules/express/lib/response.js:162:21)
      at /usr/src/app/dist/controllers/AttachmentController.js:121:13
      at Generator.next (<anonymous>)
      at fulfilled (/usr/src/app/dist/controllers/AttachmentController.js:28:58)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
    code: 'ERR_HTTP_HEADERS_SENT'
  }
}
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
Try to up a file
Objetos en el bucket: undefined
{
  error: Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client
      at new NodeError (node:internal/errors:405:5)
      at ServerResponse.setHeader (node:_http_outgoing:648:11)
      at ServerResponse.header (/usr/src/app/node_modules/express/lib/response.js:794:10)
      at ServerResponse.send (/usr/src/app/node_modules/express/lib/response.js:174:12)
      at ServerResponse.json (/usr/src/app/node_modules/express/lib/response.js:278:15)
      at ServerResponse.send (/usr/src/app/node_modules/express/lib/response.js:162:21)
      at /usr/src/app/dist/controllers/AttachmentController.js:121:13
      at Generator.next (<anonymous>)
      at fulfilled (/usr/src/app/dist/controllers/AttachmentController.js:28:58)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
    code: 'ERR_HTTP_HEADERS_SENT'
  }
}
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
Try to up a file
Objetos en el bucket: undefined
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
Try to up a file
{
  error: Error: No value provided for input HTTP label: Key.
      at resolvedPath (/usr/src/app/node_modules/@smithy/smithy-client/dist-cjs/resolve-path.js:19:15)
      at /usr/src/app/node_modules/@smithy/core/dist-cjs/protocols/requestBuilder.js:51:58
      at RequestBuilder.build (/usr/src/app/node_modules/@smithy/core/dist-cjs/protocols/requestBuilder.js:26:13)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
}
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
Try to up a file
{
  error: Error: No value provided for input HTTP label: Key.
      at resolvedPath (/usr/src/app/node_modules/@smithy/smithy-client/dist-cjs/resolve-path.js:19:15)
      at /usr/src/app/node_modules/@smithy/core/dist-cjs/protocols/requestBuilder.js:51:58
      at RequestBuilder.build (/usr/src/app/node_modules/@smithy/core/dist-cjs/protocols/requestBuilder.js:26:13)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
}
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
Try to up a file
Objetos en el bucket: undefined
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
Try to up a file
Try to up a file
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
Try to up a file
Try to up a file
Try to up a file
Try to up a file
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{
  error: Error: No value provided for input HTTP label: Key.
      at resolvedPath (/usr/src/app/node_modules/@smithy/smithy-client/dist-cjs/resolve-path.js:19:15)
      at /usr/src/app/node_modules/@smithy/core/dist-cjs/protocols/requestBuilder.js:51:58
      at RequestBuilder.build (/usr/src/app/node_modules/@smithy/core/dist-cjs/protocols/requestBuilder.js:26:13)
}
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{
  error: Error: Empty value provided for input HTTP label: Key.
      at resolvedPath (/usr/src/app/node_modules/@smithy/smithy-client/dist-cjs/resolve-path.js:9:19)
      at /usr/src/app/node_modules/@smithy/core/dist-cjs/protocols/requestBuilder.js:51:58
      at RequestBuilder.build (/usr/src/app/node_modules/@smithy/core/dist-cjs/protocols/requestBuilder.js:26:13)
}
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
Try to up a file
{
  error: NoSuchKey: UnknownError
      at de_NoSuchKeyRes (/usr/src/app/node_modules/@aws-sdk/client-s3/dist-cjs/protocols/Aws_restXml.js:5196:23)
      at de_GetObjectCommandError (/usr/src/app/node_modules/@aws-sdk/client-s3/dist-cjs/protocols/Aws_restXml.js:3440:25)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
      at async /usr/src/app/node_modules/@smithy/middleware-serde/dist-cjs/deserializerMiddleware.js:7:24
      at async /usr/src/app/node_modules/@aws-sdk/middleware-signing/dist-cjs/awsAuthMiddleware.js:30:20
      at async /usr/src/app/node_modules/@smithy/middleware-retry/dist-cjs/retryMiddleware.js:31:46
      at async /usr/src/app/node_modules/@aws-sdk/middleware-flexible-checksums/dist-cjs/flexibleChecksumsMiddleware.js:63:20
      at async /usr/src/app/node_modules/@aws-sdk/middleware-sdk-s3/dist-cjs/region-redirect-endpoint-middleware.js:14:24
      at async /usr/src/app/node_modules/@aws-sdk/middleware-sdk-s3/dist-cjs/region-redirect-middleware.js:9:20
      at async /usr/src/app/node_modules/@aws-sdk/middleware-logger/dist-cjs/loggerMiddleware.js:7:26 {
    '$fault': 'client',
    '$metadata': {
      httpStatusCode: 404,
      requestId: 'tx000006af9c6973cd4629e-0065a07e9a-150d942e-sjc1',
      extendedRequestId: undefined,
      cfId: undefined,
      attempts: 1,
      totalRetryDelay: 0
    },
    Code: 'NoSuchKey',
    BucketName: 'etas-portal',
    RequestId: 'tx000006af9c6973cd4629e-0065a07e9a-150d942e-sjc1',
    HostId: '150d942e-sjc1-us'
  }
}
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{
  error: NoSuchKey: UnknownError
      at de_NoSuchKeyRes (/usr/src/app/node_modules/@aws-sdk/client-s3/dist-cjs/protocols/Aws_restXml.js:5196:23)
      at de_GetObjectCommandError (/usr/src/app/node_modules/@aws-sdk/client-s3/dist-cjs/protocols/Aws_restXml.js:3440:25)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
      at async /usr/src/app/node_modules/@smithy/middleware-serde/dist-cjs/deserializerMiddleware.js:7:24
      at async /usr/src/app/node_modules/@aws-sdk/middleware-signing/dist-cjs/awsAuthMiddleware.js:30:20
      at async /usr/src/app/node_modules/@smithy/middleware-retry/dist-cjs/retryMiddleware.js:31:46
      at async /usr/src/app/node_modules/@aws-sdk/middleware-flexible-checksums/dist-cjs/flexibleChecksumsMiddleware.js:63:20
      at async /usr/src/app/node_modules/@aws-sdk/middleware-sdk-s3/dist-cjs/region-redirect-endpoint-middleware.js:14:24
      at async /usr/src/app/node_modules/@aws-sdk/middleware-sdk-s3/dist-cjs/region-redirect-middleware.js:9:20
      at async /usr/src/app/node_modules/@aws-sdk/middleware-logger/dist-cjs/loggerMiddleware.js:7:26 {
    '$fault': 'client',
    '$metadata': {
      httpStatusCode: 404,
      requestId: 'tx00000e7be2dff4e86888d-0065a07eba-150d4a85-sjc1',
      extendedRequestId: undefined,
      cfId: undefined,
      attempts: 1,
      totalRetryDelay: 0
    },
    Code: 'NoSuchKey',
    BucketName: 'etas-portal',
    RequestId: 'tx00000e7be2dff4e86888d-0065a07eba-150d4a85-sjc1',
    HostId: '150d4a85-sjc1-us'
  }
}
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{
  error: Error: Empty value provided for input HTTP label: Key.
      at resolvedPath (/usr/src/app/node_modules/@smithy/smithy-client/dist-cjs/resolve-path.js:9:19)
      at /usr/src/app/node_modules/@smithy/core/dist-cjs/protocols/requestBuilder.js:51:58
      at RequestBuilder.build (/usr/src/app/node_modules/@smithy/core/dist-cjs/protocols/requestBuilder.js:26:13)
}
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{
  error: ReferenceError: GetObjectAttributesCommand is not defined
      at /usr/src/app/dist/controllers/AttachmentController.js:169:25
      at Generator.next (<anonymous>)
      at /usr/src/app/dist/controllers/AttachmentController.js:31:71
      at new Promise (<anonymous>)
      at __awaiter (/usr/src/app/dist/controllers/AttachmentController.js:27:12)
      at getObject (/usr/src/app/dist/controllers/AttachmentController.js:162:33)
      at Layer.handle [as handle_request] (/usr/src/app/node_modules/express/lib/router/layer.js:95:5)
      at next (/usr/src/app/node_modules/express/lib/router/route.js:144:13)
      at Route.dispatch (/usr/src/app/node_modules/express/lib/router/route.js:114:3)
      at Layer.handle [as handle_request] (/usr/src/app/node_modules/express/lib/router/layer.js:95:5)
}
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{
  data: {
    '$metadata': {
      httpStatusCode: 200,
      requestId: 'tx000004764afb32904b291-0065a07f74-150d4a85-sjc1',
      extendedRequestId: undefined,
      cfId: undefined,
      attempts: 1,
      totalRetryDelay: 0
    },
    AcceptRanges: 'bytes',
    LastModified: 2024-01-11T23:38:49.000Z,
    ContentLength: 879792,
    ETag: '"4e64752618e12c4d7973b0c2919b38d2"',
    CacheControl: 'no-cache',
    ContentType: 'image/webp',
    Expires: 2024-01-11T23:53:24.000Z,
    Metadata: {},
    Body: IncomingMessage {
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [TLSSocket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: false,
      rawHeaders: [Array],
      rawTrailers: [],
      joinDuplicateHeaders: undefined,
      aborted: false,
      upgrade: false,
      url: '',
      method: null,
      statusCode: 200,
      statusMessage: 'OK',
      client: [TLSSocket],
      _consuming: false,
      _dumped: false,
      req: [ClientRequest],
      transformToByteArray: [AsyncFunction: transformToByteArray],
      transformToString: [AsyncFunction: transformToString],
      transformToWebStream: [Function: transformToWebStream],
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: [Object],
      [Symbol(kHeadersCount)]: 28,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    }
  }
}
{
  error: TypeError: Converting circular structure to JSON
      --> starting at object with constructor 'TLSSocket'
      |     property 'parser' -> object with constructor 'HTTPParser'
      --- property 'socket' closes the circle
      at JSON.stringify (<anonymous>)
      at stringify (/usr/src/app/node_modules/express/lib/response.js:1150:12)
      at ServerResponse.json (/usr/src/app/node_modules/express/lib/response.js:271:14)
      at /usr/src/app/dist/controllers/AttachmentController.js:172:25
      at Generator.next (<anonymous>)
      at fulfilled (/usr/src/app/dist/controllers/AttachmentController.js:28:58)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
}
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{
  error: Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client
      at new NodeError (node:internal/errors:405:5)
      at ServerResponse.setHeader (node:_http_outgoing:648:11)
      at ServerResponse.header (/usr/src/app/node_modules/express/lib/response.js:794:10)
      at ServerResponse.json (/usr/src/app/node_modules/express/lib/response.js:275:10)
      at /usr/src/app/dist/controllers/AttachmentController.js:191:25
      at Generator.next (<anonymous>)
      at fulfilled (/usr/src/app/dist/controllers/AttachmentController.js:28:58)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
    code: 'ERR_HTTP_HEADERS_SENT'
  }
}
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{}
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
<ref *2> IncomingMessage {
  _readableState: ReadableState {
    state: 137264,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: null,
    errored: null,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: null
  },
  _events: [Object: null prototype] {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket: <ref *1> Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _closeAfterHandlingError: false,
    _readableState: ReadableState {
      state: 4184,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: [],
      flowing: true,
      errored: null,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      buffered: [],
      bufferedIndex: 0,
      allBuffers: true,
      allNoop: true,
      pendingcb: 0,
      constructed: true,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: true,
      errored: null,
      closed: false,
      closeEmitted: false,
      [Symbol(kOnFinished)]: []
    },
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      requestTimeout: 300000,
      headersTimeout: 60000,
      keepAliveTimeout: 5000,
      connectionsCheckingInterval: 30000,
      joinDuplicateHeaders: undefined,
      rejectNonStandardBodyWrites: false,
      _events: [Object: null prototype],
      _eventsCount: 3,
      _maxListeners: undefined,
      _connections: 1,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      noDelay: true,
      keepAlive: false,
      keepAliveInitialDelay: 0,
      highWaterMark: 16384,
      httpAllowHalfOpen: false,
      timeout: 0,
      maxHeadersCount: null,
      maxRequestsPerSocket: 0,
      _connectionKey: '6::::8000',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(async_id_symbol)]: 9,
      [Symbol(kUniqueHeaders)]: null,
      [Symbol(http.server.connections)]: ConnectionsList {},
      [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
        _idleTimeout: 30000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 1308,
        _onTimeout: [Function: bound checkConnections],
        _timerArgs: undefined,
        _repeat: 30000,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 11,
        [Symbol(triggerId)]: 10
      }
    },
    _server: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      requestTimeout: 300000,
      headersTimeout: 60000,
      keepAliveTimeout: 5000,
      connectionsCheckingInterval: 30000,
      joinDuplicateHeaders: undefined,
      rejectNonStandardBodyWrites: false,
      _events: [Object: null prototype],
      _eventsCount: 3,
      _maxListeners: undefined,
      _connections: 1,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      noDelay: true,
      keepAlive: false,
      keepAliveInitialDelay: 0,
      highWaterMark: 16384,
      httpAllowHalfOpen: false,
      timeout: 0,
      maxHeadersCount: null,
      maxRequestsPerSocket: 0,
      _connectionKey: '6::::8000',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(async_id_symbol)]: 9,
      [Symbol(kUniqueHeaders)]: null,
      [Symbol(http.server.connections)]: ConnectionsList {},
      [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
        _idleTimeout: 30000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 1308,
        _onTimeout: [Function: bound checkConnections],
        _timerArgs: undefined,
        _repeat: 30000,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 11,
        [Symbol(triggerId)]: 10
      }
    },
    parser: HTTPParser {
      '0': null,
      '1': [Function: parserOnHeaders],
      '2': [Function: parserOnHeadersComplete],
      '3': [Function: parserOnBody],
      '4': [Function: parserOnMessageComplete],
      '5': [Function: bound onParserExecute],
      '6': [Function: bound onParserTimeout],
      _headers: [],
      _url: '',
      socket: [Circular *1],
      incoming: [Circular *2],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      joinDuplicateHeaders: null,
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    setEncoding: [Function: socketSetEncoding],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      _closed: false,
      socket: [Circular *1],
      _header: null,
      _keepAliveTimeout: 5000,
      _onPendingData: [Function: bound updateOutgoingData],
      req: [Circular *2],
      _sent100: false,
      _expect_continue: false,
      _maxRequestsPerSocket: 0,
      locals: [Object: null prototype] {},
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 16384,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    [Symbol(async_id_symbol)]: 58,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular *1]
    },
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: null,
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kSetNoDelay)]: true,
    [Symbol(kSetKeepAlive)]: false,
    [Symbol(kSetKeepAliveInitialDelay)]: 0,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  rawHeaders: [
    'User-Agent',
    'PostmanRuntime/7.36.0',
    'Accept',
    '*/*',
    'Cache-Control',
    'no-cache',
    'Postman-Token',
    '6e5029ed-7530-4425-b715-c8e557b84dfa',
    'Host',
    'ger-server.local:8000',
    'Accept-Encoding',
    'gzip, deflate, br',
    'Connection',
    'keep-alive',
    'Content-Type',
    'multipart/form-data; boundary=--------------------------814341614606087506640324',
    'Content-Length',
    '7745'
  ],
  rawTrailers: [],
  joinDuplicateHeaders: null,
  aborted: false,
  upgrade: false,
  url: '/object/mclure',
  method: 'DELETE',
  statusCode: null,
  statusMessage: null,
  client: <ref *1> Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _closeAfterHandlingError: false,
    _readableState: ReadableState {
      state: 4184,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: [],
      flowing: true,
      errored: null,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      buffered: [],
      bufferedIndex: 0,
      allBuffers: true,
      allNoop: true,
      pendingcb: 0,
      constructed: true,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: true,
      errored: null,
      closed: false,
      closeEmitted: false,
      [Symbol(kOnFinished)]: []
    },
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      requestTimeout: 300000,
      headersTimeout: 60000,
      keepAliveTimeout: 5000,
      connectionsCheckingInterval: 30000,
      joinDuplicateHeaders: undefined,
      rejectNonStandardBodyWrites: false,
      _events: [Object: null prototype],
      _eventsCount: 3,
      _maxListeners: undefined,
      _connections: 1,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      noDelay: true,
      keepAlive: false,
      keepAliveInitialDelay: 0,
      highWaterMark: 16384,
      httpAllowHalfOpen: false,
      timeout: 0,
      maxHeadersCount: null,
      maxRequestsPerSocket: 0,
      _connectionKey: '6::::8000',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(async_id_symbol)]: 9,
      [Symbol(kUniqueHeaders)]: null,
      [Symbol(http.server.connections)]: ConnectionsList {},
      [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
        _idleTimeout: 30000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 1308,
        _onTimeout: [Function: bound checkConnections],
        _timerArgs: undefined,
        _repeat: 30000,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 11,
        [Symbol(triggerId)]: 10
      }
    },
    _server: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      requestTimeout: 300000,
      headersTimeout: 60000,
      keepAliveTimeout: 5000,
      connectionsCheckingInterval: 30000,
      joinDuplicateHeaders: undefined,
      rejectNonStandardBodyWrites: false,
      _events: [Object: null prototype],
      _eventsCount: 3,
      _maxListeners: undefined,
      _connections: 1,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      noDelay: true,
      keepAlive: false,
      keepAliveInitialDelay: 0,
      highWaterMark: 16384,
      httpAllowHalfOpen: false,
      timeout: 0,
      maxHeadersCount: null,
      maxRequestsPerSocket: 0,
      _connectionKey: '6::::8000',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(async_id_symbol)]: 9,
      [Symbol(kUniqueHeaders)]: null,
      [Symbol(http.server.connections)]: ConnectionsList {},
      [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
        _idleTimeout: 30000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 1308,
        _onTimeout: [Function: bound checkConnections],
        _timerArgs: undefined,
        _repeat: 30000,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 11,
        [Symbol(triggerId)]: 10
      }
    },
    parser: HTTPParser {
      '0': null,
      '1': [Function: parserOnHeaders],
      '2': [Function: parserOnHeadersComplete],
      '3': [Function: parserOnBody],
      '4': [Function: parserOnMessageComplete],
      '5': [Function: bound onParserExecute],
      '6': [Function: bound onParserTimeout],
      _headers: [],
      _url: '',
      socket: [Circular *1],
      incoming: [Circular *2],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      joinDuplicateHeaders: null,
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    setEncoding: [Function: socketSetEncoding],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      _closed: false,
      socket: [Circular *1],
      _header: null,
      _keepAliveTimeout: 5000,
      _onPendingData: [Function: bound updateOutgoingData],
      req: [Circular *2],
      _sent100: false,
      _expect_continue: false,
      _maxRequestsPerSocket: 0,
      locals: [Object: null prototype] {},
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 16384,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    [Symbol(async_id_symbol)]: 58,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular *1]
    },
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: null,
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kSetNoDelay)]: true,
    [Symbol(kSetKeepAlive)]: false,
    [Symbol(kSetKeepAliveInitialDelay)]: 0,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  _consuming: false,
  _dumped: false,
  next: [Function: next],
  baseUrl: '/api/attachments',
  originalUrl: '/api/attachments/object/mclure',
  _parsedUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: null,
    query: null,
    pathname: '/object/mclure',
    path: '/object/mclure',
    href: '/object/mclure',
    _raw: '/object/mclure'
  },
  params: { obj_path: 'mclure' },
  query: {},
  res: <ref *3> ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    _closed: false,
    socket: <ref *1> Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [Circular *3],
      [Symbol(async_id_symbol)]: 58,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _keepAliveTimeout: 5000,
    _onPendingData: [Function: bound updateOutgoingData],
    req: [Circular *2],
    _sent100: false,
    _expect_continue: false,
    _maxRequestsPerSocket: 0,
    locals: [Object: null prototype] {},
    [Symbol(kCapture)]: false,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array],
      vary: [Array],
      'access-control-allow-credentials': [Array]
    },
    [Symbol(errored)]: null,
    [Symbol(kHighWaterMark)]: 16384,
    [Symbol(kRejectNonStandardBodyWrites)]: false,
    [Symbol(kUniqueHeaders)]: null
  },
  body: {},
  route: Route {
    path: '/object/:obj_path',
    stack: [ [Layer] ],
    methods: { delete: true }
  },
  [Symbol(kCapture)]: false,
  [Symbol(kHeaders)]: {
    'user-agent': 'PostmanRuntime/7.36.0',
    accept: '*/*',
    'cache-control': 'no-cache',
    'postman-token': '6e5029ed-7530-4425-b715-c8e557b84dfa',
    host: 'ger-server.local:8000',
    'accept-encoding': 'gzip, deflate, br',
    connection: 'keep-alive',
    'content-type': 'multipart/form-data; boundary=--------------------------814341614606087506640324',
    'content-length': '7745'
  },
  [Symbol(kHeadersCount)]: 18,
  [Symbol(kTrailers)]: null,
  [Symbol(kTrailersCount)]: 0
}
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{
  error: Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client
      at new NodeError (node:internal/errors:405:5)
      at ServerResponse.setHeader (node:_http_outgoing:648:11)
      at ServerResponse.header (/usr/src/app/node_modules/express/lib/response.js:794:10)
      at ServerResponse.send (/usr/src/app/node_modules/express/lib/response.js:174:12)
      at ServerResponse.json (/usr/src/app/node_modules/express/lib/response.js:278:15)
      at /usr/src/app/dist/controllers/AttachmentController.js:191:25
      at Generator.next (<anonymous>)
      at fulfilled (/usr/src/app/dist/controllers/AttachmentController.js:28:58)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
    code: 'ERR_HTTP_HEADERS_SENT'
  }
}
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{
  error: Error: No value provided for input HTTP label: Key.
      at resolvedPath (/usr/src/app/node_modules/@smithy/smithy-client/dist-cjs/resolve-path.js:19:15)
      at /usr/src/app/node_modules/@smithy/core/dist-cjs/protocols/requestBuilder.js:51:58
      at RequestBuilder.build (/usr/src/app/node_modules/@smithy/core/dist-cjs/protocols/requestBuilder.js:26:13)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
}
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{
  error: Error: No value provided for input HTTP label: Key.
      at resolvedPath (/usr/src/app/node_modules/@smithy/smithy-client/dist-cjs/resolve-path.js:19:15)
      at /usr/src/app/node_modules/@smithy/core/dist-cjs/protocols/requestBuilder.js:51:58
      at RequestBuilder.build (/usr/src/app/node_modules/@smithy/core/dist-cjs/protocols/requestBuilder.js:26:13)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
}
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{
  error: TypeError: Converting circular structure to JSON
      --> starting at object with constructor 'Socket'
      |     property 'parser' -> object with constructor 'HTTPParser'
      --- property 'socket' closes the circle
      at JSON.stringify (<anonymous>)
      at stringify (/usr/src/app/node_modules/express/lib/response.js:1150:12)
      at ServerResponse.json (/usr/src/app/node_modules/express/lib/response.js:271:14)
      at ServerResponse.send (/usr/src/app/node_modules/express/lib/response.js:162:21)
      at /usr/src/app/dist/controllers/AttachmentController.js:184:13
      at Generator.next (<anonymous>)
      at /usr/src/app/dist/controllers/AttachmentController.js:31:71
      at new Promise (<anonymous>)
      at __awaiter (/usr/src/app/dist/controllers/AttachmentController.js:27:12)
      at deleteObject (/usr/src/app/dist/controllers/AttachmentController.js:180:36)
}
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
<ref *2> IncomingMessage {
  _readableState: ReadableState {
    state: 137264,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: null,
    errored: null,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: null
  },
  _events: [Object: null prototype] {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket: <ref *1> Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _closeAfterHandlingError: false,
    _readableState: ReadableState {
      state: 4184,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: [],
      flowing: true,
      errored: null,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      buffered: [],
      bufferedIndex: 0,
      allBuffers: true,
      allNoop: true,
      pendingcb: 0,
      constructed: true,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: true,
      errored: null,
      closed: false,
      closeEmitted: false,
      [Symbol(kOnFinished)]: []
    },
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      requestTimeout: 300000,
      headersTimeout: 60000,
      keepAliveTimeout: 5000,
      connectionsCheckingInterval: 30000,
      joinDuplicateHeaders: undefined,
      rejectNonStandardBodyWrites: false,
      _events: [Object: null prototype],
      _eventsCount: 3,
      _maxListeners: undefined,
      _connections: 1,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      noDelay: true,
      keepAlive: false,
      keepAliveInitialDelay: 0,
      highWaterMark: 16384,
      httpAllowHalfOpen: false,
      timeout: 0,
      maxHeadersCount: null,
      maxRequestsPerSocket: 0,
      _connectionKey: '6::::8000',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(async_id_symbol)]: 9,
      [Symbol(kUniqueHeaders)]: null,
      [Symbol(http.server.connections)]: ConnectionsList {},
      [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
        _idleTimeout: 30000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 1319,
        _onTimeout: [Function: bound checkConnections],
        _timerArgs: undefined,
        _repeat: 30000,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 11,
        [Symbol(triggerId)]: 10
      }
    },
    _server: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      requestTimeout: 300000,
      headersTimeout: 60000,
      keepAliveTimeout: 5000,
      connectionsCheckingInterval: 30000,
      joinDuplicateHeaders: undefined,
      rejectNonStandardBodyWrites: false,
      _events: [Object: null prototype],
      _eventsCount: 3,
      _maxListeners: undefined,
      _connections: 1,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      noDelay: true,
      keepAlive: false,
      keepAliveInitialDelay: 0,
      highWaterMark: 16384,
      httpAllowHalfOpen: false,
      timeout: 0,
      maxHeadersCount: null,
      maxRequestsPerSocket: 0,
      _connectionKey: '6::::8000',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(async_id_symbol)]: 9,
      [Symbol(kUniqueHeaders)]: null,
      [Symbol(http.server.connections)]: ConnectionsList {},
      [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
        _idleTimeout: 30000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 1319,
        _onTimeout: [Function: bound checkConnections],
        _timerArgs: undefined,
        _repeat: 30000,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 11,
        [Symbol(triggerId)]: 10
      }
    },
    parser: HTTPParser {
      '0': null,
      '1': [Function: parserOnHeaders],
      '2': [Function: parserOnHeadersComplete],
      '3': [Function: parserOnBody],
      '4': [Function: parserOnMessageComplete],
      '5': [Function: bound onParserExecute],
      '6': [Function: bound onParserTimeout],
      _headers: [],
      _url: '',
      socket: [Circular *1],
      incoming: [Circular *2],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      joinDuplicateHeaders: null,
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    setEncoding: [Function: socketSetEncoding],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      _closed: false,
      socket: [Circular *1],
      _header: null,
      _keepAliveTimeout: 5000,
      _onPendingData: [Function: bound updateOutgoingData],
      req: [Circular *2],
      _sent100: false,
      _expect_continue: false,
      _maxRequestsPerSocket: 0,
      locals: [Object: null prototype] {},
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 16384,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    [Symbol(async_id_symbol)]: 58,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular *1]
    },
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: null,
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kSetNoDelay)]: true,
    [Symbol(kSetKeepAlive)]: false,
    [Symbol(kSetKeepAliveInitialDelay)]: 0,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  rawHeaders: [
    'User-Agent',
    'PostmanRuntime/7.36.0',
    'Accept',
    '*/*',
    'Cache-Control',
    'no-cache',
    'Postman-Token',
    'a84ba0e3-7218-449b-9306-110c928a113a',
    'Host',
    'ger-server.local:8000',
    'Accept-Encoding',
    'gzip, deflate, br',
    'Connection',
    'keep-alive',
    'Content-Type',
    'multipart/form-data; boundary=--------------------------889813684370524394215371',
    'Content-Length',
    '7745'
  ],
  rawTrailers: [],
  joinDuplicateHeaders: null,
  aborted: false,
  upgrade: false,
  url: '/object/?delete=path/toami_me_vale_verga_meme.gif',
  method: 'DELETE',
  statusCode: null,
  statusMessage: null,
  client: <ref *1> Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _closeAfterHandlingError: false,
    _readableState: ReadableState {
      state: 4184,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: [],
      flowing: true,
      errored: null,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      buffered: [],
      bufferedIndex: 0,
      allBuffers: true,
      allNoop: true,
      pendingcb: 0,
      constructed: true,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: true,
      errored: null,
      closed: false,
      closeEmitted: false,
      [Symbol(kOnFinished)]: []
    },
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      requestTimeout: 300000,
      headersTimeout: 60000,
      keepAliveTimeout: 5000,
      connectionsCheckingInterval: 30000,
      joinDuplicateHeaders: undefined,
      rejectNonStandardBodyWrites: false,
      _events: [Object: null prototype],
      _eventsCount: 3,
      _maxListeners: undefined,
      _connections: 1,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      noDelay: true,
      keepAlive: false,
      keepAliveInitialDelay: 0,
      highWaterMark: 16384,
      httpAllowHalfOpen: false,
      timeout: 0,
      maxHeadersCount: null,
      maxRequestsPerSocket: 0,
      _connectionKey: '6::::8000',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(async_id_symbol)]: 9,
      [Symbol(kUniqueHeaders)]: null,
      [Symbol(http.server.connections)]: ConnectionsList {},
      [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
        _idleTimeout: 30000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 1319,
        _onTimeout: [Function: bound checkConnections],
        _timerArgs: undefined,
        _repeat: 30000,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 11,
        [Symbol(triggerId)]: 10
      }
    },
    _server: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      requestTimeout: 300000,
      headersTimeout: 60000,
      keepAliveTimeout: 5000,
      connectionsCheckingInterval: 30000,
      joinDuplicateHeaders: undefined,
      rejectNonStandardBodyWrites: false,
      _events: [Object: null prototype],
      _eventsCount: 3,
      _maxListeners: undefined,
      _connections: 1,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      noDelay: true,
      keepAlive: false,
      keepAliveInitialDelay: 0,
      highWaterMark: 16384,
      httpAllowHalfOpen: false,
      timeout: 0,
      maxHeadersCount: null,
      maxRequestsPerSocket: 0,
      _connectionKey: '6::::8000',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(async_id_symbol)]: 9,
      [Symbol(kUniqueHeaders)]: null,
      [Symbol(http.server.connections)]: ConnectionsList {},
      [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
        _idleTimeout: 30000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 1319,
        _onTimeout: [Function: bound checkConnections],
        _timerArgs: undefined,
        _repeat: 30000,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 11,
        [Symbol(triggerId)]: 10
      }
    },
    parser: HTTPParser {
      '0': null,
      '1': [Function: parserOnHeaders],
      '2': [Function: parserOnHeadersComplete],
      '3': [Function: parserOnBody],
      '4': [Function: parserOnMessageComplete],
      '5': [Function: bound onParserExecute],
      '6': [Function: bound onParserTimeout],
      _headers: [],
      _url: '',
      socket: [Circular *1],
      incoming: [Circular *2],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      joinDuplicateHeaders: null,
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    setEncoding: [Function: socketSetEncoding],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      _closed: false,
      socket: [Circular *1],
      _header: null,
      _keepAliveTimeout: 5000,
      _onPendingData: [Function: bound updateOutgoingData],
      req: [Circular *2],
      _sent100: false,
      _expect_continue: false,
      _maxRequestsPerSocket: 0,
      locals: [Object: null prototype] {},
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 16384,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    [Symbol(async_id_symbol)]: 58,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular *1]
    },
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: null,
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kSetNoDelay)]: true,
    [Symbol(kSetKeepAlive)]: false,
    [Symbol(kSetKeepAliveInitialDelay)]: 0,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  _consuming: false,
  _dumped: false,
  next: [Function: next],
  baseUrl: '/api/attachments',
  originalUrl: '/api/attachments/object/?delete=path/toami_me_vale_verga_meme.gif',
  _parsedUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: '?delete=path/toami_me_vale_verga_meme.gif',
    query: 'delete=path/toami_me_vale_verga_meme.gif',
    pathname: '/object/',
    path: '/object/?delete=path/toami_me_vale_verga_meme.gif',
    href: '/object/?delete=path/toami_me_vale_verga_meme.gif',
    _raw: '/object/?delete=path/toami_me_vale_verga_meme.gif'
  },
  params: {},
  query: { delete: 'path/toami_me_vale_verga_meme.gif' },
  res: <ref *3> ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    _closed: false,
    socket: <ref *1> Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [Circular *3],
      [Symbol(async_id_symbol)]: 58,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _keepAliveTimeout: 5000,
    _onPendingData: [Function: bound updateOutgoingData],
    req: [Circular *2],
    _sent100: false,
    _expect_continue: false,
    _maxRequestsPerSocket: 0,
    locals: [Object: null prototype] {},
    [Symbol(kCapture)]: false,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array],
      vary: [Array],
      'access-control-allow-credentials': [Array]
    },
    [Symbol(errored)]: null,
    [Symbol(kHighWaterMark)]: 16384,
    [Symbol(kRejectNonStandardBodyWrites)]: false,
    [Symbol(kUniqueHeaders)]: null
  },
  body: {},
  route: Route {
    path: '/object',
    stack: [ [Layer] ],
    methods: { delete: true }
  },
  [Symbol(kCapture)]: false,
  [Symbol(kHeaders)]: {
    'user-agent': 'PostmanRuntime/7.36.0',
    accept: '*/*',
    'cache-control': 'no-cache',
    'postman-token': 'a84ba0e3-7218-449b-9306-110c928a113a',
    host: 'ger-server.local:8000',
    'accept-encoding': 'gzip, deflate, br',
    connection: 'keep-alive',
    'content-type': 'multipart/form-data; boundary=--------------------------889813684370524394215371',
    'content-length': '7745'
  },
  [Symbol(kHeadersCount)]: 18,
  [Symbol(kTrailers)]: null,
  [Symbol(kTrailersCount)]: 0
}
{
  error: TypeError: Converting circular structure to JSON
      --> starting at object with constructor 'Socket'
      |     property 'parser' -> object with constructor 'HTTPParser'
      --- property 'socket' closes the circle
      at JSON.stringify (<anonymous>)
      at stringify (/usr/src/app/node_modules/express/lib/response.js:1150:12)
      at ServerResponse.json (/usr/src/app/node_modules/express/lib/response.js:271:14)
      at ServerResponse.send (/usr/src/app/node_modules/express/lib/response.js:162:21)
      at /usr/src/app/dist/controllers/AttachmentController.js:185:13
      at Generator.next (<anonymous>)
      at /usr/src/app/dist/controllers/AttachmentController.js:31:71
      at new Promise (<anonymous>)
      at __awaiter (/usr/src/app/dist/controllers/AttachmentController.js:27:12)
      at deleteObject (/usr/src/app/dist/controllers/AttachmentController.js:180:36)
}
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
<ref *2> IncomingMessage {
  _readableState: ReadableState {
    state: 137264,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: null,
    errored: null,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: null
  },
  _events: [Object: null prototype] {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket: <ref *1> Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _closeAfterHandlingError: false,
    _readableState: ReadableState {
      state: 4184,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: [],
      flowing: true,
      errored: null,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      buffered: [],
      bufferedIndex: 0,
      allBuffers: true,
      allNoop: true,
      pendingcb: 0,
      constructed: true,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: true,
      errored: null,
      closed: false,
      closeEmitted: false,
      [Symbol(kOnFinished)]: []
    },
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      requestTimeout: 300000,
      headersTimeout: 60000,
      keepAliveTimeout: 5000,
      connectionsCheckingInterval: 30000,
      joinDuplicateHeaders: undefined,
      rejectNonStandardBodyWrites: false,
      _events: [Object: null prototype],
      _eventsCount: 3,
      _maxListeners: undefined,
      _connections: 1,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      noDelay: true,
      keepAlive: false,
      keepAliveInitialDelay: 0,
      highWaterMark: 16384,
      httpAllowHalfOpen: false,
      timeout: 0,
      maxHeadersCount: null,
      maxRequestsPerSocket: 0,
      _connectionKey: '6::::8000',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(async_id_symbol)]: 9,
      [Symbol(kUniqueHeaders)]: null,
      [Symbol(http.server.connections)]: ConnectionsList {},
      [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
        _idleTimeout: 30000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 1338,
        _onTimeout: [Function: bound checkConnections],
        _timerArgs: undefined,
        _repeat: 30000,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 11,
        [Symbol(triggerId)]: 10
      }
    },
    _server: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      requestTimeout: 300000,
      headersTimeout: 60000,
      keepAliveTimeout: 5000,
      connectionsCheckingInterval: 30000,
      joinDuplicateHeaders: undefined,
      rejectNonStandardBodyWrites: false,
      _events: [Object: null prototype],
      _eventsCount: 3,
      _maxListeners: undefined,
      _connections: 1,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      noDelay: true,
      keepAlive: false,
      keepAliveInitialDelay: 0,
      highWaterMark: 16384,
      httpAllowHalfOpen: false,
      timeout: 0,
      maxHeadersCount: null,
      maxRequestsPerSocket: 0,
      _connectionKey: '6::::8000',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(async_id_symbol)]: 9,
      [Symbol(kUniqueHeaders)]: null,
      [Symbol(http.server.connections)]: ConnectionsList {},
      [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
        _idleTimeout: 30000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 1338,
        _onTimeout: [Function: bound checkConnections],
        _timerArgs: undefined,
        _repeat: 30000,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 11,
        [Symbol(triggerId)]: 10
      }
    },
    parser: HTTPParser {
      '0': null,
      '1': [Function: parserOnHeaders],
      '2': [Function: parserOnHeadersComplete],
      '3': [Function: parserOnBody],
      '4': [Function: parserOnMessageComplete],
      '5': [Function: bound onParserExecute],
      '6': [Function: bound onParserTimeout],
      _headers: [],
      _url: '',
      socket: [Circular *1],
      incoming: [Circular *2],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      joinDuplicateHeaders: null,
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    setEncoding: [Function: socketSetEncoding],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      _closed: false,
      socket: [Circular *1],
      _header: null,
      _keepAliveTimeout: 5000,
      _onPendingData: [Function: bound updateOutgoingData],
      req: [Circular *2],
      _sent100: false,
      _expect_continue: false,
      _maxRequestsPerSocket: 0,
      locals: [Object: null prototype] {},
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 16384,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    [Symbol(async_id_symbol)]: 58,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular *1]
    },
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: null,
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kSetNoDelay)]: true,
    [Symbol(kSetKeepAlive)]: false,
    [Symbol(kSetKeepAliveInitialDelay)]: 0,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  rawHeaders: [
    'User-Agent',
    'PostmanRuntime/7.36.0',
    'Accept',
    '*/*',
    'Cache-Control',
    'no-cache',
    'Postman-Token',
    'a3e527cd-198b-41f4-8230-8d15e2c052ba',
    'Host',
    'ger-server.local:8000',
    'Accept-Encoding',
    'gzip, deflate, br',
    'Connection',
    'keep-alive',
    'Content-Type',
    'multipart/form-data; boundary=--------------------------114639723063320849085208',
    'Content-Length',
    '7745'
  ],
  rawTrailers: [],
  joinDuplicateHeaders: null,
  aborted: false,
  upgrade: false,
  url: '/object/?delete=path/toami_me_vale_verga_meme.gif',
  method: 'DELETE',
  statusCode: null,
  statusMessage: null,
  client: <ref *1> Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _closeAfterHandlingError: false,
    _readableState: ReadableState {
      state: 4184,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: [],
      flowing: true,
      errored: null,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      buffered: [],
      bufferedIndex: 0,
      allBuffers: true,
      allNoop: true,
      pendingcb: 0,
      constructed: true,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: true,
      errored: null,
      closed: false,
      closeEmitted: false,
      [Symbol(kOnFinished)]: []
    },
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      requestTimeout: 300000,
      headersTimeout: 60000,
      keepAliveTimeout: 5000,
      connectionsCheckingInterval: 30000,
      joinDuplicateHeaders: undefined,
      rejectNonStandardBodyWrites: false,
      _events: [Object: null prototype],
      _eventsCount: 3,
      _maxListeners: undefined,
      _connections: 1,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      noDelay: true,
      keepAlive: false,
      keepAliveInitialDelay: 0,
      highWaterMark: 16384,
      httpAllowHalfOpen: false,
      timeout: 0,
      maxHeadersCount: null,
      maxRequestsPerSocket: 0,
      _connectionKey: '6::::8000',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(async_id_symbol)]: 9,
      [Symbol(kUniqueHeaders)]: null,
      [Symbol(http.server.connections)]: ConnectionsList {},
      [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
        _idleTimeout: 30000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 1338,
        _onTimeout: [Function: bound checkConnections],
        _timerArgs: undefined,
        _repeat: 30000,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 11,
        [Symbol(triggerId)]: 10
      }
    },
    _server: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      requestTimeout: 300000,
      headersTimeout: 60000,
      keepAliveTimeout: 5000,
      connectionsCheckingInterval: 30000,
      joinDuplicateHeaders: undefined,
      rejectNonStandardBodyWrites: false,
      _events: [Object: null prototype],
      _eventsCount: 3,
      _maxListeners: undefined,
      _connections: 1,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      noDelay: true,
      keepAlive: false,
      keepAliveInitialDelay: 0,
      highWaterMark: 16384,
      httpAllowHalfOpen: false,
      timeout: 0,
      maxHeadersCount: null,
      maxRequestsPerSocket: 0,
      _connectionKey: '6::::8000',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(async_id_symbol)]: 9,
      [Symbol(kUniqueHeaders)]: null,
      [Symbol(http.server.connections)]: ConnectionsList {},
      [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
        _idleTimeout: 30000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 1338,
        _onTimeout: [Function: bound checkConnections],
        _timerArgs: undefined,
        _repeat: 30000,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 11,
        [Symbol(triggerId)]: 10
      }
    },
    parser: HTTPParser {
      '0': null,
      '1': [Function: parserOnHeaders],
      '2': [Function: parserOnHeadersComplete],
      '3': [Function: parserOnBody],
      '4': [Function: parserOnMessageComplete],
      '5': [Function: bound onParserExecute],
      '6': [Function: bound onParserTimeout],
      _headers: [],
      _url: '',
      socket: [Circular *1],
      incoming: [Circular *2],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      joinDuplicateHeaders: null,
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    setEncoding: [Function: socketSetEncoding],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      _closed: false,
      socket: [Circular *1],
      _header: null,
      _keepAliveTimeout: 5000,
      _onPendingData: [Function: bound updateOutgoingData],
      req: [Circular *2],
      _sent100: false,
      _expect_continue: false,
      _maxRequestsPerSocket: 0,
      locals: [Object: null prototype] {},
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 16384,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    [Symbol(async_id_symbol)]: 58,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular *1]
    },
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: null,
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kSetNoDelay)]: true,
    [Symbol(kSetKeepAlive)]: false,
    [Symbol(kSetKeepAliveInitialDelay)]: 0,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  _consuming: false,
  _dumped: false,
  next: [Function: next],
  baseUrl: '/api/attachments',
  originalUrl: '/api/attachments/object/?delete=path/toami_me_vale_verga_meme.gif',
  _parsedUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: '?delete=path/toami_me_vale_verga_meme.gif',
    query: 'delete=path/toami_me_vale_verga_meme.gif',
    pathname: '/object/',
    path: '/object/?delete=path/toami_me_vale_verga_meme.gif',
    href: '/object/?delete=path/toami_me_vale_verga_meme.gif',
    _raw: '/object/?delete=path/toami_me_vale_verga_meme.gif'
  },
  params: {},
  query: { delete: 'path/toami_me_vale_verga_meme.gif' },
  res: <ref *3> ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    _closed: false,
    socket: <ref *1> Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [Circular *3],
      [Symbol(async_id_symbol)]: 58,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _keepAliveTimeout: 5000,
    _onPendingData: [Function: bound updateOutgoingData],
    req: [Circular *2],
    _sent100: false,
    _expect_continue: false,
    _maxRequestsPerSocket: 0,
    locals: [Object: null prototype] {},
    [Symbol(kCapture)]: false,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array],
      vary: [Array],
      'access-control-allow-credentials': [Array]
    },
    [Symbol(errored)]: null,
    [Symbol(kHighWaterMark)]: 16384,
    [Symbol(kRejectNonStandardBodyWrites)]: false,
    [Symbol(kUniqueHeaders)]: null
  },
  body: {},
  route: Route {
    path: '/object',
    stack: [ [Layer] ],
    methods: { delete: true }
  },
  [Symbol(kCapture)]: false,
  [Symbol(kHeaders)]: {
    'user-agent': 'PostmanRuntime/7.36.0',
    accept: '*/*',
    'cache-control': 'no-cache',
    'postman-token': 'a3e527cd-198b-41f4-8230-8d15e2c052ba',
    host: 'ger-server.local:8000',
    'accept-encoding': 'gzip, deflate, br',
    connection: 'keep-alive',
    'content-type': 'multipart/form-data; boundary=--------------------------114639723063320849085208',
    'content-length': '7745'
  },
  [Symbol(kHeadersCount)]: 18,
  [Symbol(kTrailers)]: null,
  [Symbol(kTrailersCount)]: 0
}
{
  error: Error: No value provided for input HTTP label: Key.
      at resolvedPath (/usr/src/app/node_modules/@smithy/smithy-client/dist-cjs/resolve-path.js:19:15)
      at /usr/src/app/node_modules/@smithy/core/dist-cjs/protocols/requestBuilder.js:51:58
      at RequestBuilder.build (/usr/src/app/node_modules/@smithy/core/dist-cjs/protocols/requestBuilder.js:26:13)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
}
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{
  error: Error: No value provided for input HTTP label: Key.
      at resolvedPath (/usr/src/app/node_modules/@smithy/smithy-client/dist-cjs/resolve-path.js:19:15)
      at /usr/src/app/node_modules/@smithy/core/dist-cjs/protocols/requestBuilder.js:51:58
      at RequestBuilder.build (/usr/src/app/node_modules/@smithy/core/dist-cjs/protocols/requestBuilder.js:26:13)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
}
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{
  error: Error: No value provided for input HTTP label: Key.
      at resolvedPath (/usr/src/app/node_modules/@smithy/smithy-client/dist-cjs/resolve-path.js:19:15)
      at /usr/src/app/node_modules/@smithy/core/dist-cjs/protocols/requestBuilder.js:51:58
      at RequestBuilder.build (/usr/src/app/node_modules/@smithy/core/dist-cjs/protocols/requestBuilder.js:26:13)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
}
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{
  error: Error: No value provided for input HTTP label: Key.
      at resolvedPath (/usr/src/app/node_modules/@smithy/smithy-client/dist-cjs/resolve-path.js:19:15)
      at /usr/src/app/node_modules/@smithy/core/dist-cjs/protocols/requestBuilder.js:51:58
      at RequestBuilder.build (/usr/src/app/node_modules/@smithy/core/dist-cjs/protocols/requestBuilder.js:26:13)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
}
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{
  error: Error: No value provided for input HTTP label: Key.
      at resolvedPath (/usr/src/app/node_modules/@smithy/smithy-client/dist-cjs/resolve-path.js:19:15)
      at /usr/src/app/node_modules/@smithy/core/dist-cjs/protocols/requestBuilder.js:51:58
      at RequestBuilder.build (/usr/src/app/node_modules/@smithy/core/dist-cjs/protocols/requestBuilder.js:26:13)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
}
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{
  error: Error: No value provided for input HTTP label: Key.
      at resolvedPath (/usr/src/app/node_modules/@smithy/smithy-client/dist-cjs/resolve-path.js:19:15)
      at /usr/src/app/node_modules/@smithy/core/dist-cjs/protocols/requestBuilder.js:51:58
      at RequestBuilder.build (/usr/src/app/node_modules/@smithy/core/dist-cjs/protocols/requestBuilder.js:26:13)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
}
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{ obj_path: undefined }
{
  error: Error: No value provided for input HTTP label: Key.
      at resolvedPath (/usr/src/app/node_modules/@smithy/smithy-client/dist-cjs/resolve-path.js:19:15)
      at /usr/src/app/node_modules/@smithy/core/dist-cjs/protocols/requestBuilder.js:51:58
      at RequestBuilder.build (/usr/src/app/node_modules/@smithy/core/dist-cjs/protocols/requestBuilder.js:26:13)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
}
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{ obj_path: undefined }
{
  error: Error: No value provided for input HTTP label: Key.
      at resolvedPath (/usr/src/app/node_modules/@smithy/smithy-client/dist-cjs/resolve-path.js:19:15)
      at /usr/src/app/node_modules/@smithy/core/dist-cjs/protocols/requestBuilder.js:51:58
      at RequestBuilder.build (/usr/src/app/node_modules/@smithy/core/dist-cjs/protocols/requestBuilder.js:26:13)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
}
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{ obj_path: { delete: 'path/toami_me_vale_verga_meme.gif' } }
{
  error: TypeError: labelValue.split is not a function
      at resolvedPath (/usr/src/app/node_modules/@smithy/smithy-client/dist-cjs/resolve-path.js:13:18)
      at /usr/src/app/node_modules/@smithy/core/dist-cjs/protocols/requestBuilder.js:51:58
      at RequestBuilder.build (/usr/src/app/node_modules/@smithy/core/dist-cjs/protocols/requestBuilder.js:26:13)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
}
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{ obj_path: 'path/toami_me_vale_verga_meme.gif' }
{
  error: Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client
      at new NodeError (node:internal/errors:405:5)
      at ServerResponse.setHeader (node:_http_outgoing:648:11)
      at ServerResponse.header (/usr/src/app/node_modules/express/lib/response.js:794:10)
      at ServerResponse.send (/usr/src/app/node_modules/express/lib/response.js:174:12)
      at ServerResponse.json (/usr/src/app/node_modules/express/lib/response.js:278:15)
      at /usr/src/app/dist/controllers/AttachmentController.js:193:29
      at Generator.next (<anonymous>)
      at fulfilled (/usr/src/app/dist/controllers/AttachmentController.js:28:58)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
    code: 'ERR_HTTP_HEADERS_SENT'
  }
}
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{ obj_path: 'path/toami_me_vale_verga_meme.gif' }
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{ obj_path: 'files/ami-me-vale-verga-meme.gif' }
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
Try to up a file
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{ obj_path: 'files/ami-me-vale-verga-meme.gif' }
Try to up a file
{ obj_path: '\nfiles/Sin tÃ­tulo (2).pdf\n' }
{ obj_path: 'files/Sin tÃ­tulo (2).pdf' }
Try to up a file
{ obj_path: 'files/apietas_etasdb.sql' }
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{ obj_path: 'files/apietas_etasdb.sql' }
{ obj_path: 'files/apietas_etasdb.sql' }
{ obj_path: 'FVheorlXEAActuE.jpg' }
{ obj_path: 'FVheorlXEAActuE.jpg' }
[33m[nodemon] 3.0.2[39m
[33m[nodemon] to restart at any time, enter `rs`[39m
[33m[nodemon] watching path(s): *.*[39m
[33m[nodemon] watching extensions: js,mjs,cjs,json[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[33m[nodemon] 3.0.2[39m
[33m[nodemon] to restart at any time, enter `rs`[39m
[33m[nodemon] watching path(s): *.*[39m
[33m[nodemon] watching extensions: js,mjs,cjs,json[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{ obj_path: 'FVheorlXEAActuE.jpg' }
{ obj_path: 'files/ami-me-vale-verga-meme.gif' }
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32mGET[39m      /api/users/
[34mPUT[39m      /api/users/:id
[32mGET[39m      /api/users/:id
[33mPOST[39m     /api/users/
[31mDELETE[39m   /api/users/:id
[33mPOST[39m     /api/auth/login
[33mPOST[39m     /api/auth/register
[32mGET[39m      /api/auth/token
[32mGET[39m      /api/auth/
[32mGET[39m      /api/etas/
[32mGET[39m      /api/etas/:id
[32mGET[39m      /api/etas/pending/:id
[32mGET[39m      /api/etas/completed/:id
[32mGET[39m      /api/etas/user/:id
[34mPUT[39m      /api/etas/:id
[33mPOST[39m     /api/etas/
[31mDELETE[39m   /api/etas/:id
[32mGET[39m      /api/passport-sec/
[32mGET[39m      /api/passport-sec/:id
[34mPUT[39m      /api/passport-sec/:id
[31mDELETE[39m   /api/passport-sec/:id
[32mGET[39m      /api/personal-sec/
[32mGET[39m      /api/personal-sec/:id
[34mPUT[39m      /api/personal-sec/:id
[31mDELETE[39m   /api/personal-sec/:id
[32mGET[39m      /api/status-sec/
[32mGET[39m      /api/status-sec/:id
[34mPUT[39m      /api/status-sec/:id
[31mDELETE[39m   /api/status-sec/:id
[32mGET[39m      /api/travel-sec/
[32mGET[39m      /api/travel-sec/:id
[34mPUT[39m      /api/travel-sec/:id
[31mDELETE[39m   /api/travel-sec/:id
[32mGET[39m      /api/payments/
[34mPUT[39m      /api/payments/:id
[33mPOST[39m     /api/payments/
[31mDELETE[39m   /api/payments/:id
[32mGET[39m      /api/payments/stripe/:eta_id/:id/:currency
[33mPOST[39m     /api/payments/converge/:eta_id/:id
[32mGET[39m      /api/payments/:eta_id/success_paid
[32mGET[39m      /api/payments/failed_pay
[33mPOST[39m     /api/payments/conekta
[32mGET[39m      /api/routes/
[32mGET[39m      /api/paymentintents/
[33mPOST[39m     /api/paymentintents/
[32mGET[39m      /api/paymentintents/:id
[34mPUT[39m      /api/paymentintents/:id
[31mDELETE[39m   /api/paymentintents/:id
[32mGET[39m      /api/stripe/products/
[33mPOST[39m     /api/stripe/products/
[32mGET[39m      /api/stripe/products/:id
[34mPUT[39m      /api/stripe/products/:id
[31mDELETE[39m   /api/stripe/products/:id
[33mPOST[39m     /api/stripe/webhooks/
[32mGET[39m      /api/attachments/
[32mGET[39m      /api/attachments/object
[32mGET[39m      /api/attachments/object/preview
[31mDELETE[39m   /api/attachments/object
[33mPOST[39m     /api/attachments/
{
  routelist: [
    { method: 'GET', path: '/api/users/' },
    { method: 'PUT', path: '/api/users/:id' },
    { method: 'GET', path: '/api/users/:id' },
    { method: 'POST', path: '/api/users/' },
    { method: 'DELETE', path: '/api/users/:id' },
    { method: 'POST', path: '/api/auth/login' },
    { method: 'POST', path: '/api/auth/register' },
    { method: 'GET', path: '/api/auth/token' },
    { method: 'GET', path: '/api/auth/' },
    { method: 'GET', path: '/api/etas/' },
    { method: 'GET', path: '/api/etas/:id' },
    { method: 'GET', path: '/api/etas/pending/:id' },
    { method: 'GET', path: '/api/etas/completed/:id' },
    { method: 'GET', path: '/api/etas/user/:id' },
    { method: 'PUT', path: '/api/etas/:id' },
    { method: 'POST', path: '/api/etas/' },
    { method: 'DELETE', path: '/api/etas/:id' },
    { method: 'GET', path: '/api/passport-sec/' },
    { method: 'GET', path: '/api/passport-sec/:id' },
    { method: 'PUT', path: '/api/passport-sec/:id' },
    { method: 'DELETE', path: '/api/passport-sec/:id' },
    { method: 'GET', path: '/api/personal-sec/' },
    { method: 'GET', path: '/api/personal-sec/:id' },
    { method: 'PUT', path: '/api/personal-sec/:id' },
    { method: 'DELETE', path: '/api/personal-sec/:id' },
    { method: 'GET', path: '/api/status-sec/' },
    { method: 'GET', path: '/api/status-sec/:id' },
    { method: 'PUT', path: '/api/status-sec/:id' },
    { method: 'DELETE', path: '/api/status-sec/:id' },
    { method: 'GET', path: '/api/travel-sec/' },
    { method: 'GET', path: '/api/travel-sec/:id' },
    { method: 'PUT', path: '/api/travel-sec/:id' },
    { method: 'DELETE', path: '/api/travel-sec/:id' },
    { method: 'GET', path: '/api/payments/' },
    { method: 'PUT', path: '/api/payments/:id' },
    { method: 'POST', path: '/api/payments/' },
    { method: 'DELETE', path: '/api/payments/:id' },
    {
      method: 'GET',
      path: '/api/payments/stripe/:eta_id/:id/:currency'
    },
    { method: 'POST', path: '/api/payments/converge/:eta_id/:id' },
    { method: 'GET', path: '/api/payments/:eta_id/success_paid' },
    { method: 'GET', path: '/api/payments/failed_pay' },
    { method: 'POST', path: '/api/payments/conekta' },
    { method: 'GET', path: '/api/routes/' },
    { method: 'GET', path: '/api/paymentintents/' },
    { method: 'POST', path: '/api/paymentintents/' },
    { method: 'GET', path: '/api/paymentintents/:id' },
    { method: 'PUT', path: '/api/paymentintents/:id' },
    { method: 'DELETE', path: '/api/paymentintents/:id' },
    { method: 'GET', path: '/api/stripe/products/' },
    { method: 'POST', path: '/api/stripe/products/' },
    { method: 'GET', path: '/api/stripe/products/:id' },
    { method: 'PUT', path: '/api/stripe/products/:id' },
    { method: 'DELETE', path: '/api/stripe/products/:id' },
    { method: 'POST', path: '/api/stripe/webhooks/' },
    { method: 'GET', path: '/api/attachments/' },
    { method: 'GET', path: '/api/attachments/object' },
    { method: 'GET', path: '/api/attachments/object/preview' },
    { method: 'DELETE', path: '/api/attachments/object' },
    { method: 'POST', path: '/api/attachments/' }
  ]
}
[32mGET[39m      /api/users/
[34mPUT[39m      /api/users/:id
[32mGET[39m      /api/users/:id
[33mPOST[39m     /api/users/
[31mDELETE[39m   /api/users/:id
[33mPOST[39m     /api/auth/login
[33mPOST[39m     /api/auth/register
[32mGET[39m      /api/auth/token
[32mGET[39m      /api/auth/
[32mGET[39m      /api/etas/
[32mGET[39m      /api/etas/:id
[32mGET[39m      /api/etas/pending/:id
[32mGET[39m      /api/etas/completed/:id
[32mGET[39m      /api/etas/user/:id
[34mPUT[39m      /api/etas/:id
[33mPOST[39m     /api/etas/
[31mDELETE[39m   /api/etas/:id
[32mGET[39m      /api/passport-sec/
[32mGET[39m      /api/passport-sec/:id
[34mPUT[39m      /api/passport-sec/:id
[31mDELETE[39m   /api/passport-sec/:id
[32mGET[39m      /api/personal-sec/
[32mGET[39m      /api/personal-sec/:id
[34mPUT[39m      /api/personal-sec/:id
[31mDELETE[39m   /api/personal-sec/:id
[32mGET[39m      /api/status-sec/
[32mGET[39m      /api/status-sec/:id
[34mPUT[39m      /api/status-sec/:id
[31mDELETE[39m   /api/status-sec/:id
[32mGET[39m      /api/travel-sec/
[32mGET[39m      /api/travel-sec/:id
[34mPUT[39m      /api/travel-sec/:id
[31mDELETE[39m   /api/travel-sec/:id
[32mGET[39m      /api/payments/
[34mPUT[39m      /api/payments/:id
[33mPOST[39m     /api/payments/
[31mDELETE[39m   /api/payments/:id
[32mGET[39m      /api/payments/stripe/:eta_id/:id/:currency
[33mPOST[39m     /api/payments/converge/:eta_id/:id
[32mGET[39m      /api/payments/:eta_id/success_paid
[32mGET[39m      /api/payments/failed_pay
[33mPOST[39m     /api/payments/conekta
[32mGET[39m      /api/routes/
[32mGET[39m      /api/paymentintents/
[33mPOST[39m     /api/paymentintents/
[32mGET[39m      /api/paymentintents/:id
[34mPUT[39m      /api/paymentintents/:id
[31mDELETE[39m   /api/paymentintents/:id
[32mGET[39m      /api/stripe/products/
[33mPOST[39m     /api/stripe/products/
[32mGET[39m      /api/stripe/products/:id
[34mPUT[39m      /api/stripe/products/:id
[31mDELETE[39m   /api/stripe/products/:id
[33mPOST[39m     /api/stripe/webhooks/
[32mGET[39m      /api/attachments/
[32mGET[39m      /api/attachments/object
[32mGET[39m      /api/attachments/object/preview
[31mDELETE[39m   /api/attachments/object
[33mPOST[39m     /api/attachments/
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
newPaymentLink
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
newPaymentLink
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
newPaymentLink
{
  error: Error: Sorry, `crearlinkDePago` does not appear to be a valid operation on this API.
      at Proxy.<anonymous> (/usr/src/app/node_modules/api/dist/index.js:179:47)
      at step (/usr/src/app/node_modules/api/dist/index.js:33:23)
      at Object.next (/usr/src/app/node_modules/api/dist/index.js:14:53)
      at fulfilled (/usr/src/app/node_modules/api/dist/index.js:5:58)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
}
newPaymentLink
{
  error: Error: Sorry, `crearlinkDePago` does not appear to be a valid operation on this API.
      at Proxy.<anonymous> (/usr/src/app/node_modules/api/dist/index.js:172:47)
      at step (/usr/src/app/node_modules/api/dist/index.js:33:23)
      at Object.next (/usr/src/app/node_modules/api/dist/index.js:14:53)
      at /usr/src/app/node_modules/api/dist/index.js:8:71
      at new Promise (<anonymous>)
      at __awaiter (/usr/src/app/node_modules/api/dist/index.js:4:12)
      at Proxy.accessorHandler (/usr/src/app/node_modules/api/dist/index.js:164:28)
      at /usr/src/app/dist/controllers/ConektaController.js:37:34
      at Generator.next (<anonymous>)
      at /usr/src/app/dist/controllers/ConektaController.js:8:71
}
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{
  result: '{"details":[{"debug_message":"The route requested does not exist.","message":"La ruta de tu petición no ha sido encontrada.","param":null,"code":"conekta.errors.resource_not_found.unknown_route"}],"object":"error","type":"resource_not_found_error","log_id":"65a1830a49a82b00198d0b3f"}'
}
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{
  result: '{"details":[{"debug_message":"Out of range for the parameter \\"expires_at\\". Should be between 1 hours and 365 days.","message":"Fuera de rango permitido para \\"expires_at\\". Debe de estar dentro de 1 hora - 365 dias","param":"expires_at","code":"conekta.errors.parameter_validation.expires_at.out_of_range"}],"object":"error","type":"parameter_validation_error","log_id":"65a18345fede9b001cba4d38"}'
}
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{
  result: '{"details":[{"debug_message":"Out of range for the parameter \\"expires_at\\". Should be between 1 hours and 365 days.","message":"Fuera de rango permitido para \\"expires_at\\". Debe de estar dentro de 1 hora - 365 dias","param":"expires_at","code":"conekta.errors.parameter_validation.expires_at.out_of_range"}],"object":"error","type":"parameter_validation_error","log_id":"65a18493fede9b001af2db51"}'
}
{
  error: Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client
      at new NodeError (node:internal/errors:405:5)
      at ServerResponse.setHeader (node:_http_outgoing:648:11)
      at ServerResponse.header (/usr/src/app/node_modules/express/lib/response.js:794:10)
      at ServerResponse.send (/usr/src/app/node_modules/express/lib/response.js:174:12)
      at /usr/src/app/dist/controllers/ConektaController.js:79:13
      at Generator.next (<anonymous>)
      at fulfilled (/usr/src/app/dist/controllers/ConektaController.js:5:58)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
    code: 'ERR_HTTP_HEADERS_SENT'
  }
}
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{
  error: TypeError [ERR_INVALID_ARG_TYPE]: The first argument must be of type string or an instance of Buffer, ArrayBuffer, or Array or an Array-like Object. Received function getSeconds
      at new NodeError (node:internal/errors:405:5)
      at Function.from (node:buffer:325:9)
      at ServerResponse.send (/usr/src/app/node_modules/express/lib/response.js:193:22)
      at /usr/src/app/dist/controllers/ConektaController.js:53:13
      at Generator.next (<anonymous>)
      at /usr/src/app/dist/controllers/ConektaController.js:8:71
      at new Promise (<anonymous>)
      at __awaiter (/usr/src/app/dist/controllers/ConektaController.js:4:12)
      at newPaymentLink (/usr/src/app/dist/controllers/ConektaController.js:23:38)
      at Layer.handle [as handle_request] (/usr/src/app/node_modules/express/lib/router/layer.js:95:5) {
    code: 'ERR_INVALID_ARG_TYPE'
  }
}
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{
  error: RangeError [ERR_HTTP_INVALID_STATUS_CODE]: Invalid status code: 54
      at new NodeError (node:internal/errors:405:5)
      at ServerResponse.writeHead (node:_http_server:347:11)
      at ServerResponse._implicitHeader (node:_http_server:338:8)
      at ServerResponse.end (node:_http_outgoing:1042:10)
      at ServerResponse.send (/usr/src/app/node_modules/express/lib/response.js:232:10)
      at /usr/src/app/dist/controllers/ConektaController.js:53:13
      at Generator.next (<anonymous>)
      at /usr/src/app/dist/controllers/ConektaController.js:8:71
      at new Promise (<anonymous>)
      at __awaiter (/usr/src/app/dist/controllers/ConektaController.js:4:12) {
    code: 'ERR_HTTP_INVALID_STATUS_CODE'
  }
}
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{
  result: '{"details":[{"debug_message":"Out of range for the parameter \\"expires_at\\". Should be between 1 hours and 365 days.","message":"Fuera de rango permitido para \\"expires_at\\". Debe de estar dentro de 1 hora - 365 dias","param":"expires_at","code":"conekta.errors.parameter_validation.expires_at.out_of_range"}],"object":"error","type":"parameter_validation_error","log_id":"65a184ce33df8d0016f79e8c"}'
}
{
  error: Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client
      at new NodeError (node:internal/errors:405:5)
      at ServerResponse.setHeader (node:_http_outgoing:648:11)
      at ServerResponse.header (/usr/src/app/node_modules/express/lib/response.js:794:10)
      at ServerResponse.send (/usr/src/app/node_modules/express/lib/response.js:174:12)
      at /usr/src/app/dist/controllers/ConektaController.js:79:13
      at Generator.next (<anonymous>)
      at fulfilled (/usr/src/app/dist/controllers/ConektaController.js:5:58)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
    code: 'ERR_HTTP_HEADERS_SENT'
  }
}
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{
  error: TypeError: today.addDays is not a function
      at /usr/src/app/dist/controllers/ConektaController.js:53:36
      at Generator.next (<anonymous>)
      at /usr/src/app/dist/controllers/ConektaController.js:8:71
      at new Promise (<anonymous>)
      at __awaiter (/usr/src/app/dist/controllers/ConektaController.js:4:12)
      at newPaymentLink (/usr/src/app/dist/controllers/ConektaController.js:23:38)
      at Layer.handle [as handle_request] (/usr/src/app/node_modules/express/lib/router/layer.js:95:5)
      at next (/usr/src/app/node_modules/express/lib/router/route.js:144:13)
      at Route.dispatch (/usr/src/app/node_modules/express/lib/router/route.js:114:3)
      at Layer.handle [as handle_request] (/usr/src/app/node_modules/express/lib/router/layer.js:95:5)
}
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{
  error: TypeError: date.addDays is not a function
      at /usr/src/app/dist/controllers/ConektaController.js:53:26
      at Generator.next (<anonymous>)
      at /usr/src/app/dist/controllers/ConektaController.js:8:71
      at new Promise (<anonymous>)
      at __awaiter (/usr/src/app/dist/controllers/ConektaController.js:4:12)
      at newPaymentLink (/usr/src/app/dist/controllers/ConektaController.js:23:38)
      at Layer.handle [as handle_request] (/usr/src/app/node_modules/express/lib/router/layer.js:95:5)
      at next (/usr/src/app/node_modules/express/lib/router/route.js:144:13)
      at Route.dispatch (/usr/src/app/node_modules/express/lib/router/route.js:114:3)
      at Layer.handle [as handle_request] (/usr/src/app/node_modules/express/lib/router/layer.js:95:5)
}
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
2024-01-17T18:31:31.281Z
{
  result: '{"details":[{"debug_message":"Out of range for the parameter \\"expires_at\\". Should be between 1 hours and 365 days.","message":"Fuera de rango permitido para \\"expires_at\\". Debe de estar dentro de 1 hora - 365 dias","param":"expires_at","code":"conekta.errors.parameter_validation.expires_at.out_of_range"}],"object":"error","type":"parameter_validation_error","log_id":"65a18583e338bc0018cdad54"}'
}
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
2024-01-17T18:32:06.962Z
{
  result: '{"details":[{"debug_message":"Out of range for the parameter \\"expires_at\\". Should be between 1 hours and 365 days.","message":"Fuera de rango permitido para \\"expires_at\\". Debe de estar dentro de 1 hora - 365 dias","param":"expires_at","code":"conekta.errors.parameter_validation.expires_at.out_of_range"}],"object":"error","type":"parameter_validation_error","log_id":"65a185a7fede9b001cba63a4"}'
}
{
  error: Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client
      at new NodeError (node:internal/errors:405:5)
      at ServerResponse.setHeader (node:_http_outgoing:648:11)
      at ServerResponse.header (/usr/src/app/node_modules/express/lib/response.js:794:10)
      at ServerResponse.send (/usr/src/app/node_modules/express/lib/response.js:174:12)
      at /usr/src/app/dist/controllers/ConektaController.js:85:13
      at Generator.next (<anonymous>)
      at fulfilled (/usr/src/app/dist/controllers/ConektaController.js:5:58)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
    code: 'ERR_HTTP_HEADERS_SENT'
  }
}
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{
  error: TypeError: date.addDays is not a function
      at /usr/src/app/dist/controllers/ConektaController.js:58:23
      at Generator.next (<anonymous>)
      at /usr/src/app/dist/controllers/ConektaController.js:8:71
      at new Promise (<anonymous>)
      at __awaiter (/usr/src/app/dist/controllers/ConektaController.js:4:12)
      at newPaymentLink (/usr/src/app/dist/controllers/ConektaController.js:23:38)
      at Layer.handle [as handle_request] (/usr/src/app/node_modules/express/lib/router/layer.js:95:5)
      at next (/usr/src/app/node_modules/express/lib/router/route.js:144:13)
      at Route.dispatch (/usr/src/app/node_modules/express/lib/router/route.js:114:3)
      at Layer.handle [as handle_request] (/usr/src/app/node_modules/express/lib/router/layer.js:95:5)
}
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
2024-01-17T18:32:39.188Z
{
  result: '{"details":[{"debug_message":"Out of range for the parameter \\"expires_at\\". Should be between 1 hours and 365 days.","message":"Fuera de rango permitido para \\"expires_at\\". Debe de estar dentro de 1 hora - 365 dias","param":"expires_at","code":"conekta.errors.parameter_validation.expires_at.out_of_range"}],"object":"error","type":"parameter_validation_error","log_id":"65a185c757139f00188af6cc"}'
}
{
  error: Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client
      at new NodeError (node:internal/errors:405:5)
      at ServerResponse.setHeader (node:_http_outgoing:648:11)
      at ServerResponse.header (/usr/src/app/node_modules/express/lib/response.js:794:10)
      at ServerResponse.send (/usr/src/app/node_modules/express/lib/response.js:174:12)
      at /usr/src/app/dist/controllers/ConektaController.js:85:13
      at Generator.next (<anonymous>)
      at fulfilled (/usr/src/app/dist/controllers/ConektaController.js:5:58)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
    code: 'ERR_HTTP_HEADERS_SENT'
  }
}
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{
  result: '{"details":[{"debug_message":"Out of range for the parameter \\"expires_at\\". Should be between 1 hours and 365 days.","message":"Fuera de rango permitido para \\"expires_at\\". Debe de estar dentro de 1 hora - 365 dias","param":"expires_at","code":"conekta.errors.parameter_validation.expires_at.out_of_range"}],"object":"error","type":"parameter_validation_error","log_id":"65a186237b5035001ccfa837"}'
}
{
  error: Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client
      at new NodeError (node:internal/errors:405:5)
      at ServerResponse.setHeader (node:_http_outgoing:648:11)
      at ServerResponse.header (/usr/src/app/node_modules/express/lib/response.js:794:10)
      at ServerResponse.send (/usr/src/app/node_modules/express/lib/response.js:174:12)
      at /usr/src/app/dist/controllers/ConektaController.js:87:13
      at Generator.next (<anonymous>)
      at fulfilled (/usr/src/app/dist/controllers/ConektaController.js:5:58)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
    code: 'ERR_HTTP_HEADERS_SENT'
  }
}
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{
  result: '{"id":"0259815a-7716-47b3-a672-2ed300322cbe","name":"Payment Link Name","livemode":false,"emails_sent":0,"success_url":"","failure_url":"","paid_payments_count":0,"sms_sent":0,"status":"Issued","type":"PaymentLink","recurrent":false,"starts_at":1705039200,"expires_at":1705516520,"allowed_payment_methods":["cash","card"],"exclude_card_networks":[],"needs_shipping_contact":false,"monthly_installments_options":[3,6,9,12],"monthly_installments_enabled":true,"force_3ds_flow":false,"metadata":{},"can_not_expire":false,"object":"checkout","is_redirect_on_failure":false,"slug":"0259815a771647b3a6722ed300322cbe","url":"https://pay.conekta.com/link/0259815a771647b3a6722ed300322cbe"}'
}
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{
  result: '{"details":[{"debug_message":"Out of range for the parameter \\"expires_at\\". Should be between 1 hours and 365 days.","message":"Fuera de rango permitido para \\"expires_at\\". Debe de estar dentro de 1 hora - 365 dias","param":"expires_at","code":"conekta.errors.parameter_validation.expires_at.out_of_range"}],"object":"error","type":"parameter_validation_error","log_id":"65a18680e338bc001bc77294"}'
}
{
  error: Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client
      at new NodeError (node:internal/errors:405:5)
      at ServerResponse.setHeader (node:_http_outgoing:648:11)
      at ServerResponse.header (/usr/src/app/node_modules/express/lib/response.js:794:10)
      at ServerResponse.send (/usr/src/app/node_modules/express/lib/response.js:174:12)
      at /usr/src/app/dist/controllers/ConektaController.js:87:13
      at Generator.next (<anonymous>)
      at fulfilled (/usr/src/app/dist/controllers/ConektaController.js:5:58)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
    code: 'ERR_HTTP_HEADERS_SENT'
  }
}
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{
  result: '{"id":"7f93d39d-6142-4274-805d-70cf3ba9588a","name":"Payment Link Name","livemode":false,"emails_sent":0,"success_url":"","failure_url":"","paid_payments_count":0,"sms_sent":0,"status":"Issued","type":"PaymentLink","recurrent":false,"starts_at":1705039200,"expires_at":1705516585,"allowed_payment_methods":["cash","card"],"exclude_card_networks":[],"needs_shipping_contact":false,"monthly_installments_options":[3,6,9,12],"monthly_installments_enabled":true,"force_3ds_flow":false,"metadata":{},"can_not_expire":false,"object":"checkout","is_redirect_on_failure":false,"slug":"7f93d39d61424274805d70cf3ba9588a","url":"https://pay.conekta.com/link/7f93d39d61424274805d70cf3ba9588a"}'
}
{
  error: Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client
      at new NodeError (node:internal/errors:405:5)
      at ServerResponse.setHeader (node:_http_outgoing:648:11)
      at ServerResponse.header (/usr/src/app/node_modules/express/lib/response.js:794:10)
      at ServerResponse.send (/usr/src/app/node_modules/express/lib/response.js:174:12)
      at /usr/src/app/dist/controllers/ConektaController.js:87:13
      at Generator.next (<anonymous>)
      at fulfilled (/usr/src/app/dist/controllers/ConektaController.js:5:58)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
    code: 'ERR_HTTP_HEADERS_SENT'
  }
}
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{
  result: '{"id":"30739425-e310-49ba-a0ef-4ff73022cc1d","name":"Payment Link Name","livemode":false,"emails_sent":0,"success_url":"","failure_url":"","paid_payments_count":0,"sms_sent":0,"status":"Issued","type":"PaymentLink","recurrent":false,"starts_at":1705039200,"expires_at":1705516613,"allowed_payment_methods":["cash","card"],"exclude_card_networks":[],"needs_shipping_contact":false,"monthly_installments_options":[3,6,9,12],"monthly_installments_enabled":true,"force_3ds_flow":false,"metadata":{},"can_not_expire":false,"object":"checkout","is_redirect_on_failure":false,"slug":"30739425e31049baa0ef4ff73022cc1d","url":"https://pay.conekta.com/link/30739425e31049baa0ef4ff73022cc1d"}'
}
{
  error: Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client
      at new NodeError (node:internal/errors:405:5)
      at ServerResponse.setHeader (node:_http_outgoing:648:11)
      at ServerResponse.header (/usr/src/app/node_modules/express/lib/response.js:794:10)
      at ServerResponse.send (/usr/src/app/node_modules/express/lib/response.js:174:12)
      at /usr/src/app/dist/controllers/ConektaController.js:87:13
      at Generator.next (<anonymous>)
      at fulfilled (/usr/src/app/dist/controllers/ConektaController.js:5:58)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
    code: 'ERR_HTTP_HEADERS_SENT'
  }
}
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{
  result: '{"id":"a12e5f24-886d-4049-a0c2-0db3bfc6bec2","name":"Payment Link Name","livemode":false,"emails_sent":0,"success_url":"","failure_url":"","paid_payments_count":0,"sms_sent":0,"status":"Issued","type":"PaymentLink","recurrent":false,"starts_at":1705039200,"expires_at":1705516648,"allowed_payment_methods":["cash","card"],"exclude_card_networks":[],"needs_shipping_contact":false,"monthly_installments_options":[3,6,9,12],"monthly_installments_enabled":true,"force_3ds_flow":false,"metadata":{},"can_not_expire":false,"object":"checkout","is_redirect_on_failure":false,"slug":"a12e5f24886d4049a0c20db3bfc6bec2","url":"https://pay.conekta.com/link/a12e5f24886d4049a0c20db3bfc6bec2"}'
}
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{
  result: '{"details":[{"debug_message":"Invalid format for \\"allowed_payment_methods\\".","message":"Formato inválido para \\"allowed_payment_methods\\".","param":"allowed_payment_methods","code":"conekta.errors.parameter_validation.allowed_payment_methods.invalid"}],"object":"error","type":"parameter_validation_error","log_id":"65a18714e338bc0018cdb39c"}'
}
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{
  result: '{"details":[{"debug_message":"Invalid format for \\"allowed_payment_methods\\".","message":"Formato inválido para \\"allowed_payment_methods\\".","param":"allowed_payment_methods","code":"conekta.errors.parameter_validation.allowed_payment_methods.invalid"}],"object":"error","type":"parameter_validation_error","log_id":"65a1873333df8d001808ebd0"}'
}
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{
  result: '{"details":[{"debug_message":"Only accepts MXN.","message":"Solo acepta MXN.","param":"order_template.currency","code":"conekta.errors.parameter_validation.order_template.currency.only_accepts"}],"object":"error","type":"parameter_validation_error","log_id":"65a187bde338bc0016861632"}'
}
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{
  result: '{"id":"04cceb84-85ae-40ab-bb37-ecb73d574cbe","name":"Payment Link Name","livemode":false,"emails_sent":0,"success_url":"","failure_url":"","paid_payments_count":0,"sms_sent":0,"status":"Issued","type":"PaymentLink","recurrent":false,"starts_at":1705039200,"expires_at":1705516873,"allowed_payment_methods":["cash","card"],"exclude_card_networks":[],"needs_shipping_contact":false,"monthly_installments_options":[3,6,9,12],"monthly_installments_enabled":true,"force_3ds_flow":false,"metadata":{},"can_not_expire":false,"object":"checkout","is_redirect_on_failure":false,"slug":"04cceb8485ae40abbb37ecb73d574cbe","url":"https://pay.conekta.com/link/04cceb8485ae40abbb37ecb73d574cbe"}'
}
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32mGET[39m      /api/users/
[34mPUT[39m      /api/users/:id
[32mGET[39m      /api/users/:id
[33mPOST[39m     /api/users/
[31mDELETE[39m   /api/users/:id
[33mPOST[39m     /api/auth/login
[33mPOST[39m     /api/auth/register
[32mGET[39m      /api/auth/token
[32mGET[39m      /api/auth/
[32mGET[39m      /api/etas/
[32mGET[39m      /api/etas/:id
[32mGET[39m      /api/etas/pending/:id
[32mGET[39m      /api/etas/completed/:id
[32mGET[39m      /api/etas/user/:id
[34mPUT[39m      /api/etas/:id
[33mPOST[39m     /api/etas/
[31mDELETE[39m   /api/etas/:id
[32mGET[39m      /api/passport-sec/
[32mGET[39m      /api/passport-sec/:id
[34mPUT[39m      /api/passport-sec/:id
[31mDELETE[39m   /api/passport-sec/:id
[32mGET[39m      /api/personal-sec/
[32mGET[39m      /api/personal-sec/:id
[34mPUT[39m      /api/personal-sec/:id
[31mDELETE[39m   /api/personal-sec/:id
[32mGET[39m      /api/status-sec/
[32mGET[39m      /api/status-sec/:id
[34mPUT[39m      /api/status-sec/:id
[31mDELETE[39m   /api/status-sec/:id
[32mGET[39m      /api/travel-sec/
[32mGET[39m      /api/travel-sec/:id
[34mPUT[39m      /api/travel-sec/:id
[31mDELETE[39m   /api/travel-sec/:id
[32mGET[39m      /api/payments/
[34mPUT[39m      /api/payments/:id
[33mPOST[39m     /api/payments/
[31mDELETE[39m   /api/payments/:id
[32mGET[39m      /api/payments/stripe/:eta_id/:id/:currency
[33mPOST[39m     /api/payments/converge/:eta_id/:id
[32mGET[39m      /api/payments/:eta_id/success_paid
[32mGET[39m      /api/payments/failed_pay
[33mPOST[39m     /api/payments/conekta
[32mGET[39m      /api/payments/conekta/webhooks
[32mGET[39m      /api/routes/
[32mGET[39m      /api/paymentintents/
[33mPOST[39m     /api/paymentintents/
[32mGET[39m      /api/paymentintents/:id
[34mPUT[39m      /api/paymentintents/:id
[31mDELETE[39m   /api/paymentintents/:id
[32mGET[39m      /api/stripe/products/
[33mPOST[39m     /api/stripe/products/
[32mGET[39m      /api/stripe/products/:id
[34mPUT[39m      /api/stripe/products/:id
[31mDELETE[39m   /api/stripe/products/:id
[33mPOST[39m     /api/stripe/webhooks/
[32mGET[39m      /api/attachments/
[32mGET[39m      /api/attachments/object
[32mGET[39m      /api/attachments/object/preview
[31mDELETE[39m   /api/attachments/object
[33mPOST[39m     /api/attachments/
{
  routelist: [
    { method: 'GET', path: '/api/users/' },
    { method: 'PUT', path: '/api/users/:id' },
    { method: 'GET', path: '/api/users/:id' },
    { method: 'POST', path: '/api/users/' },
    { method: 'DELETE', path: '/api/users/:id' },
    { method: 'POST', path: '/api/auth/login' },
    { method: 'POST', path: '/api/auth/register' },
    { method: 'GET', path: '/api/auth/token' },
    { method: 'GET', path: '/api/auth/' },
    { method: 'GET', path: '/api/etas/' },
    { method: 'GET', path: '/api/etas/:id' },
    { method: 'GET', path: '/api/etas/pending/:id' },
    { method: 'GET', path: '/api/etas/completed/:id' },
    { method: 'GET', path: '/api/etas/user/:id' },
    { method: 'PUT', path: '/api/etas/:id' },
    { method: 'POST', path: '/api/etas/' },
    { method: 'DELETE', path: '/api/etas/:id' },
    { method: 'GET', path: '/api/passport-sec/' },
    { method: 'GET', path: '/api/passport-sec/:id' },
    { method: 'PUT', path: '/api/passport-sec/:id' },
    { method: 'DELETE', path: '/api/passport-sec/:id' },
    { method: 'GET', path: '/api/personal-sec/' },
    { method: 'GET', path: '/api/personal-sec/:id' },
    { method: 'PUT', path: '/api/personal-sec/:id' },
    { method: 'DELETE', path: '/api/personal-sec/:id' },
    { method: 'GET', path: '/api/status-sec/' },
    { method: 'GET', path: '/api/status-sec/:id' },
    { method: 'PUT', path: '/api/status-sec/:id' },
    { method: 'DELETE', path: '/api/status-sec/:id' },
    { method: 'GET', path: '/api/travel-sec/' },
    { method: 'GET', path: '/api/travel-sec/:id' },
    { method: 'PUT', path: '/api/travel-sec/:id' },
    { method: 'DELETE', path: '/api/travel-sec/:id' },
    { method: 'GET', path: '/api/payments/' },
    { method: 'PUT', path: '/api/payments/:id' },
    { method: 'POST', path: '/api/payments/' },
    { method: 'DELETE', path: '/api/payments/:id' },
    {
      method: 'GET',
      path: '/api/payments/stripe/:eta_id/:id/:currency'
    },
    { method: 'POST', path: '/api/payments/converge/:eta_id/:id' },
    { method: 'GET', path: '/api/payments/:eta_id/success_paid' },
    { method: 'GET', path: '/api/payments/failed_pay' },
    { method: 'POST', path: '/api/payments/conekta' },
    { method: 'GET', path: '/api/payments/conekta/webhooks' },
    { method: 'GET', path: '/api/routes/' },
    { method: 'GET', path: '/api/paymentintents/' },
    { method: 'POST', path: '/api/paymentintents/' },
    { method: 'GET', path: '/api/paymentintents/:id' },
    { method: 'PUT', path: '/api/paymentintents/:id' },
    { method: 'DELETE', path: '/api/paymentintents/:id' },
    { method: 'GET', path: '/api/stripe/products/' },
    { method: 'POST', path: '/api/stripe/products/' },
    { method: 'GET', path: '/api/stripe/products/:id' },
    { method: 'PUT', path: '/api/stripe/products/:id' },
    { method: 'DELETE', path: '/api/stripe/products/:id' },
    { method: 'POST', path: '/api/stripe/webhooks/' },
    { method: 'GET', path: '/api/attachments/' },
    { method: 'GET', path: '/api/attachments/object' },
    { method: 'GET', path: '/api/attachments/object/preview' },
    { method: 'DELETE', path: '/api/attachments/object' },
    { method: 'POST', path: '/api/attachments/' }
  ]
}
[32mGET[39m      /api/users/
[34mPUT[39m      /api/users/:id
[32mGET[39m      /api/users/:id
[33mPOST[39m     /api/users/
[31mDELETE[39m   /api/users/:id
[33mPOST[39m     /api/auth/login
[33mPOST[39m     /api/auth/register
[32mGET[39m      /api/auth/token
[32mGET[39m      /api/auth/
[32mGET[39m      /api/etas/
[32mGET[39m      /api/etas/:id
[32mGET[39m      /api/etas/pending/:id
[32mGET[39m      /api/etas/completed/:id
[32mGET[39m      /api/etas/user/:id
[34mPUT[39m      /api/etas/:id
[33mPOST[39m     /api/etas/
[31mDELETE[39m   /api/etas/:id
[32mGET[39m      /api/passport-sec/
[32mGET[39m      /api/passport-sec/:id
[34mPUT[39m      /api/passport-sec/:id
[31mDELETE[39m   /api/passport-sec/:id
[32mGET[39m      /api/personal-sec/
[32mGET[39m      /api/personal-sec/:id
[34mPUT[39m      /api/personal-sec/:id
[31mDELETE[39m   /api/personal-sec/:id
[32mGET[39m      /api/status-sec/
[32mGET[39m      /api/status-sec/:id
[34mPUT[39m      /api/status-sec/:id
[31mDELETE[39m   /api/status-sec/:id
[32mGET[39m      /api/travel-sec/
[32mGET[39m      /api/travel-sec/:id
[34mPUT[39m      /api/travel-sec/:id
[31mDELETE[39m   /api/travel-sec/:id
[32mGET[39m      /api/payments/
[34mPUT[39m      /api/payments/:id
[33mPOST[39m     /api/payments/
[31mDELETE[39m   /api/payments/:id
[32mGET[39m      /api/payments/stripe/:eta_id/:id/:currency
[33mPOST[39m     /api/payments/converge/:eta_id/:id
[32mGET[39m      /api/payments/:eta_id/success_paid
[32mGET[39m      /api/payments/failed_pay
[33mPOST[39m     /api/payments/conekta
[32mGET[39m      /api/payments/conekta/webhooks
[32mGET[39m      /api/routes/
[32mGET[39m      /api/paymentintents/
[33mPOST[39m     /api/paymentintents/
[32mGET[39m      /api/paymentintents/:id
[34mPUT[39m      /api/paymentintents/:id
[31mDELETE[39m   /api/paymentintents/:id
[32mGET[39m      /api/stripe/products/
[33mPOST[39m     /api/stripe/products/
[32mGET[39m      /api/stripe/products/:id
[34mPUT[39m      /api/stripe/products/:id
[31mDELETE[39m   /api/stripe/products/:id
[33mPOST[39m     /api/stripe/webhooks/
[32mGET[39m      /api/attachments/
[32mGET[39m      /api/attachments/object
[32mGET[39m      /api/attachments/object/preview
[31mDELETE[39m   /api/attachments/object
[33mPOST[39m     /api/attachments/
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
calling conekta webhooks ...
{
  conektaWebhookEvents: <ref *1> IncomingMessage {
    _readableState: ReadableState {
      state: 268310,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: [],
      flowing: true,
      errored: null,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    _events: [Object: null prototype] {},
    _eventsCount: 0,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(async_id_symbol)]: 73,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    rawHeaders: [
      'Host',
      '4fdb-189-143-174-180.ngrok-free.app',
      'User-Agent',
      'Conekta Webhook Notifier',
      'Content-Length',
      '2080',
      'Accept',
      '*/*',
      'Accept-Encoding',
      'gzip;q=1.0,deflate;q=0.6,identity;q=0.3',
      'Content-Type',
      'application/json',
      'X-Datadog-Parent-Id',
      '2730137394596983867',
      'X-Datadog-Sampling-Priority',
      '0',
      'X-Datadog-Trace-Id',
      '464376921943702121',
      'X-Forwarded-For',
      '52.200.151.182',
      'X-Forwarded-Host',
      '4fdb-189-143-174-180.ngrok-free.app',
      'X-Forwarded-Proto',
      'https'
    ],
    rawTrailers: [],
    joinDuplicateHeaders: null,
    aborted: false,
    upgrade: false,
    url: '/conekta/webhooks',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(async_id_symbol)]: 73,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '/api/payments',
    originalUrl: '/api/payments/conekta/webhooks',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/conekta/webhooks',
      path: '/conekta/webhooks',
      href: '/conekta/webhooks',
      _raw: '/conekta/webhooks'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      _closed: false,
      socket: [Socket],
      _header: null,
      _keepAliveTimeout: 5000,
      _onPendingData: [Function: bound updateOutgoingData],
      req: [Circular *1],
      _sent100: false,
      _expect_continue: false,
      _maxRequestsPerSocket: 0,
      locals: [Object: null prototype] {},
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 16384,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    body: {
      data: [Object],
      livemode: false,
      webhook_status: 'failing',
      webhook_logs: [Array],
      id: '65a18ab2fede9b00194a01b1',
      object: 'event',
      type: 'order.paid',
      created_at: 1705085618
    },
    _body: true,
    length: undefined,
    route: Route {
      path: '/conekta/webhooks',
      stack: [Array],
      methods: [Object]
    },
    [Symbol(kCapture)]: false,
    [Symbol(kHeaders)]: {
      host: '4fdb-189-143-174-180.ngrok-free.app',
      'user-agent': 'Conekta Webhook Notifier',
      'content-length': '2080',
      accept: '*/*',
      'accept-encoding': 'gzip;q=1.0,deflate;q=0.6,identity;q=0.3',
      'content-type': 'application/json',
      'x-datadog-parent-id': '2730137394596983867',
      'x-datadog-sampling-priority': '0',
      'x-datadog-trace-id': '464376921943702121',
      'x-forwarded-for': '52.200.151.182',
      'x-forwarded-host': '4fdb-189-143-174-180.ngrok-free.app',
      'x-forwarded-proto': 'https'
    },
    [Symbol(kHeadersCount)]: 24,
    [Symbol(kTrailers)]: null,
    [Symbol(kTrailersCount)]: 0
  }
}
calling conekta webhooks ...
{
  conektaWebhookEvents: <ref *1> IncomingMessage {
    _readableState: ReadableState {
      state: 268310,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: [],
      flowing: true,
      errored: null,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    _events: [Object: null prototype] {},
    _eventsCount: 0,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(async_id_symbol)]: 86,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    rawHeaders: [
      'Host',
      '4fdb-189-143-174-180.ngrok-free.app',
      'User-Agent',
      'Conekta Webhook Notifier',
      'Content-Length',
      '1227',
      'Accept',
      '*/*',
      'Accept-Encoding',
      'gzip;q=1.0,deflate;q=0.6,identity;q=0.3',
      'Content-Type',
      'application/json',
      'X-Datadog-Parent-Id',
      '2361706056865593744',
      'X-Datadog-Sampling-Priority',
      '1',
      'X-Datadog-Tags',
      '_dd.p.dm=-1',
      'X-Datadog-Trace-Id',
      '2425112752821612049',
      'X-Forwarded-For',
      '52.200.151.182',
      'X-Forwarded-Host',
      '4fdb-189-143-174-180.ngrok-free.app',
      'X-Forwarded-Proto',
      'https'
    ],
    rawTrailers: [],
    joinDuplicateHeaders: null,
    aborted: false,
    upgrade: false,
    url: '/conekta/webhooks',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(async_id_symbol)]: 86,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '/api/payments',
    originalUrl: '/api/payments/conekta/webhooks',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/conekta/webhooks',
      path: '/conekta/webhooks',
      href: '/conekta/webhooks',
      _raw: '/conekta/webhooks'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      _closed: false,
      socket: [Socket],
      _header: null,
      _keepAliveTimeout: 5000,
      _onPendingData: [Function: bound updateOutgoingData],
      req: [Circular *1],
      _sent100: false,
      _expect_continue: false,
      _maxRequestsPerSocket: 0,
      locals: [Object: null prototype] {},
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 16384,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    body: {
      data: [Object],
      livemode: false,
      webhook_status: 'failing',
      webhook_logs: [Array],
      id: '65a18ab2fede9b00194a01aa',
      object: 'event',
      type: 'charge.paid',
      created_at: 1705085618
    },
    _body: true,
    length: undefined,
    route: Route {
      path: '/conekta/webhooks',
      stack: [Array],
      methods: [Object]
    },
    [Symbol(kCapture)]: false,
    [Symbol(kHeaders)]: {
      host: '4fdb-189-143-174-180.ngrok-free.app',
      'user-agent': 'Conekta Webhook Notifier',
      'content-length': '1227',
      accept: '*/*',
      'accept-encoding': 'gzip;q=1.0,deflate;q=0.6,identity;q=0.3',
      'content-type': 'application/json',
      'x-datadog-parent-id': '2361706056865593744',
      'x-datadog-sampling-priority': '1',
      'x-datadog-tags': '_dd.p.dm=-1',
      'x-datadog-trace-id': '2425112752821612049',
      'x-forwarded-for': '52.200.151.182',
      'x-forwarded-host': '4fdb-189-143-174-180.ngrok-free.app',
      'x-forwarded-proto': 'https'
    },
    [Symbol(kHeadersCount)]: 26,
    [Symbol(kTrailers)]: null,
    [Symbol(kTrailersCount)]: 0
  }
}
calling conekta webhooks ...
{
  conektaWebhookEvents: <ref *1> IncomingMessage {
    _readableState: ReadableState {
      state: 268310,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: [],
      flowing: true,
      errored: null,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    _events: [Object: null prototype] {},
    _eventsCount: 0,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(async_id_symbol)]: 101,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    rawHeaders: [
      'Host',
      '4fdb-189-143-174-180.ngrok-free.app',
      'User-Agent',
      'Conekta Webhook Notifier',
      'Content-Length',
      '1531',
      'Accept',
      '*/*',
      'Accept-Encoding',
      'gzip;q=1.0,deflate;q=0.6,identity;q=0.3',
      'Content-Type',
      'application/json',
      'X-Datadog-Parent-Id',
      '275214274031054617',
      'X-Datadog-Sampling-Priority',
      '0',
      'X-Datadog-Trace-Id',
      '2399145494457868927',
      'X-Forwarded-For',
      '52.200.151.182',
      'X-Forwarded-Host',
      '4fdb-189-143-174-180.ngrok-free.app',
      'X-Forwarded-Proto',
      'https'
    ],
    rawTrailers: [],
    joinDuplicateHeaders: null,
    aborted: false,
    upgrade: false,
    url: '/conekta/webhooks',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(async_id_symbol)]: 101,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '/api/payments',
    originalUrl: '/api/payments/conekta/webhooks',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/conekta/webhooks',
      path: '/conekta/webhooks',
      href: '/conekta/webhooks',
      _raw: '/conekta/webhooks'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      _closed: false,
      socket: [Socket],
      _header: null,
      _keepAliveTimeout: 5000,
      _onPendingData: [Function: bound updateOutgoingData],
      req: [Circular *1],
      _sent100: false,
      _expect_continue: false,
      _maxRequestsPerSocket: 0,
      locals: [Object: null prototype] {},
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 16384,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    body: {
      data: [Object],
      livemode: false,
      webhook_status: 'failing',
      webhook_logs: [Array],
      id: '65a18ab2fede9b00194a0197',
      object: 'event',
      type: 'order.created',
      created_at: 1705085618
    },
    _body: true,
    length: undefined,
    route: Route {
      path: '/conekta/webhooks',
      stack: [Array],
      methods: [Object]
    },
    [Symbol(kCapture)]: false,
    [Symbol(kHeaders)]: {
      host: '4fdb-189-143-174-180.ngrok-free.app',
      'user-agent': 'Conekta Webhook Notifier',
      'content-length': '1531',
      accept: '*/*',
      'accept-encoding': 'gzip;q=1.0,deflate;q=0.6,identity;q=0.3',
      'content-type': 'application/json',
      'x-datadog-parent-id': '275214274031054617',
      'x-datadog-sampling-priority': '0',
      'x-datadog-trace-id': '2399145494457868927',
      'x-forwarded-for': '52.200.151.182',
      'x-forwarded-host': '4fdb-189-143-174-180.ngrok-free.app',
      'x-forwarded-proto': 'https'
    },
    [Symbol(kHeadersCount)]: 24,
    [Symbol(kTrailers)]: null,
    [Symbol(kTrailersCount)]: 0
  }
}
calling conekta webhooks ...
{
  conektaWebhookEvents: <ref *1> IncomingMessage {
    _readableState: ReadableState {
      state: 268310,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: [],
      flowing: true,
      errored: null,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    _events: [Object: null prototype] {},
    _eventsCount: 0,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(async_id_symbol)]: 114,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    rawHeaders: [
      'Host',
      '4fdb-189-143-174-180.ngrok-free.app',
      'User-Agent',
      'Conekta Webhook Notifier',
      'Content-Length',
      '439',
      'Accept',
      '*/*',
      'Accept-Encoding',
      'gzip;q=1.0,deflate;q=0.6,identity;q=0.3',
      'Content-Type',
      'application/json',
      'X-Datadog-Parent-Id',
      '3314421987149602748',
      'X-Datadog-Sampling-Priority',
      '0',
      'X-Datadog-Trace-Id',
      '512797419644618544',
      'X-Forwarded-For',
      '52.200.151.182',
      'X-Forwarded-Host',
      '4fdb-189-143-174-180.ngrok-free.app',
      'X-Forwarded-Proto',
      'https'
    ],
    rawTrailers: [],
    joinDuplicateHeaders: null,
    aborted: false,
    upgrade: false,
    url: '/conekta/webhooks',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(async_id_symbol)]: 114,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '/api/payments',
    originalUrl: '/api/payments/conekta/webhooks',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/conekta/webhooks',
      path: '/conekta/webhooks',
      href: '/conekta/webhooks',
      _raw: '/conekta/webhooks'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      _closed: false,
      socket: [Socket],
      _header: null,
      _keepAliveTimeout: 5000,
      _onPendingData: [Function: bound updateOutgoingData],
      req: [Circular *1],
      _sent100: false,
      _expect_continue: false,
      _maxRequestsPerSocket: 0,
      locals: [Object: null prototype] {},
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 16384,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    body: {
      data: [Object],
      livemode: false,
      webhook_status: 'pending',
      webhook_logs: [Array],
      id: '65a18b07fede9b00194a0680',
      object: 'event',
      type: 'webhook_ping',
      created_at: 1705085703
    },
    _body: true,
    length: undefined,
    route: Route {
      path: '/conekta/webhooks',
      stack: [Array],
      methods: [Object]
    },
    [Symbol(kCapture)]: false,
    [Symbol(kHeaders)]: {
      host: '4fdb-189-143-174-180.ngrok-free.app',
      'user-agent': 'Conekta Webhook Notifier',
      'content-length': '439',
      accept: '*/*',
      'accept-encoding': 'gzip;q=1.0,deflate;q=0.6,identity;q=0.3',
      'content-type': 'application/json',
      'x-datadog-parent-id': '3314421987149602748',
      'x-datadog-sampling-priority': '0',
      'x-datadog-trace-id': '512797419644618544',
      'x-forwarded-for': '52.200.151.182',
      'x-forwarded-host': '4fdb-189-143-174-180.ngrok-free.app',
      'x-forwarded-proto': 'https'
    },
    [Symbol(kHeadersCount)]: 24,
    [Symbol(kTrailers)]: null,
    [Symbol(kTrailersCount)]: 0
  }
}
calling conekta webhooks ...
{
  conektaWebhookEvents: <ref *1> IncomingMessage {
    _readableState: ReadableState {
      state: 268310,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: [],
      flowing: true,
      errored: null,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    _events: [Object: null prototype] {},
    _eventsCount: 0,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(async_id_symbol)]: 128,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    rawHeaders: [
      'Host',
      '4fdb-189-143-174-180.ngrok-free.app',
      'User-Agent',
      'Conekta Webhook Notifier',
      'Content-Length',
      '2101',
      'Accept',
      '*/*',
      'Accept-Encoding',
      'gzip;q=1.0,deflate;q=0.6,identity;q=0.3',
      'Content-Type',
      'application/json',
      'X-Datadog-Parent-Id',
      '3784077942875390780',
      'X-Datadog-Sampling-Priority',
      '0',
      'X-Datadog-Trace-Id',
      '56619674796425808',
      'X-Forwarded-For',
      '52.200.151.182',
      'X-Forwarded-Host',
      '4fdb-189-143-174-180.ngrok-free.app',
      'X-Forwarded-Proto',
      'https'
    ],
    rawTrailers: [],
    joinDuplicateHeaders: null,
    aborted: false,
    upgrade: false,
    url: '/conekta/webhooks',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(async_id_symbol)]: 128,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '/api/payments',
    originalUrl: '/api/payments/conekta/webhooks',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/conekta/webhooks',
      path: '/conekta/webhooks',
      href: '/conekta/webhooks',
      _raw: '/conekta/webhooks'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      _closed: false,
      socket: [Socket],
      _header: null,
      _keepAliveTimeout: 5000,
      _onPendingData: [Function: bound updateOutgoingData],
      req: [Circular *1],
      _sent100: false,
      _expect_continue: false,
      _maxRequestsPerSocket: 0,
      locals: [Object: null prototype] {},
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 16384,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    body: {
      data: [Object],
      livemode: false,
      webhook_status: 'failing',
      webhook_logs: [Array],
      id: '65a18a70fede9b001af30b7a',
      object: 'event',
      type: 'webhook.updated',
      created_at: 1705085552
    },
    _body: true,
    length: undefined,
    route: Route {
      path: '/conekta/webhooks',
      stack: [Array],
      methods: [Object]
    },
    [Symbol(kCapture)]: false,
    [Symbol(kHeaders)]: {
      host: '4fdb-189-143-174-180.ngrok-free.app',
      'user-agent': 'Conekta Webhook Notifier',
      'content-length': '2101',
      accept: '*/*',
      'accept-encoding': 'gzip;q=1.0,deflate;q=0.6,identity;q=0.3',
      'content-type': 'application/json',
      'x-datadog-parent-id': '3784077942875390780',
      'x-datadog-sampling-priority': '0',
      'x-datadog-trace-id': '56619674796425808',
      'x-forwarded-for': '52.200.151.182',
      'x-forwarded-host': '4fdb-189-143-174-180.ngrok-free.app',
      'x-forwarded-proto': 'https'
    },
    [Symbol(kHeadersCount)]: 24,
    [Symbol(kTrailers)]: null,
    [Symbol(kTrailersCount)]: 0
  }
}
calling conekta webhooks ...
{
  conektaWebhookEvents: <ref *1> IncomingMessage {
    _readableState: ReadableState {
      state: 268310,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: [],
      flowing: true,
      errored: null,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    _events: [Object: null prototype] {},
    _eventsCount: 0,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(async_id_symbol)]: 141,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    rawHeaders: [
      'Host',
      '4fdb-189-143-174-180.ngrok-free.app',
      'User-Agent',
      'Conekta Webhook Notifier',
      'Content-Length',
      '2076',
      'Accept',
      '*/*',
      'Accept-Encoding',
      'gzip;q=1.0,deflate;q=0.6,identity;q=0.3',
      'Content-Type',
      'application/json',
      'X-Datadog-Parent-Id',
      '3457168456831569953',
      'X-Datadog-Sampling-Priority',
      '0',
      'X-Datadog-Trace-Id',
      '3420919461370934251',
      'X-Forwarded-For',
      '52.200.151.182',
      'X-Forwarded-Host',
      '4fdb-189-143-174-180.ngrok-free.app',
      'X-Forwarded-Proto',
      'https'
    ],
    rawTrailers: [],
    joinDuplicateHeaders: null,
    aborted: false,
    upgrade: false,
    url: '/conekta/webhooks',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(async_id_symbol)]: 141,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '/api/payments',
    originalUrl: '/api/payments/conekta/webhooks',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/conekta/webhooks',
      path: '/conekta/webhooks',
      href: '/conekta/webhooks',
      _raw: '/conekta/webhooks'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      _closed: false,
      socket: [Socket],
      _header: null,
      _keepAliveTimeout: 5000,
      _onPendingData: [Function: bound updateOutgoingData],
      req: [Circular *1],
      _sent100: false,
      _expect_continue: false,
      _maxRequestsPerSocket: 0,
      locals: [Object: null prototype] {},
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 16384,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    body: {
      data: [Object],
      livemode: false,
      webhook_status: 'failing',
      webhook_logs: [Array],
      id: '65a1898ae338bc0019c893d6',
      object: 'event',
      type: 'webhook.created',
      created_at: 1705085322
    },
    _body: true,
    length: undefined,
    route: Route {
      path: '/conekta/webhooks',
      stack: [Array],
      methods: [Object]
    },
    [Symbol(kCapture)]: false,
    [Symbol(kHeaders)]: {
      host: '4fdb-189-143-174-180.ngrok-free.app',
      'user-agent': 'Conekta Webhook Notifier',
      'content-length': '2076',
      accept: '*/*',
      'accept-encoding': 'gzip;q=1.0,deflate;q=0.6,identity;q=0.3',
      'content-type': 'application/json',
      'x-datadog-parent-id': '3457168456831569953',
      'x-datadog-sampling-priority': '0',
      'x-datadog-trace-id': '3420919461370934251',
      'x-forwarded-for': '52.200.151.182',
      'x-forwarded-host': '4fdb-189-143-174-180.ngrok-free.app',
      'x-forwarded-proto': 'https'
    },
    [Symbol(kHeadersCount)]: 24,
    [Symbol(kTrailers)]: null,
    [Symbol(kTrailersCount)]: 0
  }
}
calling conekta webhooks ...
{
  conektaWebhookEvents: <ref *1> IncomingMessage {
    _readableState: ReadableState {
      state: 268310,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: [],
      flowing: true,
      errored: null,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    _events: [Object: null prototype] {},
    _eventsCount: 0,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(async_id_symbol)]: 154,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    rawHeaders: [
      'Host',
      '4fdb-189-143-174-180.ngrok-free.app',
      'User-Agent',
      'Conekta Webhook Notifier',
      'Content-Length',
      '1180',
      'Accept',
      '*/*',
      'Accept-Encoding',
      'gzip;q=1.0,deflate;q=0.6,identity;q=0.3',
      'Content-Type',
      'application/json',
      'X-Datadog-Parent-Id',
      '561061001175447884',
      'X-Datadog-Sampling-Priority',
      '0',
      'X-Datadog-Trace-Id',
      '2455214776584336928',
      'X-Forwarded-For',
      '52.200.151.182',
      'X-Forwarded-Host',
      '4fdb-189-143-174-180.ngrok-free.app',
      'X-Forwarded-Proto',
      'https'
    ],
    rawTrailers: [],
    joinDuplicateHeaders: null,
    aborted: false,
    upgrade: false,
    url: '/conekta/webhooks',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(async_id_symbol)]: 154,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '/api/payments',
    originalUrl: '/api/payments/conekta/webhooks',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/conekta/webhooks',
      path: '/conekta/webhooks',
      href: '/conekta/webhooks',
      _raw: '/conekta/webhooks'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      _closed: false,
      socket: [Socket],
      _header: null,
      _keepAliveTimeout: 5000,
      _onPendingData: [Function: bound updateOutgoingData],
      req: [Circular *1],
      _sent100: false,
      _expect_continue: false,
      _maxRequestsPerSocket: 0,
      locals: [Object: null prototype] {},
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 16384,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    body: {
      data: [Object],
      livemode: false,
      webhook_status: 'failing',
      webhook_logs: [Array],
      id: '65a18ab2fede9b00194a01a3',
      object: 'event',
      type: 'charge.created',
      created_at: 1705085618
    },
    _body: true,
    length: undefined,
    route: Route {
      path: '/conekta/webhooks',
      stack: [Array],
      methods: [Object]
    },
    [Symbol(kCapture)]: false,
    [Symbol(kHeaders)]: {
      host: '4fdb-189-143-174-180.ngrok-free.app',
      'user-agent': 'Conekta Webhook Notifier',
      'content-length': '1180',
      accept: '*/*',
      'accept-encoding': 'gzip;q=1.0,deflate;q=0.6,identity;q=0.3',
      'content-type': 'application/json',
      'x-datadog-parent-id': '561061001175447884',
      'x-datadog-sampling-priority': '0',
      'x-datadog-trace-id': '2455214776584336928',
      'x-forwarded-for': '52.200.151.182',
      'x-forwarded-host': '4fdb-189-143-174-180.ngrok-free.app',
      'x-forwarded-proto': 'https'
    },
    [Symbol(kHeadersCount)]: 24,
    [Symbol(kTrailers)]: null,
    [Symbol(kTrailersCount)]: 0
  }
}
calling conekta webhooks ...
{
  conektaWebhookEvents: <ref *1> IncomingMessage {
    _readableState: ReadableState {
      state: 268310,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: [],
      flowing: true,
      errored: null,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    _events: [Object: null prototype] {},
    _eventsCount: 0,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(async_id_symbol)]: 167,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    rawHeaders: [
      'Host',
      '4fdb-189-143-174-180.ngrok-free.app',
      'User-Agent',
      'Conekta Webhook Notifier',
      'Content-Length',
      '447',
      'Accept',
      '*/*',
      'Accept-Encoding',
      'gzip;q=1.0,deflate;q=0.6,identity;q=0.3',
      'Content-Type',
      'application/json',
      'X-Datadog-Parent-Id',
      '1021941483695401511',
      'X-Datadog-Sampling-Priority',
      '1',
      'X-Datadog-Tags',
      '_dd.p.dm=-1',
      'X-Datadog-Trace-Id',
      '2978524919494558911',
      'X-Forwarded-For',
      '52.200.151.182',
      'X-Forwarded-Host',
      '4fdb-189-143-174-180.ngrok-free.app',
      'X-Forwarded-Proto',
      'https'
    ],
    rawTrailers: [],
    joinDuplicateHeaders: null,
    aborted: false,
    upgrade: false,
    url: '/conekta/webhooks',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(async_id_symbol)]: 167,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '/api/payments',
    originalUrl: '/api/payments/conekta/webhooks',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/conekta/webhooks',
      path: '/conekta/webhooks',
      href: '/conekta/webhooks',
      _raw: '/conekta/webhooks'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      _closed: false,
      socket: [Socket],
      _header: null,
      _keepAliveTimeout: 5000,
      _onPendingData: [Function: bound updateOutgoingData],
      req: [Circular *1],
      _sent100: false,
      _expect_continue: false,
      _maxRequestsPerSocket: 0,
      locals: [Object: null prototype] {},
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 16384,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    body: {
      data: [Object],
      livemode: false,
      webhook_status: 'failing',
      webhook_logs: [Array],
      id: '65a18a337b50350017ee3411',
      object: 'event',
      type: 'webhook_ping',
      created_at: 1705085491
    },
    _body: true,
    length: undefined,
    route: Route {
      path: '/conekta/webhooks',
      stack: [Array],
      methods: [Object]
    },
    [Symbol(kCapture)]: false,
    [Symbol(kHeaders)]: {
      host: '4fdb-189-143-174-180.ngrok-free.app',
      'user-agent': 'Conekta Webhook Notifier',
      'content-length': '447',
      accept: '*/*',
      'accept-encoding': 'gzip;q=1.0,deflate;q=0.6,identity;q=0.3',
      'content-type': 'application/json',
      'x-datadog-parent-id': '1021941483695401511',
      'x-datadog-sampling-priority': '1',
      'x-datadog-tags': '_dd.p.dm=-1',
      'x-datadog-trace-id': '2978524919494558911',
      'x-forwarded-for': '52.200.151.182',
      'x-forwarded-host': '4fdb-189-143-174-180.ngrok-free.app',
      'x-forwarded-proto': 'https'
    },
    [Symbol(kHeadersCount)]: 26,
    [Symbol(kTrailers)]: null,
    [Symbol(kTrailersCount)]: 0
  }
}
calling conekta webhooks ...
{
  conektaWebhookEvents: <ref *1> IncomingMessage {
    _readableState: ReadableState {
      state: 268310,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: [],
      flowing: true,
      errored: null,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    _events: [Object: null prototype] {},
    _eventsCount: 0,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(async_id_symbol)]: 183,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    rawHeaders: [
      'Host',
      '4fdb-189-143-174-180.ngrok-free.app',
      'User-Agent',
      'Conekta Webhook Notifier',
      'Content-Length',
      '447',
      'Accept',
      '*/*',
      'Accept-Encoding',
      'gzip;q=1.0,deflate;q=0.6,identity;q=0.3',
      'Content-Type',
      'application/json',
      'X-Datadog-Parent-Id',
      '3459140994632317024',
      'X-Datadog-Sampling-Priority',
      '1',
      'X-Datadog-Tags',
      '_dd.p.dm=-1',
      'X-Datadog-Trace-Id',
      '478885984628298120',
      'X-Forwarded-For',
      '52.200.151.182',
      'X-Forwarded-Host',
      '4fdb-189-143-174-180.ngrok-free.app',
      'X-Forwarded-Proto',
      'https'
    ],
    rawTrailers: [],
    joinDuplicateHeaders: null,
    aborted: false,
    upgrade: false,
    url: '/conekta/webhooks',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(async_id_symbol)]: 183,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '/api/payments',
    originalUrl: '/api/payments/conekta/webhooks',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/conekta/webhooks',
      path: '/conekta/webhooks',
      href: '/conekta/webhooks',
      _raw: '/conekta/webhooks'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      _closed: false,
      socket: [Socket],
      _header: null,
      _keepAliveTimeout: 5000,
      _onPendingData: [Function: bound updateOutgoingData],
      req: [Circular *1],
      _sent100: false,
      _expect_continue: false,
      _maxRequestsPerSocket: 0,
      locals: [Object: null prototype] {},
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 16384,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    body: {
      data: [Object],
      livemode: false,
      webhook_status: 'failing',
      webhook_logs: [Array],
      id: '65a18a6efede9b001af30b77',
      object: 'event',
      type: 'webhook_ping',
      created_at: 1705085550
    },
    _body: true,
    length: undefined,
    route: Route {
      path: '/conekta/webhooks',
      stack: [Array],
      methods: [Object]
    },
    [Symbol(kCapture)]: false,
    [Symbol(kHeaders)]: {
      host: '4fdb-189-143-174-180.ngrok-free.app',
      'user-agent': 'Conekta Webhook Notifier',
      'content-length': '447',
      accept: '*/*',
      'accept-encoding': 'gzip;q=1.0,deflate;q=0.6,identity;q=0.3',
      'content-type': 'application/json',
      'x-datadog-parent-id': '3459140994632317024',
      'x-datadog-sampling-priority': '1',
      'x-datadog-tags': '_dd.p.dm=-1',
      'x-datadog-trace-id': '478885984628298120',
      'x-forwarded-for': '52.200.151.182',
      'x-forwarded-host': '4fdb-189-143-174-180.ngrok-free.app',
      'x-forwarded-proto': 'https'
    },
    [Symbol(kHeadersCount)]: 26,
    [Symbol(kTrailers)]: null,
    [Symbol(kTrailersCount)]: 0
  }
}
{
  result: '{"details":[{"debug_message":"Invalid format for \\"name\\".","message":"Formato inválido para \\"name\\".","param":"name","code":"conekta.errors.parameter_validation.name.invalid"},{"debug_message":"The \\"customer_info attribute email\\" is missing.","message":"El parametro email\\" es requerido.","param":"customer_info.email","code":"conekta.errors.parameter_validation.customer_info.email.missing"},{"debug_message":"The \\"customer_info attribute name\\" is missing.","message":"El parametro name\\" es requerido.","param":"customer_info.name","code":"conekta.errors.parameter_validation.customer_info.name.missing"}],"object":"error","type":"parameter_validation_error","log_id":"65a18b367b50350017ee3cd1"}'
}
{
  result: '{"details":[{"debug_message":"Invalid format for \\"name\\".","message":"Formato inválido para \\"name\\".","param":"name","code":"conekta.errors.parameter_validation.name.invalid"},{"debug_message":"The \\"customer_info attribute email\\" is missing.","message":"El parametro email\\" es requerido.","param":"customer_info.email","code":"conekta.errors.parameter_validation.customer_info.email.missing"},{"debug_message":"The \\"customer_info attribute name\\" is missing.","message":"El parametro name\\" es requerido.","param":"customer_info.name","code":"conekta.errors.parameter_validation.customer_info.name.missing"}],"object":"error","type":"parameter_validation_error","log_id":"65a18b7ee338bc001bc7978a"}'
}
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{
  error: TypeError: res is not a function
      at /usr/src/app/dist/controllers/ConektaController.js:31:16
      at Generator.next (<anonymous>)
      at /usr/src/app/dist/controllers/ConektaController.js:8:71
      at new Promise (<anonymous>)
      at __awaiter (/usr/src/app/dist/controllers/ConektaController.js:4:12)
      at newPaymentLink (/usr/src/app/dist/controllers/ConektaController.js:28:38)
      at Layer.handle [as handle_request] (/usr/src/app/node_modules/express/lib/router/layer.js:95:5)
      at next (/usr/src/app/node_modules/express/lib/router/route.js:144:13)
      at Route.dispatch (/usr/src/app/node_modules/express/lib/router/route.js:114:3)
      at Layer.handle [as handle_request] (/usr/src/app/node_modules/express/lib/router/layer.js:95:5)
}
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{
  error: TypeError: res is not a function
      at /usr/src/app/dist/controllers/ConektaController.js:31:16
      at Generator.next (<anonymous>)
      at /usr/src/app/dist/controllers/ConektaController.js:8:71
      at new Promise (<anonymous>)
      at __awaiter (/usr/src/app/dist/controllers/ConektaController.js:4:12)
      at newPaymentLink (/usr/src/app/dist/controllers/ConektaController.js:28:38)
      at Layer.handle [as handle_request] (/usr/src/app/node_modules/express/lib/router/layer.js:95:5)
      at next (/usr/src/app/node_modules/express/lib/router/route.js:144:13)
      at Route.dispatch (/usr/src/app/node_modules/express/lib/router/route.js:114:3)
      at Layer.handle [as handle_request] (/usr/src/app/node_modules/express/lib/router/layer.js:95:5)
}
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{
  req: <ref *1> IncomingMessage {
    _readableState: ReadableState {
      state: 137264,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: [],
      flowing: null,
      errored: null,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: null
    },
    _events: [Object: null prototype] {},
    _eventsCount: 0,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(async_id_symbol)]: 58,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: false,
    rawHeaders: [
      'Accept',
      'application/json',
      'User-Agent',
      'PostmanRuntime/7.36.0',
      'Cache-Control',
      'no-cache',
      'Postman-Token',
      '9f5c2718-03d4-4e9a-962a-24f2de047749',
      'Host',
      'ger-server.local:8000',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Connection',
      'keep-alive',
      'Content-Type',
      'multipart/form-data; boundary=--------------------------683518900077622642855033',
      'Content-Length',
      '177'
    ],
    rawTrailers: [],
    joinDuplicateHeaders: null,
    aborted: false,
    upgrade: false,
    url: '/conekta',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(async_id_symbol)]: 58,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: false,
    _dumped: false,
    next: [Function: next],
    baseUrl: '/api/payments',
    originalUrl: '/api/payments/conekta',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/conekta',
      path: '/conekta',
      href: '/conekta',
      _raw: '/conekta'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      _closed: false,
      socket: [Socket],
      _header: null,
      _keepAliveTimeout: 5000,
      _onPendingData: [Function: bound updateOutgoingData],
      req: [Circular *1],
      _sent100: false,
      _expect_continue: false,
      _maxRequestsPerSocket: 0,
      locals: [Object: null prototype] {},
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 16384,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    body: {},
    route: Route { path: '/conekta', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false,
    [Symbol(kHeaders)]: {
      accept: 'application/json',
      'user-agent': 'PostmanRuntime/7.36.0',
      'cache-control': 'no-cache',
      'postman-token': '9f5c2718-03d4-4e9a-962a-24f2de047749',
      host: 'ger-server.local:8000',
      'accept-encoding': 'gzip, deflate, br',
      connection: 'keep-alive',
      'content-type': 'multipart/form-data; boundary=--------------------------683518900077622642855033',
      'content-length': '177'
    },
    [Symbol(kHeadersCount)]: 18,
    [Symbol(kTrailers)]: null,
    [Symbol(kTrailersCount)]: 0
  }
}
calling conekta webhooks ...
{
  conektaWebhookEvents: <ref *1> IncomingMessage {
    _readableState: ReadableState {
      state: 268310,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: [],
      flowing: true,
      errored: null,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    _events: [Object: null prototype] {},
    _eventsCount: 0,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(async_id_symbol)]: 78,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    rawHeaders: [
      'Host',
      '4fdb-189-143-174-180.ngrok-free.app',
      'User-Agent',
      'Conekta Webhook Notifier',
      'Content-Length',
      '447',
      'Accept',
      '*/*',
      'Accept-Encoding',
      'gzip;q=1.0,deflate;q=0.6,identity;q=0.3',
      'Content-Type',
      'application/json',
      'X-Datadog-Parent-Id',
      '1747431571209319489',
      'X-Datadog-Sampling-Priority',
      '1',
      'X-Datadog-Tags',
      '_dd.p.dm=-1',
      'X-Datadog-Trace-Id',
      '3172300099044120906',
      'X-Forwarded-For',
      '52.200.151.182',
      'X-Forwarded-Host',
      '4fdb-189-143-174-180.ngrok-free.app',
      'X-Forwarded-Proto',
      'https'
    ],
    rawTrailers: [],
    joinDuplicateHeaders: null,
    aborted: false,
    upgrade: false,
    url: '/conekta/webhooks',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(async_id_symbol)]: 78,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '/api/payments',
    originalUrl: '/api/payments/conekta/webhooks',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/conekta/webhooks',
      path: '/conekta/webhooks',
      href: '/conekta/webhooks',
      _raw: '/conekta/webhooks'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      _closed: false,
      socket: [Socket],
      _header: null,
      _keepAliveTimeout: 5000,
      _onPendingData: [Function: bound updateOutgoingData],
      req: [Circular *1],
      _sent100: false,
      _expect_continue: false,
      _maxRequestsPerSocket: 0,
      locals: [Object: null prototype] {},
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 16384,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    body: {
      data: [Object],
      livemode: false,
      webhook_status: 'failing',
      webhook_logs: [Array],
      id: '65a1898ae338bc0019c893d9',
      object: 'event',
      type: 'webhook_ping',
      created_at: 1705085322
    },
    _body: true,
    length: undefined,
    route: Route {
      path: '/conekta/webhooks',
      stack: [Array],
      methods: [Object]
    },
    [Symbol(kCapture)]: false,
    [Symbol(kHeaders)]: {
      host: '4fdb-189-143-174-180.ngrok-free.app',
      'user-agent': 'Conekta Webhook Notifier',
      'content-length': '447',
      accept: '*/*',
      'accept-encoding': 'gzip;q=1.0,deflate;q=0.6,identity;q=0.3',
      'content-type': 'application/json',
      'x-datadog-parent-id': '1747431571209319489',
      'x-datadog-sampling-priority': '1',
      'x-datadog-tags': '_dd.p.dm=-1',
      'x-datadog-trace-id': '3172300099044120906',
      'x-forwarded-for': '52.200.151.182',
      'x-forwarded-host': '4fdb-189-143-174-180.ngrok-free.app',
      'x-forwarded-proto': 'https'
    },
    [Symbol(kHeadersCount)]: 26,
    [Symbol(kTrailers)]: null,
    [Symbol(kTrailersCount)]: 0
  }
}
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{ req: {} }
{
  req: {
    customer_name: 'Heriberto',
    customer_email: 'Hernandez',
    customer_phone: 'heriberto.h@gercanada.com'
  }
}
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{
  result: '{"details":[{"debug_message":"Invalid format for \\"name\\".","message":"Formato inválido para \\"name\\".","param":"name","code":"conekta.errors.parameter_validation.name.invalid"},{"debug_message":"The \\"customer_info attribute email\\" is missing.","message":"El parametro email\\" es requerido.","param":"customer_info.email","code":"conekta.errors.parameter_validation.customer_info.email.missing"},{"debug_message":"The \\"customer_info attribute name\\" is missing.","message":"El parametro name\\" es requerido.","param":"customer_info.name","code":"conekta.errors.parameter_validation.customer_info.name.missing"}],"object":"error","type":"parameter_validation_error","log_id":"65a18c3e49a82b00198d670a"}'
}
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{
  result: '{"details":[{"debug_message":"Invalid format for \\"name\\".","message":"Formato inválido para \\"name\\".","param":"name","code":"conekta.errors.parameter_validation.name.invalid"},{"debug_message":"The \\"customer_info attribute email\\" is missing.","message":"El parametro email\\" es requerido.","param":"customer_info.email","code":"conekta.errors.parameter_validation.customer_info.email.missing"},{"debug_message":"The \\"customer_info attribute name\\" is missing.","message":"El parametro name\\" es requerido.","param":"customer_info.name","code":"conekta.errors.parameter_validation.customer_info.name.missing"}],"object":"error","type":"parameter_validation_error","log_id":"65a18c6ae338bc001bc79dea"}'
}
{
  error: Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client
      at new NodeError (node:internal/errors:405:5)
      at ServerResponse.setHeader (node:_http_outgoing:648:11)
      at ServerResponse.header (/usr/src/app/node_modules/express/lib/response.js:794:10)
      at ServerResponse.send (/usr/src/app/node_modules/express/lib/response.js:174:12)
      at ServerResponse.json (/usr/src/app/node_modules/express/lib/response.js:278:15)
      at /usr/src/app/dist/controllers/ConektaController.js:70:13
      at Generator.next (<anonymous>)
      at fulfilled (/usr/src/app/dist/controllers/ConektaController.js:5:58)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
    code: 'ERR_HTTP_HEADERS_SENT'
  }
}
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{
  error: TypeError: Converting circular structure to JSON
      --> starting at object with constructor 'Socket'
      |     property 'parser' -> object with constructor 'HTTPParser'
      --- property 'socket' closes the circle
      at JSON.stringify (<anonymous>)
      at stringify (/usr/src/app/node_modules/express/lib/response.js:1150:12)
      at ServerResponse.json (/usr/src/app/node_modules/express/lib/response.js:271:14)
      at ServerResponse.send (/usr/src/app/node_modules/express/lib/response.js:162:21)
      at /usr/src/app/dist/controllers/ConektaController.js:35:13
      at Generator.next (<anonymous>)
      at /usr/src/app/dist/controllers/ConektaController.js:8:71
      at new Promise (<anonymous>)
      at __awaiter (/usr/src/app/dist/controllers/ConektaController.js:4:12)
      at newPaymentLink (/usr/src/app/dist/controllers/ConektaController.js:28:38)
}
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{
  error: TypeError: Converting circular structure to JSON
      --> starting at object with constructor 'Socket'
      |     property 'parser' -> object with constructor 'HTTPParser'
      --- property 'socket' closes the circle
      at JSON.stringify (<anonymous>)
      at stringify (/usr/src/app/node_modules/express/lib/response.js:1150:12)
      at ServerResponse.json (/usr/src/app/node_modules/express/lib/response.js:271:14)
      at ServerResponse.send (/usr/src/app/node_modules/express/lib/response.js:162:21)
      at /usr/src/app/dist/controllers/ConektaController.js:35:13
      at Generator.next (<anonymous>)
      at /usr/src/app/dist/controllers/ConektaController.js:8:71
      at new Promise (<anonymous>)
      at __awaiter (/usr/src/app/dist/controllers/ConektaController.js:4:12)
      at newPaymentLink (/usr/src/app/dist/controllers/ConektaController.js:28:38)
}
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{
  error: Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client
      at new NodeError (node:internal/errors:405:5)
      at ServerResponse.setHeader (node:_http_outgoing:648:11)
      at ServerResponse.header (/usr/src/app/node_modules/express/lib/response.js:794:10)
      at ServerResponse.send (/usr/src/app/node_modules/express/lib/response.js:174:12)
      at ServerResponse.json (/usr/src/app/node_modules/express/lib/response.js:278:15)
      at ServerResponse.send (/usr/src/app/node_modules/express/lib/response.js:162:21)
      at /usr/src/app/dist/controllers/ConektaController.js:41:13
      at Generator.next (<anonymous>)
      at /usr/src/app/dist/controllers/ConektaController.js:8:71
      at new Promise (<anonymous>) {
    code: 'ERR_HTTP_HEADERS_SENT'
  }
}
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{
  result: '{"details":[{"debug_message":"Invalid format for \\"name\\".","message":"Formato inválido para \\"name\\".","param":"name","code":"conekta.errors.parameter_validation.name.invalid"},{"debug_message":"\\"customer_info attribute phone\\" is not a valid number, it must contain at least 10 digits (in Mexico the area-code/lada plus the 8 digit phone number) and preferably the country code (e attribute g +52 in Mexico).","message":"phone\\" no es un número de télefono válido. Debería de tener al menos 10 digitos (en México lada más los 8 dígitos) y de preferencia el código del país g +52 para México).","param":"customer_info.phone","code":"conekta.errors.parameter_validation.customer_info.phone.invalid_phone_number"},{"debug_message":"Invalid format for \\"customer_info attribute email\\"","message":"Formato inválido para email\\"","param":"customer_info.email","code":"conekta.errors.parameter_validation.customer_info.email.invalid"},{"debug_message":"\\"customer_info attribute phone\\" is too long.","message":"phone\\" contiene más de 20 caracteres.","param":"customer_info.phone","code":"conekta.errors.parameter_validation.customer_info.phone.too_long"}],"object":"error","type":"parameter_validation_error","log_id":"65a18ca033df8d0016f7ce1e"}'
}
{
  error: Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client
      at new NodeError (node:internal/errors:405:5)
      at ServerResponse.setHeader (node:_http_outgoing:648:11)
      at ServerResponse.header (/usr/src/app/node_modules/express/lib/response.js:794:10)
      at ServerResponse.send (/usr/src/app/node_modules/express/lib/response.js:174:12)
      at ServerResponse.json (/usr/src/app/node_modules/express/lib/response.js:278:15)
      at /usr/src/app/dist/controllers/ConektaController.js:71:13
      at Generator.next (<anonymous>)
      at fulfilled (/usr/src/app/dist/controllers/ConektaController.js:5:58)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
    code: 'ERR_HTTP_HEADERS_SENT'
  }
}
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{
  result: '{"details":[{"debug_message":"Invalid format for \\"name\\".","message":"Formato inválido para \\"name\\".","param":"name","code":"conekta.errors.parameter_validation.name.invalid"},{"debug_message":"\\"customer_info attribute phone\\" is not a valid number, it must contain at least 10 digits (in Mexico the area-code/lada plus the 8 digit phone number) and preferably the country code (e attribute g +52 in Mexico).","message":"phone\\" no es un número de télefono válido. Debería de tener al menos 10 digitos (en México lada más los 8 dígitos) y de preferencia el código del país g +52 para México).","param":"customer_info.phone","code":"conekta.errors.parameter_validation.customer_info.phone.invalid_phone_number"},{"debug_message":"Invalid format for \\"customer_info attribute email\\"","message":"Formato inválido para email\\"","param":"customer_info.email","code":"conekta.errors.parameter_validation.customer_info.email.invalid"},{"debug_message":"\\"customer_info attribute phone\\" is too long.","message":"phone\\" contiene más de 20 caracteres.","param":"customer_info.phone","code":"conekta.errors.parameter_validation.customer_info.phone.too_long"}],"object":"error","type":"parameter_validation_error","log_id":"65a18ca833df8d0016f7ce4b"}'
}
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{
  result: '{"details":[{"debug_message":"Invalid format for \\"name\\".","message":"Formato inválido para \\"name\\".","param":"name","code":"conekta.errors.parameter_validation.name.invalid"},{"debug_message":"\\"customer_info attribute phone\\" is not a valid number, it must contain at least 10 digits (in Mexico the area-code/lada plus the 8 digit phone number) and preferably the country code (e attribute g +52 in Mexico).","message":"phone\\" no es un número de télefono válido. Debería de tener al menos 10 digitos (en México lada más los 8 dígitos) y de preferencia el código del país g +52 para México).","param":"customer_info.phone","code":"conekta.errors.parameter_validation.customer_info.phone.invalid_phone_number"},{"debug_message":"Invalid format for \\"customer_info attribute email\\"","message":"Formato inválido para email\\"","param":"customer_info.email","code":"conekta.errors.parameter_validation.customer_info.email.invalid"},{"debug_message":"\\"customer_info attribute phone\\" is too long.","message":"phone\\" contiene más de 20 caracteres.","param":"customer_info.phone","code":"conekta.errors.parameter_validation.customer_info.phone.too_long"}],"object":"error","type":"parameter_validation_error","log_id":"65a18cb4fede9b00194a1b0f"}'
}
{
  error: Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client
      at new NodeError (node:internal/errors:405:5)
      at ServerResponse.setHeader (node:_http_outgoing:648:11)
      at ServerResponse.header (/usr/src/app/node_modules/express/lib/response.js:794:10)
      at ServerResponse.send (/usr/src/app/node_modules/express/lib/response.js:174:12)
      at ServerResponse.json (/usr/src/app/node_modules/express/lib/response.js:278:15)
      at /usr/src/app/dist/controllers/ConektaController.js:71:13
      at Generator.next (<anonymous>)
      at fulfilled (/usr/src/app/dist/controllers/ConektaController.js:5:58)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
    code: 'ERR_HTTP_HEADERS_SENT'
  }
}
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{
  result: '{"details":[{"debug_message":"Invalid format for \\"name\\".","message":"Formato inválido para \\"name\\".","param":"name","code":"conekta.errors.parameter_validation.name.invalid"},{"debug_message":"\\"customer_info attribute phone\\" is not a valid number, it must contain at least 10 digits (in Mexico the area-code/lada plus the 8 digit phone number) and preferably the country code (e attribute g +52 in Mexico).","message":"phone\\" no es un número de télefono válido. Debería de tener al menos 10 digitos (en México lada más los 8 dígitos) y de preferencia el código del país g +52 para México).","param":"customer_info.phone","code":"conekta.errors.parameter_validation.customer_info.phone.invalid_phone_number"},{"debug_message":"Invalid format for \\"customer_info attribute email\\"","message":"Formato inválido para email\\"","param":"customer_info.email","code":"conekta.errors.parameter_validation.customer_info.email.invalid"},{"debug_message":"\\"customer_info attribute phone\\" is too long.","message":"phone\\" contiene más de 20 caracteres.","param":"customer_info.phone","code":"conekta.errors.parameter_validation.customer_info.phone.too_long"}],"object":"error","type":"parameter_validation_error","log_id":"65a18cf5fede9b001cba9ac8"}'
}
{
  error: Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client
      at new NodeError (node:internal/errors:405:5)
      at ServerResponse.setHeader (node:_http_outgoing:648:11)
      at ServerResponse.header (/usr/src/app/node_modules/express/lib/response.js:794:10)
      at ServerResponse.send (/usr/src/app/node_modules/express/lib/response.js:174:12)
      at ServerResponse.json (/usr/src/app/node_modules/express/lib/response.js:278:15)
      at /usr/src/app/dist/controllers/ConektaController.js:71:13
      at Generator.next (<anonymous>)
      at fulfilled (/usr/src/app/dist/controllers/ConektaController.js:5:58)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
    code: 'ERR_HTTP_HEADERS_SENT'
  }
}
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{
  result: '{"details":[{"debug_message":"Invalid format for \\"name\\".","message":"Formato inválido para \\"name\\".","param":"name","code":"conekta.errors.parameter_validation.name.invalid"},{"debug_message":"\\"customer_info attribute phone\\" is not a valid number, it must contain at least 10 digits (in Mexico the area-code/lada plus the 8 digit phone number) and preferably the country code (e attribute g +52 in Mexico).","message":"phone\\" no es un número de télefono válido. Debería de tener al menos 10 digitos (en México lada más los 8 dígitos) y de preferencia el código del país g +52 para México).","param":"customer_info.phone","code":"conekta.errors.parameter_validation.customer_info.phone.invalid_phone_number"},{"debug_message":"Invalid format for \\"customer_info attribute email\\"","message":"Formato inválido para email\\"","param":"customer_info.email","code":"conekta.errors.parameter_validation.customer_info.email.invalid"},{"debug_message":"\\"customer_info attribute phone\\" is too long.","message":"phone\\" contiene más de 20 caracteres.","param":"customer_info.phone","code":"conekta.errors.parameter_validation.customer_info.phone.too_long"}],"object":"error","type":"parameter_validation_error","log_id":"65a18cfee338bc001bc7a17d"}'
}
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{
  result: '{"details":[{"debug_message":"Invalid format for \\"name\\".","message":"Formato inválido para \\"name\\".","param":"name","code":"conekta.errors.parameter_validation.name.invalid"},{"debug_message":"\\"customer_info attribute phone\\" is not a valid number, it must contain at least 10 digits (in Mexico the area-code/lada plus the 8 digit phone number) and preferably the country code (e attribute g +52 in Mexico).","message":"phone\\" no es un número de télefono válido. Debería de tener al menos 10 digitos (en México lada más los 8 dígitos) y de preferencia el código del país g +52 para México).","param":"customer_info.phone","code":"conekta.errors.parameter_validation.customer_info.phone.invalid_phone_number"},{"debug_message":"Invalid format for \\"customer_info attribute email\\"","message":"Formato inválido para email\\"","param":"customer_info.email","code":"conekta.errors.parameter_validation.customer_info.email.invalid"},{"debug_message":"\\"customer_info attribute phone\\" is too long.","message":"phone\\" contiene más de 20 caracteres.","param":"customer_info.phone","code":"conekta.errors.parameter_validation.customer_info.phone.too_long"}],"object":"error","type":"parameter_validation_error","log_id":"65a18d1333df8d0016f7d211"}'
}
{
  result: '{"details":[{"debug_message":"Invalid format for \\"name\\".","message":"Formato inválido para \\"name\\".","param":"name","code":"conekta.errors.parameter_validation.name.invalid"},{"debug_message":"\\"customer_info attribute phone\\" is not a valid number, it must contain at least 10 digits (in Mexico the area-code/lada plus the 8 digit phone number) and preferably the country code (e attribute g +52 in Mexico).","message":"phone\\" no es un número de télefono válido. Debería de tener al menos 10 digitos (en México lada más los 8 dígitos) y de preferencia el código del país g +52 para México).","param":"customer_info.phone","code":"conekta.errors.parameter_validation.customer_info.phone.invalid_phone_number"},{"debug_message":"Invalid format for \\"customer_info attribute email\\"","message":"Formato inválido para email\\"","param":"customer_info.email","code":"conekta.errors.parameter_validation.customer_info.email.invalid"},{"debug_message":"\\"customer_info attribute phone\\" is too long.","message":"phone\\" contiene más de 20 caracteres.","param":"customer_info.phone","code":"conekta.errors.parameter_validation.customer_info.phone.too_long"}],"object":"error","type":"parameter_validation_error","log_id":"65a18d147b5035001a537db6"}'
}
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{
  result: '{"details":[{"debug_message":"Invalid format for \\"name\\".","message":"Formato inválido para \\"name\\".","param":"name","code":"conekta.errors.parameter_validation.name.invalid"},{"debug_message":"\\"customer_info attribute phone\\" is not a valid number, it must contain at least 10 digits (in Mexico the area-code/lada plus the 8 digit phone number) and preferably the country code (e attribute g +52 in Mexico).","message":"phone\\" no es un número de télefono válido. Debería de tener al menos 10 digitos (en México lada más los 8 dígitos) y de preferencia el código del país g +52 para México).","param":"customer_info.phone","code":"conekta.errors.parameter_validation.customer_info.phone.invalid_phone_number"},{"debug_message":"Invalid format for \\"customer_info attribute email\\"","message":"Formato inválido para email\\"","param":"customer_info.email","code":"conekta.errors.parameter_validation.customer_info.email.invalid"},{"debug_message":"\\"customer_info attribute phone\\" is too long.","message":"phone\\" contiene más de 20 caracteres.","param":"customer_info.phone","code":"conekta.errors.parameter_validation.customer_info.phone.too_long"}],"object":"error","type":"parameter_validation_error","log_id":"65a18d2449a82b0016f44a67"}'
}
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{
  result: '{"details":[{"debug_message":"Invalid format for \\"name\\".","message":"Formato inválido para \\"name\\".","param":"name","code":"conekta.errors.parameter_validation.name.invalid"},{"debug_message":"\\"customer_info attribute phone\\" is not a valid number, it must contain at least 10 digits (in Mexico the area-code/lada plus the 8 digit phone number) and preferably the country code (e attribute g +52 in Mexico).","message":"phone\\" no es un número de télefono válido. Debería de tener al menos 10 digitos (en México lada más los 8 dígitos) y de preferencia el código del país g +52 para México).","param":"customer_info.phone","code":"conekta.errors.parameter_validation.customer_info.phone.invalid_phone_number"},{"debug_message":"Invalid format for \\"customer_info attribute email\\"","message":"Formato inválido para email\\"","param":"customer_info.email","code":"conekta.errors.parameter_validation.customer_info.email.invalid"},{"debug_message":"\\"customer_info attribute phone\\" is too long.","message":"phone\\" contiene más de 20 caracteres.","param":"customer_info.phone","code":"conekta.errors.parameter_validation.customer_info.phone.too_long"}],"object":"error","type":"parameter_validation_error","log_id":"65a18d3b33df8d001809229e"}'
}
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{
  result: '{"details":[{"debug_message":"Invalid format for \\"name\\".","message":"Formato inválido para \\"name\\".","param":"name","code":"conekta.errors.parameter_validation.name.invalid"},{"debug_message":"\\"customer_info attribute phone\\" is not a valid number, it must contain at least 10 digits (in Mexico the area-code/lada plus the 8 digit phone number) and preferably the country code (e attribute g +52 in Mexico).","message":"phone\\" no es un número de télefono válido. Debería de tener al menos 10 digitos (en México lada más los 8 dígitos) y de preferencia el código del país g +52 para México).","param":"customer_info.phone","code":"conekta.errors.parameter_validation.customer_info.phone.invalid_phone_number"},{"debug_message":"Invalid format for \\"customer_info attribute email\\"","message":"Formato inválido para email\\"","param":"customer_info.email","code":"conekta.errors.parameter_validation.customer_info.email.invalid"},{"debug_message":"\\"customer_info attribute phone\\" is too long.","message":"phone\\" contiene más de 20 caracteres.","param":"customer_info.phone","code":"conekta.errors.parameter_validation.customer_info.phone.too_long"}],"object":"error","type":"parameter_validation_error","log_id":"65a18d4b7b50350017ee4840"}'
}
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{
  error: Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client
      at new NodeError (node:internal/errors:405:5)
      at ServerResponse.setHeader (node:_http_outgoing:648:11)
      at ServerResponse.header (/usr/src/app/node_modules/express/lib/response.js:794:10)
      at ServerResponse.send (/usr/src/app/node_modules/express/lib/response.js:174:12)
      at ServerResponse.json (/usr/src/app/node_modules/express/lib/response.js:278:15)
      at /usr/src/app/dist/controllers/ConektaController.js:73:17
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
    code: 'ERR_HTTP_HEADERS_SENT'
  }
}
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
calling conekta webhooks ...
{
  conektaWebhookEvents: <ref *1> IncomingMessage {
    _readableState: ReadableState {
      state: 268310,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: [],
      flowing: true,
      errored: null,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    _events: [Object: null prototype] {},
    _eventsCount: 0,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(async_id_symbol)]: 108,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    rawHeaders: [
      'Host',
      '4fdb-189-143-174-180.ngrok-free.app',
      'User-Agent',
      'Conekta Webhook Notifier',
      'Content-Length',
      '644',
      'Accept',
      '*/*',
      'Accept-Encoding',
      'gzip;q=1.0,deflate;q=0.6,identity;q=0.3',
      'Content-Type',
      'application/json',
      'X-Datadog-Parent-Id',
      '1435596214986691781',
      'X-Datadog-Sampling-Priority',
      '0',
      'X-Datadog-Trace-Id',
      '48881164262681254',
      'X-Forwarded-For',
      '52.200.151.182',
      'X-Forwarded-Host',
      '4fdb-189-143-174-180.ngrok-free.app',
      'X-Forwarded-Proto',
      'https'
    ],
    rawTrailers: [],
    joinDuplicateHeaders: null,
    aborted: false,
    upgrade: false,
    url: '/conekta/webhooks',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(async_id_symbol)]: 108,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '/api/payments',
    originalUrl: '/api/payments/conekta/webhooks',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/conekta/webhooks',
      path: '/conekta/webhooks',
      href: '/conekta/webhooks',
      _raw: '/conekta/webhooks'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      _closed: false,
      socket: [Socket],
      _header: null,
      _keepAliveTimeout: 5000,
      _onPendingData: [Function: bound updateOutgoingData],
      req: [Circular *1],
      _sent100: false,
      _expect_continue: false,
      _maxRequestsPerSocket: 0,
      locals: [Object: null prototype] {},
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 16384,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    body: {
      data: [Object],
      livemode: false,
      webhook_status: 'pending',
      webhook_logs: [Array],
      id: '65a19050fede9b00194a396c',
      object: 'event',
      type: 'customer.created',
      created_at: 1705087056
    },
    _body: true,
    length: undefined,
    route: Route {
      path: '/conekta/webhooks',
      stack: [Array],
      methods: [Object]
    },
    [Symbol(kCapture)]: false,
    [Symbol(kHeaders)]: {
      host: '4fdb-189-143-174-180.ngrok-free.app',
      'user-agent': 'Conekta Webhook Notifier',
      'content-length': '644',
      accept: '*/*',
      'accept-encoding': 'gzip;q=1.0,deflate;q=0.6,identity;q=0.3',
      'content-type': 'application/json',
      'x-datadog-parent-id': '1435596214986691781',
      'x-datadog-sampling-priority': '0',
      'x-datadog-trace-id': '48881164262681254',
      'x-forwarded-for': '52.200.151.182',
      'x-forwarded-host': '4fdb-189-143-174-180.ngrok-free.app',
      'x-forwarded-proto': 'https'
    },
    [Symbol(kHeadersCount)]: 24,
    [Symbol(kTrailers)]: null,
    [Symbol(kTrailersCount)]: 0
  }
}
calling conekta webhooks ...
{
  conektaWebhookEvents: <ref *1> IncomingMessage {
    _readableState: ReadableState {
      state: 268310,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: [],
      flowing: true,
      errored: null,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    _events: [Object: null prototype] {},
    _eventsCount: 0,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(async_id_symbol)]: 121,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    rawHeaders: [
      'Host',
      '4fdb-189-143-174-180.ngrok-free.app',
      'User-Agent',
      'Conekta Webhook Notifier',
      'Content-Length',
      '1170',
      'Accept',
      '*/*',
      'Accept-Encoding',
      'gzip;q=1.0,deflate;q=0.6,identity;q=0.3',
      'Content-Type',
      'application/json',
      'X-Datadog-Parent-Id',
      '1692243991817766538',
      'X-Datadog-Sampling-Priority',
      '0',
      'X-Datadog-Trace-Id',
      '1068087719502685205',
      'X-Forwarded-For',
      '52.200.151.182',
      'X-Forwarded-Host',
      '4fdb-189-143-174-180.ngrok-free.app',
      'X-Forwarded-Proto',
      'https'
    ],
    rawTrailers: [],
    joinDuplicateHeaders: null,
    aborted: false,
    upgrade: false,
    url: '/conekta/webhooks',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(async_id_symbol)]: 121,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '/api/payments',
    originalUrl: '/api/payments/conekta/webhooks',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/conekta/webhooks',
      path: '/conekta/webhooks',
      href: '/conekta/webhooks',
      _raw: '/conekta/webhooks'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      _closed: false,
      socket: [Socket],
      _header: null,
      _keepAliveTimeout: 5000,
      _onPendingData: [Function: bound updateOutgoingData],
      req: [Circular *1],
      _sent100: false,
      _expect_continue: false,
      _maxRequestsPerSocket: 0,
      locals: [Object: null prototype] {},
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 16384,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    body: {
      data: [Object],
      livemode: false,
      webhook_status: 'pending',
      webhook_logs: [Array],
      id: '65a190517b5035001a53a2c1',
      object: 'event',
      type: 'charge.created',
      created_at: 1705087057
    },
    _body: true,
    length: undefined,
    route: Route {
      path: '/conekta/webhooks',
      stack: [Array],
      methods: [Object]
    },
    [Symbol(kCapture)]: false,
    [Symbol(kHeaders)]: {
      host: '4fdb-189-143-174-180.ngrok-free.app',
      'user-agent': 'Conekta Webhook Notifier',
      'content-length': '1170',
      accept: '*/*',
      'accept-encoding': 'gzip;q=1.0,deflate;q=0.6,identity;q=0.3',
      'content-type': 'application/json',
      'x-datadog-parent-id': '1692243991817766538',
      'x-datadog-sampling-priority': '0',
      'x-datadog-trace-id': '1068087719502685205',
      'x-forwarded-for': '52.200.151.182',
      'x-forwarded-host': '4fdb-189-143-174-180.ngrok-free.app',
      'x-forwarded-proto': 'https'
    },
    [Symbol(kHeadersCount)]: 24,
    [Symbol(kTrailers)]: null,
    [Symbol(kTrailersCount)]: 0
  }
}
calling conekta webhooks ...
{
  conektaWebhookEvents: <ref *1> IncomingMessage {
    _readableState: ReadableState {
      state: 268310,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: [],
      flowing: true,
      errored: null,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    _events: [Object: null prototype] {},
    _eventsCount: 0,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(async_id_symbol)]: 133,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    rawHeaders: [
      'Host',
      '4fdb-189-143-174-180.ngrok-free.app',
      'User-Agent',
      'Conekta Webhook Notifier',
      'Content-Length',
      '1913',
      'Accept',
      '*/*',
      'Accept-Encoding',
      'gzip;q=1.0,deflate;q=0.6,identity;q=0.3',
      'Content-Type',
      'application/json',
      'X-Datadog-Parent-Id',
      '3726877222489279517',
      'X-Datadog-Sampling-Priority',
      '1',
      'X-Datadog-Tags',
      '_dd.p.dm=-1',
      'X-Datadog-Trace-Id',
      '2621513662158357834',
      'X-Forwarded-For',
      '52.200.151.182',
      'X-Forwarded-Host',
      '4fdb-189-143-174-180.ngrok-free.app',
      'X-Forwarded-Proto',
      'https'
    ],
    rawTrailers: [],
    joinDuplicateHeaders: null,
    aborted: false,
    upgrade: false,
    url: '/conekta/webhooks',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(async_id_symbol)]: 133,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '/api/payments',
    originalUrl: '/api/payments/conekta/webhooks',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/conekta/webhooks',
      path: '/conekta/webhooks',
      href: '/conekta/webhooks',
      _raw: '/conekta/webhooks'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      _closed: false,
      socket: [Socket],
      _header: null,
      _keepAliveTimeout: 5000,
      _onPendingData: [Function: bound updateOutgoingData],
      req: [Circular *1],
      _sent100: false,
      _expect_continue: false,
      _maxRequestsPerSocket: 0,
      locals: [Object: null prototype] {},
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 16384,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    body: {
      data: [Object],
      livemode: false,
      webhook_status: 'pending',
      webhook_logs: [Array],
      id: '65a190507b5035001a53a2b8',
      object: 'event',
      type: 'order.created',
      created_at: 1705087056
    },
    _body: true,
    length: undefined,
    route: Route {
      path: '/conekta/webhooks',
      stack: [Array],
      methods: [Object]
    },
    [Symbol(kCapture)]: false,
    [Symbol(kHeaders)]: {
      host: '4fdb-189-143-174-180.ngrok-free.app',
      'user-agent': 'Conekta Webhook Notifier',
      'content-length': '1913',
      accept: '*/*',
      'accept-encoding': 'gzip;q=1.0,deflate;q=0.6,identity;q=0.3',
      'content-type': 'application/json',
      'x-datadog-parent-id': '3726877222489279517',
      'x-datadog-sampling-priority': '1',
      'x-datadog-tags': '_dd.p.dm=-1',
      'x-datadog-trace-id': '2621513662158357834',
      'x-forwarded-for': '52.200.151.182',
      'x-forwarded-host': '4fdb-189-143-174-180.ngrok-free.app',
      'x-forwarded-proto': 'https'
    },
    [Symbol(kHeadersCount)]: 26,
    [Symbol(kTrailers)]: null,
    [Symbol(kTrailersCount)]: 0
  }
}
calling conekta webhooks ...
{
  conektaWebhookEvents: <ref *1> IncomingMessage {
    _readableState: ReadableState {
      state: 268310,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: [],
      flowing: true,
      errored: null,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    _events: [Object: null prototype] {},
    _eventsCount: 0,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(async_id_symbol)]: 145,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    rawHeaders: [
      'Host',
      '4fdb-189-143-174-180.ngrok-free.app',
      'User-Agent',
      'Conekta Webhook Notifier',
      'Content-Length',
      '2445',
      'Accept',
      '*/*',
      'Accept-Encoding',
      'gzip;q=1.0,deflate;q=0.6,identity;q=0.3',
      'Content-Type',
      'application/json',
      'X-Datadog-Parent-Id',
      '4480557017444662418',
      'X-Datadog-Sampling-Priority',
      '1',
      'X-Datadog-Tags',
      '_dd.p.dm=-1',
      'X-Datadog-Trace-Id',
      '4157794474004531010',
      'X-Forwarded-For',
      '52.200.151.182',
      'X-Forwarded-Host',
      '4fdb-189-143-174-180.ngrok-free.app',
      'X-Forwarded-Proto',
      'https'
    ],
    rawTrailers: [],
    joinDuplicateHeaders: null,
    aborted: false,
    upgrade: false,
    url: '/conekta/webhooks',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(async_id_symbol)]: 145,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '/api/payments',
    originalUrl: '/api/payments/conekta/webhooks',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/conekta/webhooks',
      path: '/conekta/webhooks',
      href: '/conekta/webhooks',
      _raw: '/conekta/webhooks'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      _closed: false,
      socket: [Socket],
      _header: null,
      _keepAliveTimeout: 5000,
      _onPendingData: [Function: bound updateOutgoingData],
      req: [Circular *1],
      _sent100: false,
      _expect_continue: false,
      _maxRequestsPerSocket: 0,
      locals: [Object: null prototype] {},
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 16384,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    body: {
      data: [Object],
      livemode: false,
      webhook_status: 'pending',
      webhook_logs: [Array],
      id: '65a190517b5035001a53a2d3',
      object: 'event',
      type: 'order.paid',
      created_at: 1705087057
    },
    _body: true,
    length: undefined,
    route: Route {
      path: '/conekta/webhooks',
      stack: [Array],
      methods: [Object]
    },
    [Symbol(kCapture)]: false,
    [Symbol(kHeaders)]: {
      host: '4fdb-189-143-174-180.ngrok-free.app',
      'user-agent': 'Conekta Webhook Notifier',
      'content-length': '2445',
      accept: '*/*',
      'accept-encoding': 'gzip;q=1.0,deflate;q=0.6,identity;q=0.3',
      'content-type': 'application/json',
      'x-datadog-parent-id': '4480557017444662418',
      'x-datadog-sampling-priority': '1',
      'x-datadog-tags': '_dd.p.dm=-1',
      'x-datadog-trace-id': '4157794474004531010',
      'x-forwarded-for': '52.200.151.182',
      'x-forwarded-host': '4fdb-189-143-174-180.ngrok-free.app',
      'x-forwarded-proto': 'https'
    },
    [Symbol(kHeadersCount)]: 26,
    [Symbol(kTrailers)]: null,
    [Symbol(kTrailersCount)]: 0
  }
}
calling conekta webhooks ...
{
  conektaWebhookEvents: <ref *1> IncomingMessage {
    _readableState: ReadableState {
      state: 268310,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: [],
      flowing: true,
      errored: null,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    _events: [Object: null prototype] {},
    _eventsCount: 0,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(async_id_symbol)]: 157,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    rawHeaders: [
      'Host',
      '4fdb-189-143-174-180.ngrok-free.app',
      'User-Agent',
      'Conekta Webhook Notifier',
      'Content-Length',
      '1217',
      'Accept',
      '*/*',
      'Accept-Encoding',
      'gzip;q=1.0,deflate;q=0.6,identity;q=0.3',
      'Content-Type',
      'application/json',
      'X-Datadog-Parent-Id',
      '3674837538333217204',
      'X-Datadog-Sampling-Priority',
      '0',
      'X-Datadog-Trace-Id',
      '3233953185007140280',
      'X-Forwarded-For',
      '52.200.151.182',
      'X-Forwarded-Host',
      '4fdb-189-143-174-180.ngrok-free.app',
      'X-Forwarded-Proto',
      'https'
    ],
    rawTrailers: [],
    joinDuplicateHeaders: null,
    aborted: false,
    upgrade: false,
    url: '/conekta/webhooks',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(async_id_symbol)]: 157,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '/api/payments',
    originalUrl: '/api/payments/conekta/webhooks',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/conekta/webhooks',
      path: '/conekta/webhooks',
      href: '/conekta/webhooks',
      _raw: '/conekta/webhooks'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      _closed: false,
      socket: [Socket],
      _header: null,
      _keepAliveTimeout: 5000,
      _onPendingData: [Function: bound updateOutgoingData],
      req: [Circular *1],
      _sent100: false,
      _expect_continue: false,
      _maxRequestsPerSocket: 0,
      locals: [Object: null prototype] {},
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 16384,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    body: {
      data: [Object],
      livemode: false,
      webhook_status: 'pending',
      webhook_logs: [Array],
      id: '65a190517b5035001a53a2c7',
      object: 'event',
      type: 'charge.paid',
      created_at: 1705087057
    },
    _body: true,
    length: undefined,
    route: Route {
      path: '/conekta/webhooks',
      stack: [Array],
      methods: [Object]
    },
    [Symbol(kCapture)]: false,
    [Symbol(kHeaders)]: {
      host: '4fdb-189-143-174-180.ngrok-free.app',
      'user-agent': 'Conekta Webhook Notifier',
      'content-length': '1217',
      accept: '*/*',
      'accept-encoding': 'gzip;q=1.0,deflate;q=0.6,identity;q=0.3',
      'content-type': 'application/json',
      'x-datadog-parent-id': '3674837538333217204',
      'x-datadog-sampling-priority': '0',
      'x-datadog-trace-id': '3233953185007140280',
      'x-forwarded-for': '52.200.151.182',
      'x-forwarded-host': '4fdb-189-143-174-180.ngrok-free.app',
      'x-forwarded-proto': 'https'
    },
    [Symbol(kHeadersCount)]: 24,
    [Symbol(kTrailers)]: null,
    [Symbol(kTrailersCount)]: 0
  }
}
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
calling conekta webhooks ...
{
  wh_body: {
    data: { object: [Object], previous_attributes: {} },
    livemode: false,
    webhook_status: 'pending',
    webhook_logs: [ [Object] ],
    id: '65a19690fede9b001cbae8ce',
    object: 'event',
    type: 'order.created',
    created_at: 1705088656
  }
}
{ wh_query: {} }
{
  wh_res: <ref *1> ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    _closed: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [Circular *1],
      [Symbol(async_id_symbol)]: 108,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _keepAliveTimeout: 5000,
    _onPendingData: [Function: bound updateOutgoingData],
    req: IncomingMessage {
      _readableState: [ReadableState],
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      socket: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [Array],
      rawTrailers: [],
      joinDuplicateHeaders: null,
      aborted: false,
      upgrade: false,
      url: '/conekta/webhooks',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '/api/payments',
      originalUrl: '/api/payments/conekta/webhooks',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular *1],
      body: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: [Object],
      [Symbol(kHeadersCount)]: 24,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    },
    _sent100: false,
    _expect_continue: false,
    _maxRequestsPerSocket: 0,
    locals: [Object: null prototype] {},
    [Symbol(kCapture)]: false,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array],
      vary: [Array],
      'access-control-allow-credentials': [Array]
    },
    [Symbol(errored)]: null,
    [Symbol(kHighWaterMark)]: 16384,
    [Symbol(kRejectNonStandardBodyWrites)]: false,
    [Symbol(kUniqueHeaders)]: null
  }
}
{
  conektaWebhookEvents: <ref *1> IncomingMessage {
    _readableState: ReadableState {
      state: 268310,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: [],
      flowing: true,
      errored: null,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    _events: [Object: null prototype] {},
    _eventsCount: 0,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(async_id_symbol)]: 108,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    rawHeaders: [
      'Host',
      '4fdb-189-143-174-180.ngrok-free.app',
      'User-Agent',
      'Conekta Webhook Notifier',
      'Content-Length',
      '1917',
      'Accept',
      '*/*',
      'Accept-Encoding',
      'gzip;q=1.0,deflate;q=0.6,identity;q=0.3',
      'Content-Type',
      'application/json',
      'X-Datadog-Parent-Id',
      '440355343220153266',
      'X-Datadog-Sampling-Priority',
      '0',
      'X-Datadog-Trace-Id',
      '3130627650777242014',
      'X-Forwarded-For',
      '52.200.151.182',
      'X-Forwarded-Host',
      '4fdb-189-143-174-180.ngrok-free.app',
      'X-Forwarded-Proto',
      'https'
    ],
    rawTrailers: [],
    joinDuplicateHeaders: null,
    aborted: false,
    upgrade: false,
    url: '/conekta/webhooks',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(async_id_symbol)]: 108,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '/api/payments',
    originalUrl: '/api/payments/conekta/webhooks',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/conekta/webhooks',
      path: '/conekta/webhooks',
      href: '/conekta/webhooks',
      _raw: '/conekta/webhooks'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      _closed: false,
      socket: [Socket],
      _header: null,
      _keepAliveTimeout: 5000,
      _onPendingData: [Function: bound updateOutgoingData],
      req: [Circular *1],
      _sent100: false,
      _expect_continue: false,
      _maxRequestsPerSocket: 0,
      locals: [Object: null prototype] {},
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 16384,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    body: {
      data: [Object],
      livemode: false,
      webhook_status: 'pending',
      webhook_logs: [Array],
      id: '65a19690fede9b001cbae8ce',
      object: 'event',
      type: 'order.created',
      created_at: 1705088656
    },
    _body: true,
    length: undefined,
    route: Route {
      path: '/conekta/webhooks',
      stack: [Array],
      methods: [Object]
    },
    [Symbol(kCapture)]: false,
    [Symbol(kHeaders)]: {
      host: '4fdb-189-143-174-180.ngrok-free.app',
      'user-agent': 'Conekta Webhook Notifier',
      'content-length': '1917',
      accept: '*/*',
      'accept-encoding': 'gzip;q=1.0,deflate;q=0.6,identity;q=0.3',
      'content-type': 'application/json',
      'x-datadog-parent-id': '440355343220153266',
      'x-datadog-sampling-priority': '0',
      'x-datadog-trace-id': '3130627650777242014',
      'x-forwarded-for': '52.200.151.182',
      'x-forwarded-host': '4fdb-189-143-174-180.ngrok-free.app',
      'x-forwarded-proto': 'https'
    },
    [Symbol(kHeadersCount)]: 24,
    [Symbol(kTrailers)]: null,
    [Symbol(kTrailersCount)]: 0
  }
}
calling conekta webhooks ...
{
  wh_body: {
    data: { object: [Object], previous_attributes: [Object] },
    livemode: false,
    webhook_status: 'pending',
    webhook_logs: [ [Object] ],
    id: '65a19690fede9b001cbae8d9',
    object: 'event',
    type: 'charge.paid',
    created_at: 1705088656
  }
}
{ wh_query: {} }
{
  wh_res: <ref *1> ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    _closed: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [Circular *1],
      [Symbol(async_id_symbol)]: 121,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _keepAliveTimeout: 5000,
    _onPendingData: [Function: bound updateOutgoingData],
    req: IncomingMessage {
      _readableState: [ReadableState],
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      socket: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [Array],
      rawTrailers: [],
      joinDuplicateHeaders: null,
      aborted: false,
      upgrade: false,
      url: '/conekta/webhooks',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '/api/payments',
      originalUrl: '/api/payments/conekta/webhooks',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular *1],
      body: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: [Object],
      [Symbol(kHeadersCount)]: 24,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    },
    _sent100: false,
    _expect_continue: false,
    _maxRequestsPerSocket: 0,
    locals: [Object: null prototype] {},
    [Symbol(kCapture)]: false,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array],
      vary: [Array],
      'access-control-allow-credentials': [Array]
    },
    [Symbol(errored)]: null,
    [Symbol(kHighWaterMark)]: 16384,
    [Symbol(kRejectNonStandardBodyWrites)]: false,
    [Symbol(kUniqueHeaders)]: null
  }
}
{
  conektaWebhookEvents: <ref *1> IncomingMessage {
    _readableState: ReadableState {
      state: 268310,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: [],
      flowing: true,
      errored: null,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    _events: [Object: null prototype] {},
    _eventsCount: 0,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(async_id_symbol)]: 121,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    rawHeaders: [
      'Host',
      '4fdb-189-143-174-180.ngrok-free.app',
      'User-Agent',
      'Conekta Webhook Notifier',
      'Content-Length',
      '1222',
      'Accept',
      '*/*',
      'Accept-Encoding',
      'gzip;q=1.0,deflate;q=0.6,identity;q=0.3',
      'Content-Type',
      'application/json',
      'X-Datadog-Parent-Id',
      '4607417720916627238',
      'X-Datadog-Sampling-Priority',
      '0',
      'X-Datadog-Trace-Id',
      '2887588545216703058',
      'X-Forwarded-For',
      '52.200.151.182',
      'X-Forwarded-Host',
      '4fdb-189-143-174-180.ngrok-free.app',
      'X-Forwarded-Proto',
      'https'
    ],
    rawTrailers: [],
    joinDuplicateHeaders: null,
    aborted: false,
    upgrade: false,
    url: '/conekta/webhooks',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(async_id_symbol)]: 121,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '/api/payments',
    originalUrl: '/api/payments/conekta/webhooks',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/conekta/webhooks',
      path: '/conekta/webhooks',
      href: '/conekta/webhooks',
      _raw: '/conekta/webhooks'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      _closed: false,
      socket: [Socket],
      _header: null,
      _keepAliveTimeout: 5000,
      _onPendingData: [Function: bound updateOutgoingData],
      req: [Circular *1],
      _sent100: false,
      _expect_continue: false,
      _maxRequestsPerSocket: 0,
      locals: [Object: null prototype] {},
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 16384,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    body: {
      data: [Object],
      livemode: false,
      webhook_status: 'pending',
      webhook_logs: [Array],
      id: '65a19690fede9b001cbae8d9',
      object: 'event',
      type: 'charge.paid',
      created_at: 1705088656
    },
    _body: true,
    length: undefined,
    route: Route {
      path: '/conekta/webhooks',
      stack: [Array],
      methods: [Object]
    },
    [Symbol(kCapture)]: false,
    [Symbol(kHeaders)]: {
      host: '4fdb-189-143-174-180.ngrok-free.app',
      'user-agent': 'Conekta Webhook Notifier',
      'content-length': '1222',
      accept: '*/*',
      'accept-encoding': 'gzip;q=1.0,deflate;q=0.6,identity;q=0.3',
      'content-type': 'application/json',
      'x-datadog-parent-id': '4607417720916627238',
      'x-datadog-sampling-priority': '0',
      'x-datadog-trace-id': '2887588545216703058',
      'x-forwarded-for': '52.200.151.182',
      'x-forwarded-host': '4fdb-189-143-174-180.ngrok-free.app',
      'x-forwarded-proto': 'https'
    },
    [Symbol(kHeadersCount)]: 24,
    [Symbol(kTrailers)]: null,
    [Symbol(kTrailersCount)]: 0
  }
}
calling conekta webhooks ...
{
  wh_body: {
    data: { object: [Object], previous_attributes: {} },
    livemode: false,
    webhook_status: 'pending',
    webhook_logs: [ [Object] ],
    id: '65a19690fede9b001cbae8df',
    object: 'event',
    type: 'order.paid',
    created_at: 1705088656
  }
}
{ wh_query: {} }
{
  wh_res: <ref *1> ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    _closed: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [Circular *1],
      [Symbol(async_id_symbol)]: 133,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _keepAliveTimeout: 5000,
    _onPendingData: [Function: bound updateOutgoingData],
    req: IncomingMessage {
      _readableState: [ReadableState],
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      socket: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [Array],
      rawTrailers: [],
      joinDuplicateHeaders: null,
      aborted: false,
      upgrade: false,
      url: '/conekta/webhooks',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '/api/payments',
      originalUrl: '/api/payments/conekta/webhooks',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular *1],
      body: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: [Object],
      [Symbol(kHeadersCount)]: 24,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    },
    _sent100: false,
    _expect_continue: false,
    _maxRequestsPerSocket: 0,
    locals: [Object: null prototype] {},
    [Symbol(kCapture)]: false,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array],
      vary: [Array],
      'access-control-allow-credentials': [Array]
    },
    [Symbol(errored)]: null,
    [Symbol(kHighWaterMark)]: 16384,
    [Symbol(kRejectNonStandardBodyWrites)]: false,
    [Symbol(kUniqueHeaders)]: null
  }
}
{
  conektaWebhookEvents: <ref *1> IncomingMessage {
    _readableState: ReadableState {
      state: 268310,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: [],
      flowing: true,
      errored: null,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    _events: [Object: null prototype] {},
    _eventsCount: 0,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(async_id_symbol)]: 133,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    rawHeaders: [
      'Host',
      '4fdb-189-143-174-180.ngrok-free.app',
      'User-Agent',
      'Conekta Webhook Notifier',
      'Content-Length',
      '2454',
      'Accept',
      '*/*',
      'Accept-Encoding',
      'gzip;q=1.0,deflate;q=0.6,identity;q=0.3',
      'Content-Type',
      'application/json',
      'X-Datadog-Parent-Id',
      '4130610103081674020',
      'X-Datadog-Sampling-Priority',
      '0',
      'X-Datadog-Trace-Id',
      '1436418182132068954',
      'X-Forwarded-For',
      '52.200.151.182',
      'X-Forwarded-Host',
      '4fdb-189-143-174-180.ngrok-free.app',
      'X-Forwarded-Proto',
      'https'
    ],
    rawTrailers: [],
    joinDuplicateHeaders: null,
    aborted: false,
    upgrade: false,
    url: '/conekta/webhooks',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(async_id_symbol)]: 133,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '/api/payments',
    originalUrl: '/api/payments/conekta/webhooks',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/conekta/webhooks',
      path: '/conekta/webhooks',
      href: '/conekta/webhooks',
      _raw: '/conekta/webhooks'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      _closed: false,
      socket: [Socket],
      _header: null,
      _keepAliveTimeout: 5000,
      _onPendingData: [Function: bound updateOutgoingData],
      req: [Circular *1],
      _sent100: false,
      _expect_continue: false,
      _maxRequestsPerSocket: 0,
      locals: [Object: null prototype] {},
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 16384,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    body: {
      data: [Object],
      livemode: false,
      webhook_status: 'pending',
      webhook_logs: [Array],
      id: '65a19690fede9b001cbae8df',
      object: 'event',
      type: 'order.paid',
      created_at: 1705088656
    },
    _body: true,
    length: undefined,
    route: Route {
      path: '/conekta/webhooks',
      stack: [Array],
      methods: [Object]
    },
    [Symbol(kCapture)]: false,
    [Symbol(kHeaders)]: {
      host: '4fdb-189-143-174-180.ngrok-free.app',
      'user-agent': 'Conekta Webhook Notifier',
      'content-length': '2454',
      accept: '*/*',
      'accept-encoding': 'gzip;q=1.0,deflate;q=0.6,identity;q=0.3',
      'content-type': 'application/json',
      'x-datadog-parent-id': '4130610103081674020',
      'x-datadog-sampling-priority': '0',
      'x-datadog-trace-id': '1436418182132068954',
      'x-forwarded-for': '52.200.151.182',
      'x-forwarded-host': '4fdb-189-143-174-180.ngrok-free.app',
      'x-forwarded-proto': 'https'
    },
    [Symbol(kHeadersCount)]: 24,
    [Symbol(kTrailers)]: null,
    [Symbol(kTrailersCount)]: 0
  }
}
calling conekta webhooks ...
{
  wh_body: {
    data: { object: [Object], previous_attributes: {} },
    livemode: false,
    webhook_status: 'pending',
    webhook_logs: [ [Object] ],
    id: '65a19690fede9b001cbae8d7',
    object: 'event',
    type: 'charge.created',
    created_at: 1705088656
  }
}
{ wh_query: {} }
{
  wh_res: <ref *1> ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    _closed: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [Circular *1],
      [Symbol(async_id_symbol)]: 145,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _keepAliveTimeout: 5000,
    _onPendingData: [Function: bound updateOutgoingData],
    req: IncomingMessage {
      _readableState: [ReadableState],
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      socket: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [Array],
      rawTrailers: [],
      joinDuplicateHeaders: null,
      aborted: false,
      upgrade: false,
      url: '/conekta/webhooks',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '/api/payments',
      originalUrl: '/api/payments/conekta/webhooks',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular *1],
      body: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: [Object],
      [Symbol(kHeadersCount)]: 26,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    },
    _sent100: false,
    _expect_continue: false,
    _maxRequestsPerSocket: 0,
    locals: [Object: null prototype] {},
    [Symbol(kCapture)]: false,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array],
      vary: [Array],
      'access-control-allow-credentials': [Array]
    },
    [Symbol(errored)]: null,
    [Symbol(kHighWaterMark)]: 16384,
    [Symbol(kRejectNonStandardBodyWrites)]: false,
    [Symbol(kUniqueHeaders)]: null
  }
}
{
  conektaWebhookEvents: <ref *1> IncomingMessage {
    _readableState: ReadableState {
      state: 268310,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: [],
      flowing: true,
      errored: null,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    _events: [Object: null prototype] {},
    _eventsCount: 0,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(async_id_symbol)]: 145,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    rawHeaders: [
      'Host',
      '4fdb-189-143-174-180.ngrok-free.app',
      'User-Agent',
      'Conekta Webhook Notifier',
      'Content-Length',
      '1175',
      'Accept',
      '*/*',
      'Accept-Encoding',
      'gzip;q=1.0,deflate;q=0.6,identity;q=0.3',
      'Content-Type',
      'application/json',
      'X-Datadog-Parent-Id',
      '4315833201236350580',
      'X-Datadog-Sampling-Priority',
      '1',
      'X-Datadog-Tags',
      '_dd.p.dm=-1',
      'X-Datadog-Trace-Id',
      '1814436078717505225',
      'X-Forwarded-For',
      '52.200.151.182',
      'X-Forwarded-Host',
      '4fdb-189-143-174-180.ngrok-free.app',
      'X-Forwarded-Proto',
      'https'
    ],
    rawTrailers: [],
    joinDuplicateHeaders: null,
    aborted: false,
    upgrade: false,
    url: '/conekta/webhooks',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(async_id_symbol)]: 145,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '/api/payments',
    originalUrl: '/api/payments/conekta/webhooks',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/conekta/webhooks',
      path: '/conekta/webhooks',
      href: '/conekta/webhooks',
      _raw: '/conekta/webhooks'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      _closed: false,
      socket: [Socket],
      _header: null,
      _keepAliveTimeout: 5000,
      _onPendingData: [Function: bound updateOutgoingData],
      req: [Circular *1],
      _sent100: false,
      _expect_continue: false,
      _maxRequestsPerSocket: 0,
      locals: [Object: null prototype] {},
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 16384,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    body: {
      data: [Object],
      livemode: false,
      webhook_status: 'pending',
      webhook_logs: [Array],
      id: '65a19690fede9b001cbae8d7',
      object: 'event',
      type: 'charge.created',
      created_at: 1705088656
    },
    _body: true,
    length: undefined,
    route: Route {
      path: '/conekta/webhooks',
      stack: [Array],
      methods: [Object]
    },
    [Symbol(kCapture)]: false,
    [Symbol(kHeaders)]: {
      host: '4fdb-189-143-174-180.ngrok-free.app',
      'user-agent': 'Conekta Webhook Notifier',
      'content-length': '1175',
      accept: '*/*',
      'accept-encoding': 'gzip;q=1.0,deflate;q=0.6,identity;q=0.3',
      'content-type': 'application/json',
      'x-datadog-parent-id': '4315833201236350580',
      'x-datadog-sampling-priority': '1',
      'x-datadog-tags': '_dd.p.dm=-1',
      'x-datadog-trace-id': '1814436078717505225',
      'x-forwarded-for': '52.200.151.182',
      'x-forwarded-host': '4fdb-189-143-174-180.ngrok-free.app',
      'x-forwarded-proto': 'https'
    },
    [Symbol(kHeadersCount)]: 26,
    [Symbol(kTrailers)]: null,
    [Symbol(kTrailersCount)]: 0
  }
}
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
calling conekta webhooks ...
{
  wh_body: {
    data: { object: [Object], previous_attributes: {} },
    livemode: false,
    webhook_status: 'pending',
    webhook_logs: [ [Object] ],
    id: '65a1975c7b50350019397339',
    object: 'event',
    type: 'order.created',
    created_at: 1705088860
  }
}
{
  wh_body_data: {
    object: {
      livemode: false,
      amount: 95000,
      currency: 'MXN',
      payment_status: null,
      amount_refunded: 0,
      split_payment: false,
      customer_info: [Object],
      shipping_contact: [Object],
      channel: [Object],
      fiscal_entity: null,
      checkout: null,
      object: 'order',
      id: 'ord_2vEiB2osh4xJPZJxV',
      metadata: {},
      is_refundable: false,
      processing_mode: null,
      created_at: 1705088860,
      updated_at: 1705088860,
      line_items: [Object],
      shipping_lines: null,
      tax_lines: null,
      discount_lines: null,
      charges: null
    },
    previous_attributes: {}
  }
}
{ wh_query: {} }
{
  wh_res: <ref *1> ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    _closed: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [Circular *1],
      [Symbol(async_id_symbol)]: 73,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _keepAliveTimeout: 5000,
    _onPendingData: [Function: bound updateOutgoingData],
    req: IncomingMessage {
      _readableState: [ReadableState],
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      socket: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [Array],
      rawTrailers: [],
      joinDuplicateHeaders: null,
      aborted: false,
      upgrade: false,
      url: '/conekta/webhooks',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '/api/payments',
      originalUrl: '/api/payments/conekta/webhooks',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular *1],
      body: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: [Object],
      [Symbol(kHeadersCount)]: 24,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    },
    _sent100: false,
    _expect_continue: false,
    _maxRequestsPerSocket: 0,
    locals: [Object: null prototype] {},
    [Symbol(kCapture)]: false,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array],
      vary: [Array],
      'access-control-allow-credentials': [Array]
    },
    [Symbol(errored)]: null,
    [Symbol(kHighWaterMark)]: 16384,
    [Symbol(kRejectNonStandardBodyWrites)]: false,
    [Symbol(kUniqueHeaders)]: null
  }
}
{
  conektaWebhookEvents: <ref *1> IncomingMessage {
    _readableState: ReadableState {
      state: 268310,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: [],
      flowing: true,
      errored: null,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    _events: [Object: null prototype] {},
    _eventsCount: 0,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(async_id_symbol)]: 73,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    rawHeaders: [
      'Host',
      '4fdb-189-143-174-180.ngrok-free.app',
      'User-Agent',
      'Conekta Webhook Notifier',
      'Content-Length',
      '1917',
      'Accept',
      '*/*',
      'Accept-Encoding',
      'gzip;q=1.0,deflate;q=0.6,identity;q=0.3',
      'Content-Type',
      'application/json',
      'X-Datadog-Parent-Id',
      '2281305850066862487',
      'X-Datadog-Sampling-Priority',
      '0',
      'X-Datadog-Trace-Id',
      '3212236682301993982',
      'X-Forwarded-For',
      '52.200.151.182',
      'X-Forwarded-Host',
      '4fdb-189-143-174-180.ngrok-free.app',
      'X-Forwarded-Proto',
      'https'
    ],
    rawTrailers: [],
    joinDuplicateHeaders: null,
    aborted: false,
    upgrade: false,
    url: '/conekta/webhooks',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(async_id_symbol)]: 73,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '/api/payments',
    originalUrl: '/api/payments/conekta/webhooks',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/conekta/webhooks',
      path: '/conekta/webhooks',
      href: '/conekta/webhooks',
      _raw: '/conekta/webhooks'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      _closed: false,
      socket: [Socket],
      _header: null,
      _keepAliveTimeout: 5000,
      _onPendingData: [Function: bound updateOutgoingData],
      req: [Circular *1],
      _sent100: false,
      _expect_continue: false,
      _maxRequestsPerSocket: 0,
      locals: [Object: null prototype] {},
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 16384,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    body: {
      data: [Object],
      livemode: false,
      webhook_status: 'pending',
      webhook_logs: [Array],
      id: '65a1975c7b50350019397339',
      object: 'event',
      type: 'order.created',
      created_at: 1705088860
    },
    _body: true,
    length: undefined,
    route: Route {
      path: '/conekta/webhooks',
      stack: [Array],
      methods: [Object]
    },
    [Symbol(kCapture)]: false,
    [Symbol(kHeaders)]: {
      host: '4fdb-189-143-174-180.ngrok-free.app',
      'user-agent': 'Conekta Webhook Notifier',
      'content-length': '1917',
      accept: '*/*',
      'accept-encoding': 'gzip;q=1.0,deflate;q=0.6,identity;q=0.3',
      'content-type': 'application/json',
      'x-datadog-parent-id': '2281305850066862487',
      'x-datadog-sampling-priority': '0',
      'x-datadog-trace-id': '3212236682301993982',
      'x-forwarded-for': '52.200.151.182',
      'x-forwarded-host': '4fdb-189-143-174-180.ngrok-free.app',
      'x-forwarded-proto': 'https'
    },
    [Symbol(kHeadersCount)]: 24,
    [Symbol(kTrailers)]: null,
    [Symbol(kTrailersCount)]: 0
  }
}
calling conekta webhooks ...
{
  wh_body: {
    data: { object: [Object], previous_attributes: {} },
    livemode: false,
    webhook_status: 'pending',
    webhook_logs: [ [Object] ],
    id: '65a1975c7b5035001939734a',
    object: 'event',
    type: 'order.paid',
    created_at: 1705088860
  }
}
{
  wh_body_data: {
    object: {
      livemode: false,
      amount: 95000,
      currency: 'MXN',
      payment_status: 'paid',
      amount_refunded: 0,
      customer_info: [Object],
      shipping_contact: [Object],
      channel: [Object],
      object: 'order',
      id: 'ord_2vEiB2osh4xJPZJxV',
      metadata: {},
      is_refundable: true,
      created_at: 1705088860,
      updated_at: 1705088860,
      line_items: [Object],
      charges: [Object]
    },
    previous_attributes: {}
  }
}
{ wh_query: {} }
{
  wh_res: <ref *1> ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    _closed: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [Circular *1],
      [Symbol(async_id_symbol)]: 86,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _keepAliveTimeout: 5000,
    _onPendingData: [Function: bound updateOutgoingData],
    req: IncomingMessage {
      _readableState: [ReadableState],
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      socket: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [Array],
      rawTrailers: [],
      joinDuplicateHeaders: null,
      aborted: false,
      upgrade: false,
      url: '/conekta/webhooks',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '/api/payments',
      originalUrl: '/api/payments/conekta/webhooks',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular *1],
      body: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: [Object],
      [Symbol(kHeadersCount)]: 24,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    },
    _sent100: false,
    _expect_continue: false,
    _maxRequestsPerSocket: 0,
    locals: [Object: null prototype] {},
    [Symbol(kCapture)]: false,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array],
      vary: [Array],
      'access-control-allow-credentials': [Array]
    },
    [Symbol(errored)]: null,
    [Symbol(kHighWaterMark)]: 16384,
    [Symbol(kRejectNonStandardBodyWrites)]: false,
    [Symbol(kUniqueHeaders)]: null
  }
}
{
  conektaWebhookEvents: <ref *1> IncomingMessage {
    _readableState: ReadableState {
      state: 268310,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: [],
      flowing: true,
      errored: null,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    _events: [Object: null prototype] {},
    _eventsCount: 0,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(async_id_symbol)]: 86,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    rawHeaders: [
      'Host',
      '4fdb-189-143-174-180.ngrok-free.app',
      'User-Agent',
      'Conekta Webhook Notifier',
      'Content-Length',
      '2454',
      'Accept',
      '*/*',
      'Accept-Encoding',
      'gzip;q=1.0,deflate;q=0.6,identity;q=0.3',
      'Content-Type',
      'application/json',
      'X-Datadog-Parent-Id',
      '86145937083433144',
      'X-Datadog-Sampling-Priority',
      '0',
      'X-Datadog-Trace-Id',
      '3175407341993963602',
      'X-Forwarded-For',
      '52.200.151.182',
      'X-Forwarded-Host',
      '4fdb-189-143-174-180.ngrok-free.app',
      'X-Forwarded-Proto',
      'https'
    ],
    rawTrailers: [],
    joinDuplicateHeaders: null,
    aborted: false,
    upgrade: false,
    url: '/conekta/webhooks',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(async_id_symbol)]: 86,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '/api/payments',
    originalUrl: '/api/payments/conekta/webhooks',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/conekta/webhooks',
      path: '/conekta/webhooks',
      href: '/conekta/webhooks',
      _raw: '/conekta/webhooks'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      _closed: false,
      socket: [Socket],
      _header: null,
      _keepAliveTimeout: 5000,
      _onPendingData: [Function: bound updateOutgoingData],
      req: [Circular *1],
      _sent100: false,
      _expect_continue: false,
      _maxRequestsPerSocket: 0,
      locals: [Object: null prototype] {},
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 16384,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    body: {
      data: [Object],
      livemode: false,
      webhook_status: 'pending',
      webhook_logs: [Array],
      id: '65a1975c7b5035001939734a',
      object: 'event',
      type: 'order.paid',
      created_at: 1705088860
    },
    _body: true,
    length: undefined,
    route: Route {
      path: '/conekta/webhooks',
      stack: [Array],
      methods: [Object]
    },
    [Symbol(kCapture)]: false,
    [Symbol(kHeaders)]: {
      host: '4fdb-189-143-174-180.ngrok-free.app',
      'user-agent': 'Conekta Webhook Notifier',
      'content-length': '2454',
      accept: '*/*',
      'accept-encoding': 'gzip;q=1.0,deflate;q=0.6,identity;q=0.3',
      'content-type': 'application/json',
      'x-datadog-parent-id': '86145937083433144',
      'x-datadog-sampling-priority': '0',
      'x-datadog-trace-id': '3175407341993963602',
      'x-forwarded-for': '52.200.151.182',
      'x-forwarded-host': '4fdb-189-143-174-180.ngrok-free.app',
      'x-forwarded-proto': 'https'
    },
    [Symbol(kHeadersCount)]: 24,
    [Symbol(kTrailers)]: null,
    [Symbol(kTrailersCount)]: 0
  }
}
calling conekta webhooks ...
{
  wh_body: {
    data: { object: [Object], previous_attributes: {} },
    livemode: false,
    webhook_status: 'pending',
    webhook_logs: [ [Object] ],
    id: '65a1975c7b50350019397342',
    object: 'event',
    type: 'charge.created',
    created_at: 1705088860
  }
}
{
  wh_body_data: {
    object: {
      id: '65a1975c7b5035001939733b',
      livemode: false,
      created_at: 1705088860,
      currency: 'MXN',
      device_fingerprint: '8a7552bb3a2d380175329bb85d87f5bb',
      channel: [Object],
      payment_method: [Object],
      object: 'charge',
      description: 'Payment from order',
      status: 'pending_payment',
      amount: 95000,
      fee: 4095,
      customer_id: 'cus_2vEhn5MpeXKMPHjf8',
      order_id: 'ord_2vEiB2osh4xJPZJxV'
    },
    previous_attributes: {}
  }
}
{ wh_query: {} }
{
  wh_res: <ref *1> ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    _closed: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [Circular *1],
      [Symbol(async_id_symbol)]: 98,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _keepAliveTimeout: 5000,
    _onPendingData: [Function: bound updateOutgoingData],
    req: IncomingMessage {
      _readableState: [ReadableState],
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      socket: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [Array],
      rawTrailers: [],
      joinDuplicateHeaders: null,
      aborted: false,
      upgrade: false,
      url: '/conekta/webhooks',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '/api/payments',
      originalUrl: '/api/payments/conekta/webhooks',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular *1],
      body: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: [Object],
      [Symbol(kHeadersCount)]: 24,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    },
    _sent100: false,
    _expect_continue: false,
    _maxRequestsPerSocket: 0,
    locals: [Object: null prototype] {},
    [Symbol(kCapture)]: false,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array],
      vary: [Array],
      'access-control-allow-credentials': [Array]
    },
    [Symbol(errored)]: null,
    [Symbol(kHighWaterMark)]: 16384,
    [Symbol(kRejectNonStandardBodyWrites)]: false,
    [Symbol(kUniqueHeaders)]: null
  }
}
{
  conektaWebhookEvents: <ref *1> IncomingMessage {
    _readableState: ReadableState {
      state: 268310,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: [],
      flowing: true,
      errored: null,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    _events: [Object: null prototype] {},
    _eventsCount: 0,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(async_id_symbol)]: 98,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    rawHeaders: [
      'Host',
      '4fdb-189-143-174-180.ngrok-free.app',
      'User-Agent',
      'Conekta Webhook Notifier',
      'Content-Length',
      '1175',
      'Accept',
      '*/*',
      'Accept-Encoding',
      'gzip;q=1.0,deflate;q=0.6,identity;q=0.3',
      'Content-Type',
      'application/json',
      'X-Datadog-Parent-Id',
      '2165851864197102234',
      'X-Datadog-Sampling-Priority',
      '0',
      'X-Datadog-Trace-Id',
      '1942512949379188292',
      'X-Forwarded-For',
      '52.200.151.182',
      'X-Forwarded-Host',
      '4fdb-189-143-174-180.ngrok-free.app',
      'X-Forwarded-Proto',
      'https'
    ],
    rawTrailers: [],
    joinDuplicateHeaders: null,
    aborted: false,
    upgrade: false,
    url: '/conekta/webhooks',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(async_id_symbol)]: 98,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '/api/payments',
    originalUrl: '/api/payments/conekta/webhooks',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/conekta/webhooks',
      path: '/conekta/webhooks',
      href: '/conekta/webhooks',
      _raw: '/conekta/webhooks'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      _closed: false,
      socket: [Socket],
      _header: null,
      _keepAliveTimeout: 5000,
      _onPendingData: [Function: bound updateOutgoingData],
      req: [Circular *1],
      _sent100: false,
      _expect_continue: false,
      _maxRequestsPerSocket: 0,
      locals: [Object: null prototype] {},
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 16384,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    body: {
      data: [Object],
      livemode: false,
      webhook_status: 'pending',
      webhook_logs: [Array],
      id: '65a1975c7b50350019397342',
      object: 'event',
      type: 'charge.created',
      created_at: 1705088860
    },
    _body: true,
    length: undefined,
    route: Route {
      path: '/conekta/webhooks',
      stack: [Array],
      methods: [Object]
    },
    [Symbol(kCapture)]: false,
    [Symbol(kHeaders)]: {
      host: '4fdb-189-143-174-180.ngrok-free.app',
      'user-agent': 'Conekta Webhook Notifier',
      'content-length': '1175',
      accept: '*/*',
      'accept-encoding': 'gzip;q=1.0,deflate;q=0.6,identity;q=0.3',
      'content-type': 'application/json',
      'x-datadog-parent-id': '2165851864197102234',
      'x-datadog-sampling-priority': '0',
      'x-datadog-trace-id': '1942512949379188292',
      'x-forwarded-for': '52.200.151.182',
      'x-forwarded-host': '4fdb-189-143-174-180.ngrok-free.app',
      'x-forwarded-proto': 'https'
    },
    [Symbol(kHeadersCount)]: 24,
    [Symbol(kTrailers)]: null,
    [Symbol(kTrailersCount)]: 0
  }
}
calling conekta webhooks ...
{
  wh_body: {
    data: { object: [Object], previous_attributes: [Object] },
    livemode: false,
    webhook_status: 'pending',
    webhook_logs: [ [Object] ],
    id: '65a1975c7b50350019397344',
    object: 'event',
    type: 'charge.paid',
    created_at: 1705088860
  }
}
{
  wh_body_data: {
    object: {
      id: '65a1975c7b5035001939733b',
      livemode: false,
      created_at: 1705088860,
      currency: 'MXN',
      device_fingerprint: '8a7552bb3a2d380175329bb85d87f5bb',
      channel: [Object],
      payment_method: [Object],
      object: 'charge',
      description: 'Payment from order',
      status: 'paid',
      amount: 95000,
      paid_at: 1705088860,
      fee: 4095,
      customer_id: 'cus_2vEhn5MpeXKMPHjf8',
      order_id: 'ord_2vEiB2osh4xJPZJxV'
    },
    previous_attributes: { payment_method: {} }
  }
}
{ wh_query: {} }
{
  wh_res: <ref *1> ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    _closed: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [Circular *1],
      [Symbol(async_id_symbol)]: 110,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _keepAliveTimeout: 5000,
    _onPendingData: [Function: bound updateOutgoingData],
    req: IncomingMessage {
      _readableState: [ReadableState],
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      socket: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [Array],
      rawTrailers: [],
      joinDuplicateHeaders: null,
      aborted: false,
      upgrade: false,
      url: '/conekta/webhooks',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '/api/payments',
      originalUrl: '/api/payments/conekta/webhooks',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular *1],
      body: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: [Object],
      [Symbol(kHeadersCount)]: 24,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    },
    _sent100: false,
    _expect_continue: false,
    _maxRequestsPerSocket: 0,
    locals: [Object: null prototype] {},
    [Symbol(kCapture)]: false,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array],
      vary: [Array],
      'access-control-allow-credentials': [Array]
    },
    [Symbol(errored)]: null,
    [Symbol(kHighWaterMark)]: 16384,
    [Symbol(kRejectNonStandardBodyWrites)]: false,
    [Symbol(kUniqueHeaders)]: null
  }
}
{
  conektaWebhookEvents: <ref *1> IncomingMessage {
    _readableState: ReadableState {
      state: 268310,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: [],
      flowing: true,
      errored: null,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    _events: [Object: null prototype] {},
    _eventsCount: 0,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(async_id_symbol)]: 110,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    rawHeaders: [
      'Host',
      '4fdb-189-143-174-180.ngrok-free.app',
      'User-Agent',
      'Conekta Webhook Notifier',
      'Content-Length',
      '1222',
      'Accept',
      '*/*',
      'Accept-Encoding',
      'gzip;q=1.0,deflate;q=0.6,identity;q=0.3',
      'Content-Type',
      'application/json',
      'X-Datadog-Parent-Id',
      '3063792681491489492',
      'X-Datadog-Sampling-Priority',
      '0',
      'X-Datadog-Trace-Id',
      '1515721632168379972',
      'X-Forwarded-For',
      '52.200.151.182',
      'X-Forwarded-Host',
      '4fdb-189-143-174-180.ngrok-free.app',
      'X-Forwarded-Proto',
      'https'
    ],
    rawTrailers: [],
    joinDuplicateHeaders: null,
    aborted: false,
    upgrade: false,
    url: '/conekta/webhooks',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(async_id_symbol)]: 110,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '/api/payments',
    originalUrl: '/api/payments/conekta/webhooks',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/conekta/webhooks',
      path: '/conekta/webhooks',
      href: '/conekta/webhooks',
      _raw: '/conekta/webhooks'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      _closed: false,
      socket: [Socket],
      _header: null,
      _keepAliveTimeout: 5000,
      _onPendingData: [Function: bound updateOutgoingData],
      req: [Circular *1],
      _sent100: false,
      _expect_continue: false,
      _maxRequestsPerSocket: 0,
      locals: [Object: null prototype] {},
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 16384,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    body: {
      data: [Object],
      livemode: false,
      webhook_status: 'pending',
      webhook_logs: [Array],
      id: '65a1975c7b50350019397344',
      object: 'event',
      type: 'charge.paid',
      created_at: 1705088860
    },
    _body: true,
    length: undefined,
    route: Route {
      path: '/conekta/webhooks',
      stack: [Array],
      methods: [Object]
    },
    [Symbol(kCapture)]: false,
    [Symbol(kHeaders)]: {
      host: '4fdb-189-143-174-180.ngrok-free.app',
      'user-agent': 'Conekta Webhook Notifier',
      'content-length': '1222',
      accept: '*/*',
      'accept-encoding': 'gzip;q=1.0,deflate;q=0.6,identity;q=0.3',
      'content-type': 'application/json',
      'x-datadog-parent-id': '3063792681491489492',
      'x-datadog-sampling-priority': '0',
      'x-datadog-trace-id': '1515721632168379972',
      'x-forwarded-for': '52.200.151.182',
      'x-forwarded-host': '4fdb-189-143-174-180.ngrok-free.app',
      'x-forwarded-proto': 'https'
    },
    [Symbol(kHeadersCount)]: 24,
    [Symbol(kTrailers)]: null,
    [Symbol(kTrailersCount)]: 0
  }
}
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{
  resToSave: '{"id":"65a1ab7449a82b001b53591e","livemode":false,"created_at":1705094004,"currency":"MXN","device_fingerprint":"8a7552bb3a2d380175329bb85d87f5bb","channel":{"segment":"Checkout","checkout_request_id":"87f860d9-390a-4a4f-a333-f7d9c5afe565","checkout_request_type":"PaymentLink","id":"channel_2vEjJWJALHAgm8xug"},"payment_method":{"name":"Peter Gundry","exp_month":"04","exp_year":"24","object":"card_payment","type":"credit","last4":"4242","brand":"visa","issuer":"banamex","account_type":"BANAMEX","country":"MX","fraud_indicators":[],"antifraud_flag":""},"object":"charge","description":"Payment from order","status":"pending_payment","amount":95000,"fee":4095,"customer_id":"cus_2vEhn5MpeXKMPHjf8","order_id":"ord_2vEjJWJALHAgm8xuY"}'
}
{
  conektaBody: {
    conekta: {
      id: '65a1ab7449a82b001b53591e',
      livemode: false,
      created_at: 1705094004,
      currency: 'MXN',
      device_fingerprint: '8a7552bb3a2d380175329bb85d87f5bb',
      channel: [Object],
      payment_method: [Object],
      object: 'charge',
      description: 'Payment from order',
      status: 'pending_payment',
      amount: 95000,
      fee: 4095,
      customer_id: 'cus_2vEhn5MpeXKMPHjf8',
      order_id: 'ord_2vEjJWJALHAgm8xuY'
    }
  }
}
{
  resToSave: '{"id":"65a1ab7449a82b001b53591e","livemode":false,"created_at":1705094004,"currency":"MXN","device_fingerprint":"8a7552bb3a2d380175329bb85d87f5bb","channel":{"segment":"Checkout","checkout_request_id":"87f860d9-390a-4a4f-a333-f7d9c5afe565","checkout_request_type":"PaymentLink","id":"channel_2vEjJWJALHAgm8xug"},"payment_method":{"name":"Peter Gundry","exp_month":"04","exp_year":"24","auth_code":"250806","object":"card_payment","type":"credit","last4":"4242","brand":"visa","issuer":"banamex","account_type":"BANAMEX","country":"MX","fraud_indicators":[],"antifraud_flag":""},"object":"charge","description":"Payment from order","status":"paid","amount":95000,"paid_at":1705094005,"fee":4095,"customer_id":"cus_2vEhn5MpeXKMPHjf8","order_id":"ord_2vEjJWJALHAgm8xuY"}'
}
{
  conektaBody: {
    conekta: {
      id: '65a1ab7449a82b001b53591e',
      livemode: false,
      created_at: 1705094004,
      currency: 'MXN',
      device_fingerprint: '8a7552bb3a2d380175329bb85d87f5bb',
      channel: [Object],
      payment_method: [Object],
      object: 'charge',
      description: 'Payment from order',
      status: 'paid',
      amount: 95000,
      paid_at: 1705094005,
      fee: 4095,
      customer_id: 'cus_2vEhn5MpeXKMPHjf8',
      order_id: 'ord_2vEjJWJALHAgm8xuY'
    }
  }
}
{
  resToSave: '{"livemode":false,"amount":95000,"currency":"MXN","payment_status":"paid","amount_refunded":0,"customer_info":{"email":"heriberto.h@gercanada.com","phone":"2999644288","name":"Heriberto","corporate":false,"customer_id":"cus_2vEhn5MpeXKMPHjf8","object":"customer_info"},"channel":{"segment":"Checkout","checkout_request_id":"87f860d9-390a-4a4f-a333-f7d9c5afe565","checkout_request_type":"PaymentLink","id":"channel_2vEjJWJALHAgm8xuW"},"object":"order","id":"ord_2vEjJWJALHAgm8xuY","metadata":{},"is_refundable":true,"created_at":1705094004,"updated_at":1705094005,"line_items":{"object":"list","has_more":false,"total":1,"data":[{"name":"Heriberto","unit_price":95000,"quantity":1,"object":"line_item","id":"line_item_2vEjJWJALHAgm8xuV","parent_id":"ord_2vEjJWJALHAgm8xuY","metadata":{},"antifraud_info":{}}]},"charges":{"object":"list","has_more":false,"total":1,"data":[{"id":"65a1ab7449a82b001b53591e","livemode":false,"created_at":1705094004,"currency":"MXN","device_fingerprint":"8a7552bb3a2d380175329bb85d87f5bb","channel":{"segment":"Checkout","checkout_request_id":"87f860d9-390a-4a4f-a333-f7d9c5afe565","checkout_request_type":"PaymentLink","id":"channel_2vEjJWJALHAgm8xug"},"payment_method":{"name":"Peter Gundry","exp_month":"04","exp_year":"24","auth_code":"250806","object":"card_payment","type":"credit","last4":"4242","brand":"visa","issuer":"banamex","account_type":"BANAMEX","country":"MX","fraud_indicators":[],"antifraud_flag":""},"object":"charge","description":"Payment from order","status":"paid","amount":95000,"paid_at":1705094005,"fee":4095,"customer_id":"cus_2vEhn5MpeXKMPHjf8","order_id":"ord_2vEjJWJALHAgm8xuY"}]}}'
}
{
  conektaBody: {
    conekta: {
      livemode: false,
      amount: 95000,
      currency: 'MXN',
      payment_status: 'paid',
      amount_refunded: 0,
      customer_info: [Object],
      channel: [Object],
      object: 'order',
      id: 'ord_2vEjJWJALHAgm8xuY',
      metadata: {},
      is_refundable: true,
      created_at: 1705094004,
      updated_at: 1705094005,
      line_items: [Object],
      charges: [Object]
    }
  }
}
{
  resToSave: '{"livemode":false,"amount":95000,"currency":"MXN","payment_status":null,"amount_refunded":0,"split_payment":false,"customer_info":{"email":"heriberto.h@gercanada.com","phone":"2999644288","name":"Heriberto","corporate":false,"customer_id":"cus_2vEhn5MpeXKMPHjf8","object":"customer_info","customer_custom_reference":null},"shipping_contact":null,"channel":{"segment":"Checkout","checkout_request_id":"87f860d9-390a-4a4f-a333-f7d9c5afe565","checkout_request_type":"PaymentLink","id":"channel_2vEjJWJALHAgm8xuW"},"fiscal_entity":null,"checkout":null,"object":"order","id":"ord_2vEjJWJALHAgm8xuY","metadata":{},"is_refundable":false,"processing_mode":null,"created_at":1705094004,"updated_at":1705094004,"line_items":{"object":"list","has_more":false,"total":1,"data":[{"name":"Heriberto","description":null,"unit_price":95000,"quantity":1,"sku":null,"tags":null,"brand":null,"type":null,"object":"line_item","id":"line_item_2vEjJWJALHAgm8xuV","parent_id":"ord_2vEjJWJALHAgm8xuY","metadata":{},"antifraud_info":{}}]},"shipping_lines":null,"tax_lines":null,"discount_lines":null,"charges":null}'
}
{
  conektaBody: {
    conekta: {
      livemode: false,
      amount: 95000,
      currency: 'MXN',
      payment_status: null,
      amount_refunded: 0,
      split_payment: false,
      customer_info: [Object],
      shipping_contact: null,
      channel: [Object],
      fiscal_entity: null,
      checkout: null,
      object: 'order',
      id: 'ord_2vEjJWJALHAgm8xuY',
      metadata: {},
      is_refundable: false,
      processing_mode: null,
      created_at: 1705094004,
      updated_at: 1705094004,
      line_items: [Object],
      shipping_lines: null,
      tax_lines: null,
      discount_lines: null,
      charges: null
    }
  }
}
{
  resToSave: '{"id":"65a1ab7449a82b001b53591e","livemode":false,"created_at":1705094004,"currency":"MXN","device_fingerprint":"8a7552bb3a2d380175329bb85d87f5bb","channel":{"segment":"Checkout","checkout_request_id":"87f860d9-390a-4a4f-a333-f7d9c5afe565","checkout_request_type":"PaymentLink","id":"channel_2vEjJWJALHAgm8xug"},"payment_method":{"name":"Peter Gundry","exp_month":"04","exp_year":"24","object":"card_payment","type":"credit","last4":"4242","brand":"visa","issuer":"banamex","account_type":"BANAMEX","country":"MX","fraud_indicators":[],"antifraud_flag":""},"object":"charge","description":"Payment from order","status":"pending_payment","amount":95000,"fee":4095,"customer_id":"cus_2vEhn5MpeXKMPHjf8","order_id":"ord_2vEjJWJALHAgm8xuY"}'
}
{
  conektaBody: {
    conekta: {
      id: '65a1ab7449a82b001b53591e',
      livemode: false,
      created_at: 1705094004,
      currency: 'MXN',
      device_fingerprint: '8a7552bb3a2d380175329bb85d87f5bb',
      channel: [Object],
      payment_method: [Object],
      object: 'charge',
      description: 'Payment from order',
      status: 'pending_payment',
      amount: 95000,
      fee: 4095,
      customer_id: 'cus_2vEhn5MpeXKMPHjf8',
      order_id: 'ord_2vEjJWJALHAgm8xuY'
    }
  }
}
{
  resToSave: '{"livemode":false,"amount":95000,"currency":"MXN","payment_status":"paid","amount_refunded":0,"customer_info":{"email":"heriberto.h@gercanada.com","phone":"2999644288","name":"Heriberto","corporate":false,"customer_id":"cus_2vEhn5MpeXKMPHjf8","object":"customer_info"},"channel":{"segment":"Checkout","checkout_request_id":"87f860d9-390a-4a4f-a333-f7d9c5afe565","checkout_request_type":"PaymentLink","id":"channel_2vEjJWJALHAgm8xuW"},"object":"order","id":"ord_2vEjJWJALHAgm8xuY","metadata":{},"is_refundable":true,"created_at":1705094004,"updated_at":1705094005,"line_items":{"object":"list","has_more":false,"total":1,"data":[{"name":"Heriberto","unit_price":95000,"quantity":1,"object":"line_item","id":"line_item_2vEjJWJALHAgm8xuV","parent_id":"ord_2vEjJWJALHAgm8xuY","metadata":{},"antifraud_info":{}}]},"charges":{"object":"list","has_more":false,"total":1,"data":[{"id":"65a1ab7449a82b001b53591e","livemode":false,"created_at":1705094004,"currency":"MXN","device_fingerprint":"8a7552bb3a2d380175329bb85d87f5bb","channel":{"segment":"Checkout","checkout_request_id":"87f860d9-390a-4a4f-a333-f7d9c5afe565","checkout_request_type":"PaymentLink","id":"channel_2vEjJWJALHAgm8xug"},"payment_method":{"name":"Peter Gundry","exp_month":"04","exp_year":"24","auth_code":"250806","object":"card_payment","type":"credit","last4":"4242","brand":"visa","issuer":"banamex","account_type":"BANAMEX","country":"MX","fraud_indicators":[],"antifraud_flag":""},"object":"charge","description":"Payment from order","status":"paid","amount":95000,"paid_at":1705094005,"fee":4095,"customer_id":"cus_2vEhn5MpeXKMPHjf8","order_id":"ord_2vEjJWJALHAgm8xuY"}]}}'
}
{
  conektaBody: {
    conekta: {
      livemode: false,
      amount: 95000,
      currency: 'MXN',
      payment_status: 'paid',
      amount_refunded: 0,
      customer_info: [Object],
      channel: [Object],
      object: 'order',
      id: 'ord_2vEjJWJALHAgm8xuY',
      metadata: {},
      is_refundable: true,
      created_at: 1705094004,
      updated_at: 1705094005,
      line_items: [Object],
      charges: [Object]
    }
  }
}
{
  resToSave: '{"livemode":false,"amount":95000,"currency":"MXN","payment_status":null,"amount_refunded":0,"split_payment":false,"customer_info":{"email":"heriberto.h@gercanada.com","phone":"2999644288","name":"Heriberto","corporate":false,"customer_id":"cus_2vEhn5MpeXKMPHjf8","object":"customer_info","customer_custom_reference":null},"shipping_contact":null,"channel":{"segment":"Checkout","checkout_request_id":"87f860d9-390a-4a4f-a333-f7d9c5afe565","checkout_request_type":"PaymentLink","id":"channel_2vEjJWJALHAgm8xuW"},"fiscal_entity":null,"checkout":null,"object":"order","id":"ord_2vEjJWJALHAgm8xuY","metadata":{},"is_refundable":false,"processing_mode":null,"created_at":1705094004,"updated_at":1705094004,"line_items":{"object":"list","has_more":false,"total":1,"data":[{"name":"Heriberto","description":null,"unit_price":95000,"quantity":1,"sku":null,"tags":null,"brand":null,"type":null,"object":"line_item","id":"line_item_2vEjJWJALHAgm8xuV","parent_id":"ord_2vEjJWJALHAgm8xuY","metadata":{},"antifraud_info":{}}]},"shipping_lines":null,"tax_lines":null,"discount_lines":null,"charges":null}'
}
{
  conektaBody: {
    conekta: {
      livemode: false,
      amount: 95000,
      currency: 'MXN',
      payment_status: null,
      amount_refunded: 0,
      split_payment: false,
      customer_info: [Object],
      shipping_contact: null,
      channel: [Object],
      fiscal_entity: null,
      checkout: null,
      object: 'order',
      id: 'ord_2vEjJWJALHAgm8xuY',
      metadata: {},
      is_refundable: false,
      processing_mode: null,
      created_at: 1705094004,
      updated_at: 1705094004,
      line_items: [Object],
      shipping_lines: null,
      tax_lines: null,
      discount_lines: null,
      charges: null
    }
  }
}
{
  resToSave: '{"id":"65a1ab7449a82b001b53591e","livemode":false,"created_at":1705094004,"currency":"MXN","device_fingerprint":"8a7552bb3a2d380175329bb85d87f5bb","channel":{"segment":"Checkout","checkout_request_id":"87f860d9-390a-4a4f-a333-f7d9c5afe565","checkout_request_type":"PaymentLink","id":"channel_2vEjJWJALHAgm8xug"},"payment_method":{"name":"Peter Gundry","exp_month":"04","exp_year":"24","auth_code":"250806","object":"card_payment","type":"credit","last4":"4242","brand":"visa","issuer":"banamex","account_type":"BANAMEX","country":"MX","fraud_indicators":[],"antifraud_flag":""},"object":"charge","description":"Payment from order","status":"paid","amount":95000,"paid_at":1705094005,"fee":4095,"customer_id":"cus_2vEhn5MpeXKMPHjf8","order_id":"ord_2vEjJWJALHAgm8xuY"}'
}
{
  conektaBody: {
    conekta: {
      id: '65a1ab7449a82b001b53591e',
      livemode: false,
      created_at: 1705094004,
      currency: 'MXN',
      device_fingerprint: '8a7552bb3a2d380175329bb85d87f5bb',
      channel: [Object],
      payment_method: [Object],
      object: 'charge',
      description: 'Payment from order',
      status: 'paid',
      amount: 95000,
      paid_at: 1705094005,
      fee: 4095,
      customer_id: 'cus_2vEhn5MpeXKMPHjf8',
      order_id: 'ord_2vEjJWJALHAgm8xuY'
    }
  }
}
{
  resToSave: '{"livemode":false,"amount":95000,"currency":"MXN","payment_status":"paid","amount_refunded":0,"customer_info":{"email":"heriberto.h@gercanada.com","phone":"2999644288","name":"Heriberto","corporate":false,"customer_id":"cus_2vEhn5MpeXKMPHjf8","object":"customer_info"},"channel":{"segment":"Checkout","checkout_request_id":"87f860d9-390a-4a4f-a333-f7d9c5afe565","checkout_request_type":"PaymentLink","id":"channel_2vEjJWJALHAgm8xuW"},"object":"order","id":"ord_2vEjJWJALHAgm8xuY","metadata":{},"is_refundable":true,"created_at":1705094004,"updated_at":1705094005,"line_items":{"object":"list","has_more":false,"total":1,"data":[{"name":"Heriberto","unit_price":95000,"quantity":1,"object":"line_item","id":"line_item_2vEjJWJALHAgm8xuV","parent_id":"ord_2vEjJWJALHAgm8xuY","metadata":{},"antifraud_info":{}}]},"charges":{"object":"list","has_more":false,"total":1,"data":[{"id":"65a1ab7449a82b001b53591e","livemode":false,"created_at":1705094004,"currency":"MXN","device_fingerprint":"8a7552bb3a2d380175329bb85d87f5bb","channel":{"segment":"Checkout","checkout_request_id":"87f860d9-390a-4a4f-a333-f7d9c5afe565","checkout_request_type":"PaymentLink","id":"channel_2vEjJWJALHAgm8xug"},"payment_method":{"name":"Peter Gundry","exp_month":"04","exp_year":"24","auth_code":"250806","object":"card_payment","type":"credit","last4":"4242","brand":"visa","issuer":"banamex","account_type":"BANAMEX","country":"MX","fraud_indicators":[],"antifraud_flag":""},"object":"charge","description":"Payment from order","status":"paid","amount":95000,"paid_at":1705094005,"fee":4095,"customer_id":"cus_2vEhn5MpeXKMPHjf8","order_id":"ord_2vEjJWJALHAgm8xuY"}]}}'
}
{
  conektaBody: {
    conekta: {
      livemode: false,
      amount: 95000,
      currency: 'MXN',
      payment_status: 'paid',
      amount_refunded: 0,
      customer_info: [Object],
      channel: [Object],
      object: 'order',
      id: 'ord_2vEjJWJALHAgm8xuY',
      metadata: {},
      is_refundable: true,
      created_at: 1705094004,
      updated_at: 1705094005,
      line_items: [Object],
      charges: [Object]
    }
  }
}
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{
  resToSave: '{"livemode":false,"amount":95000,"currency":"MXN","payment_status":null,"amount_refunded":0,"split_payment":false,"customer_info":{"email":"heriberto.h@gercanada.com","phone":"2999644288","name":"Heriberto","corporate":false,"customer_id":"cus_2vEhn5MpeXKMPHjf8","object":"customer_info","customer_custom_reference":null},"shipping_contact":null,"channel":{"segment":"Checkout","checkout_request_id":"87f860d9-390a-4a4f-a333-f7d9c5afe565","checkout_request_type":"PaymentLink","id":"channel_2vEjJWJALHAgm8xuW"},"fiscal_entity":null,"checkout":null,"object":"order","id":"ord_2vEjJWJALHAgm8xuY","metadata":{},"is_refundable":false,"processing_mode":null,"created_at":1705094004,"updated_at":1705094004,"line_items":{"object":"list","has_more":false,"total":1,"data":[{"name":"Heriberto","description":null,"unit_price":95000,"quantity":1,"sku":null,"tags":null,"brand":null,"type":null,"object":"line_item","id":"line_item_2vEjJWJALHAgm8xuV","parent_id":"ord_2vEjJWJALHAgm8xuY","metadata":{},"antifraud_info":{}}]},"shipping_lines":null,"tax_lines":null,"discount_lines":null,"charges":null}'
}
{
  conektaBody: {
    conekta: {
      livemode: false,
      amount: 95000,
      currency: 'MXN',
      payment_status: null,
      amount_refunded: 0,
      split_payment: false,
      customer_info: [Object],
      shipping_contact: null,
      channel: [Object],
      fiscal_entity: null,
      checkout: null,
      object: 'order',
      id: 'ord_2vEjJWJALHAgm8xuY',
      metadata: {},
      is_refundable: false,
      processing_mode: null,
      created_at: 1705094004,
      updated_at: 1705094004,
      line_items: [Object],
      shipping_lines: null,
      tax_lines: null,
      discount_lines: null,
      charges: null
    }
  }
}
{
  resToSave: '{"id":"65a1ab7449a82b001b53591e","livemode":false,"created_at":1705094004,"currency":"MXN","device_fingerprint":"8a7552bb3a2d380175329bb85d87f5bb","channel":{"segment":"Checkout","checkout_request_id":"87f860d9-390a-4a4f-a333-f7d9c5afe565","checkout_request_type":"PaymentLink","id":"channel_2vEjJWJALHAgm8xug"},"payment_method":{"name":"Peter Gundry","exp_month":"04","exp_year":"24","auth_code":"250806","object":"card_payment","type":"credit","last4":"4242","brand":"visa","issuer":"banamex","account_type":"BANAMEX","country":"MX","fraud_indicators":[],"antifraud_flag":""},"object":"charge","description":"Payment from order","status":"paid","amount":95000,"paid_at":1705094005,"fee":4095,"customer_id":"cus_2vEhn5MpeXKMPHjf8","order_id":"ord_2vEjJWJALHAgm8xuY"}'
}
{
  conektaBody: {
    conekta: {
      id: '65a1ab7449a82b001b53591e',
      livemode: false,
      created_at: 1705094004,
      currency: 'MXN',
      device_fingerprint: '8a7552bb3a2d380175329bb85d87f5bb',
      channel: [Object],
      payment_method: [Object],
      object: 'charge',
      description: 'Payment from order',
      status: 'paid',
      amount: 95000,
      paid_at: 1705094005,
      fee: 4095,
      customer_id: 'cus_2vEhn5MpeXKMPHjf8',
      order_id: 'ord_2vEjJWJALHAgm8xuY'
    }
  }
}
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{
  resToSave: '{"livemode":false,"amount":95000,"currency":"MXN","payment_status":null,"amount_refunded":0,"split_payment":false,"customer_info":{"email":"heriberto.h@gercanada.com","phone":"2999644288","name":"Heriberto","corporate":false,"customer_id":"cus_2vEhn5MpeXKMPHjf8","object":"customer_info","customer_custom_reference":null},"shipping_contact":null,"channel":{"segment":"Checkout","checkout_request_id":"87f860d9-390a-4a4f-a333-f7d9c5afe565","checkout_request_type":"PaymentLink","id":"channel_2vEjJWJALHAgm8xuW"},"fiscal_entity":null,"checkout":null,"object":"order","id":"ord_2vEjJWJALHAgm8xuY","metadata":{},"is_refundable":false,"processing_mode":null,"created_at":1705094004,"updated_at":1705094004,"line_items":{"object":"list","has_more":false,"total":1,"data":[{"name":"Heriberto","description":null,"unit_price":95000,"quantity":1,"sku":null,"tags":null,"brand":null,"type":null,"object":"line_item","id":"line_item_2vEjJWJALHAgm8xuV","parent_id":"ord_2vEjJWJALHAgm8xuY","metadata":{},"antifraud_info":{}}]},"shipping_lines":null,"tax_lines":null,"discount_lines":null,"charges":null}'
}
{ values: [ paymentintent_id: 'ord_2vEjJWJALHAgm8xuY' ] }
Executing (default): SELECT `id`, `paymentintent_id`, `eta_id`, `amount`, `amount_received`, `email`, `name`, `currency`, `payment_method_type`, `payment_method_details`, `status`, `charge_at`, `platform` FROM `payment_intents` AS `payment_intents` WHERE `payment_intents`.`paymentintent_id` = 'ord_2vEjJWJALHAgm8xuY' LIMIT 1;
Payment created
Executing (default): INSERT INTO `payment_intents` (`id`,`paymentintent_id`) VALUES (DEFAULT,?);
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{
  resToSave: '{"id":"65a1ab7449a82b001b53591e","livemode":false,"created_at":1705094004,"currency":"MXN","device_fingerprint":"8a7552bb3a2d380175329bb85d87f5bb","channel":{"segment":"Checkout","checkout_request_id":"87f860d9-390a-4a4f-a333-f7d9c5afe565","checkout_request_type":"PaymentLink","id":"channel_2vEjJWJALHAgm8xug"},"payment_method":{"name":"Peter Gundry","exp_month":"04","exp_year":"24","auth_code":"250806","object":"card_payment","type":"credit","last4":"4242","brand":"visa","issuer":"banamex","account_type":"BANAMEX","country":"MX","fraud_indicators":[],"antifraud_flag":""},"object":"charge","description":"Payment from order","status":"paid","amount":95000,"paid_at":1705094005,"fee":4095,"customer_id":"cus_2vEhn5MpeXKMPHjf8","order_id":"ord_2vEjJWJALHAgm8xuY"}'
}
{ values: [ paymentintent_id: '65a1ab7449a82b001b53591e' ] }
Executing (default): SELECT `id`, `paymentintent_id`, `eta_id`, `amount`, `amount_received`, `email`, `name`, `currency`, `payment_method_type`, `payment_method_details`, `status`, `charge_at`, `platform` FROM `payment_intents` AS `payment_intents` WHERE `payment_intents`.`paymentintent_id` = '65a1ab7449a82b001b53591e' LIMIT 1;
Payment created
Executing (default): INSERT INTO `payment_intents` (`id`,`paymentintent_id`) VALUES (DEFAULT,?);
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{
  resToSave: '{"id":"65a1ab7449a82b001b53591e","livemode":false,"created_at":1705094004,"currency":"MXN","device_fingerprint":"8a7552bb3a2d380175329bb85d87f5bb","channel":{"segment":"Checkout","checkout_request_id":"87f860d9-390a-4a4f-a333-f7d9c5afe565","checkout_request_type":"PaymentLink","id":"channel_2vEjJWJALHAgm8xug"},"payment_method":{"name":"Peter Gundry","exp_month":"04","exp_year":"24","object":"card_payment","type":"credit","last4":"4242","brand":"visa","issuer":"banamex","account_type":"BANAMEX","country":"MX","fraud_indicators":[],"antifraud_flag":""},"object":"charge","description":"Payment from order","status":"pending_payment","amount":95000,"fee":4095,"customer_id":"cus_2vEhn5MpeXKMPHjf8","order_id":"ord_2vEjJWJALHAgm8xuY"}'
}
{
  values: [
    platform: 'converge',
    paymentintent_id: '65a1ab7449a82b001b53591e',
    amount: 95000,
    email: 95000,
    payment_method_type: 'card_payment',
    status: 'pending_payment'
  ]
}
Executing (default): SELECT `id`, `paymentintent_id`, `eta_id`, `amount`, `amount_received`, `email`, `name`, `currency`, `payment_method_type`, `payment_method_details`, `status`, `charge_at`, `platform` FROM `payment_intents` AS `payment_intents` WHERE `payment_intents`.`paymentintent_id` = '65a1ab7449a82b001b53591e' LIMIT 1;
Payment created
Executing (default): INSERT INTO `payment_intents` (`id`,`paymentintent_id`,`amount`,`email`,`payment_method_type`,`status`,`platform`) VALUES (DEFAULT,?,?,?,?,?,?);
{
  resToSave: '{"livemode":false,"amount":95000,"currency":"MXN","payment_status":null,"amount_refunded":0,"split_payment":false,"customer_info":{"email":"heriberto.h@gercanada.com","phone":"2999644288","name":"Heriberto","corporate":false,"customer_id":"cus_2vEhn5MpeXKMPHjf8","object":"customer_info","customer_custom_reference":null},"shipping_contact":null,"channel":{"segment":"Checkout","checkout_request_id":"ddf997d0-ea47-47e4-8f43-83a16668e0ef","checkout_request_type":"PaymentLink","id":"channel_2vEjU48xa6jpBJvCG"},"fiscal_entity":null,"checkout":null,"object":"order","id":"ord_2vEjU48xa6jpBJvCJ","metadata":{},"is_refundable":false,"processing_mode":null,"created_at":1705094754,"updated_at":1705094754,"line_items":{"object":"list","has_more":false,"total":1,"data":[{"name":"Heriberto","description":null,"unit_price":95000,"quantity":1,"sku":null,"tags":null,"brand":null,"type":null,"object":"line_item","id":"line_item_2vEjU48xa6jpBJvCF","parent_id":"ord_2vEjU48xa6jpBJvCJ","metadata":{},"antifraud_info":{}}]},"shipping_lines":null,"tax_lines":null,"discount_lines":null,"charges":null}'
}
{
  values: [
    platform: 'converge',
    paymentintent_id: 'ord_2vEjU48xa6jpBJvCJ',
    amount: 95000,
    email: 95000,
    payment_method_type: undefined,
    status: undefined
  ]
}
Executing (default): SELECT `id`, `paymentintent_id`, `eta_id`, `amount`, `amount_received`, `email`, `name`, `currency`, `payment_method_type`, `payment_method_details`, `status`, `charge_at`, `platform` FROM `payment_intents` AS `payment_intents` WHERE `payment_intents`.`paymentintent_id` = 'ord_2vEjU48xa6jpBJvCJ' LIMIT 1;
Payment created
Executing (default): INSERT INTO `payment_intents` (`id`,`paymentintent_id`,`amount`,`email`,`platform`) VALUES (DEFAULT,?,?,?,?);
{
  resToSave: '{"livemode":false,"amount":95000,"currency":"MXN","payment_status":"paid","amount_refunded":0,"customer_info":{"email":"heriberto.h@gercanada.com","phone":"2999644288","name":"Heriberto","corporate":false,"customer_id":"cus_2vEhn5MpeXKMPHjf8","object":"customer_info"},"channel":{"segment":"Checkout","checkout_request_id":"ddf997d0-ea47-47e4-8f43-83a16668e0ef","checkout_request_type":"PaymentLink","id":"channel_2vEjU48xa6jpBJvCG"},"object":"order","id":"ord_2vEjU48xa6jpBJvCJ","metadata":{},"is_refundable":true,"created_at":1705094754,"updated_at":1705094755,"line_items":{"object":"list","has_more":false,"total":1,"data":[{"name":"Heriberto","unit_price":95000,"quantity":1,"object":"line_item","id":"line_item_2vEjU48xa6jpBJvCF","parent_id":"ord_2vEjU48xa6jpBJvCJ","metadata":{},"antifraud_info":{}}]},"charges":{"object":"list","has_more":false,"total":1,"data":[{"id":"65a1ae627b503500193a28ae","livemode":false,"created_at":1705094754,"currency":"MXN","device_fingerprint":"8a7552bb3a2d380175329bb85d87f5bb","channel":{"segment":"Checkout","checkout_request_id":"ddf997d0-ea47-47e4-8f43-83a16668e0ef","checkout_request_type":"PaymentLink","id":"channel_2vEjU48xa6jpBJvCS"},"payment_method":{"name":"Lars","exp_month":"04","exp_year":"24","auth_code":"098287","object":"card_payment","type":"credit","last4":"4242","brand":"visa","issuer":"banamex","account_type":"BANAMEX","country":"MX","fraud_indicators":[],"antifraud_flag":""},"object":"charge","description":"Payment from order","status":"paid","amount":95000,"paid_at":1705094754,"fee":4095,"customer_id":"cus_2vEhn5MpeXKMPHjf8","order_id":"ord_2vEjU48xa6jpBJvCJ"}]}}'
}
{
  values: [
    platform: 'converge',
    paymentintent_id: 'ord_2vEjU48xa6jpBJvCJ',
    amount: 95000,
    email: 95000,
    payment_method_type: undefined,
    status: undefined
  ]
}
Executing (default): SELECT `id`, `paymentintent_id`, `eta_id`, `amount`, `amount_received`, `email`, `name`, `currency`, `payment_method_type`, `payment_method_details`, `status`, `charge_at`, `platform` FROM `payment_intents` AS `payment_intents` WHERE `payment_intents`.`paymentintent_id` = 'ord_2vEjU48xa6jpBJvCJ' LIMIT 1;
Executing (default): UPDATE `payment_intents` SET `email`=? WHERE `id` = ?
{
  resToSave: '{"id":"65a1ae627b503500193a28ae","livemode":false,"created_at":1705094754,"currency":"MXN","device_fingerprint":"8a7552bb3a2d380175329bb85d87f5bb","channel":{"segment":"Checkout","checkout_request_id":"ddf997d0-ea47-47e4-8f43-83a16668e0ef","checkout_request_type":"PaymentLink","id":"channel_2vEjU48xa6jpBJvCS"},"payment_method":{"name":"Lars","exp_month":"04","exp_year":"24","auth_code":"098287","object":"card_payment","type":"credit","last4":"4242","brand":"visa","issuer":"banamex","account_type":"BANAMEX","country":"MX","fraud_indicators":[],"antifraud_flag":""},"object":"charge","description":"Payment from order","status":"paid","amount":95000,"paid_at":1705094754,"fee":4095,"customer_id":"cus_2vEhn5MpeXKMPHjf8","order_id":"ord_2vEjU48xa6jpBJvCJ"}'
}
{
  values: [
    platform: 'converge',
    paymentintent_id: '65a1ae627b503500193a28ae',
    amount: 95000,
    email: 95000,
    payment_method_type: 'card_payment',
    status: 'paid'
  ]
}
Executing (default): SELECT `id`, `paymentintent_id`, `eta_id`, `amount`, `amount_received`, `email`, `name`, `currency`, `payment_method_type`, `payment_method_details`, `status`, `charge_at`, `platform` FROM `payment_intents` AS `payment_intents` WHERE `payment_intents`.`paymentintent_id` = '65a1ae627b503500193a28ae' LIMIT 1;
Payment created
Executing (default): INSERT INTO `payment_intents` (`id`,`paymentintent_id`,`amount`,`email`,`payment_method_type`,`status`,`platform`) VALUES (DEFAULT,?,?,?,?,?,?);
{
  resToSave: '{"id":"65a1ae627b503500193a28ae","livemode":false,"created_at":1705094754,"currency":"MXN","device_fingerprint":"8a7552bb3a2d380175329bb85d87f5bb","channel":{"segment":"Checkout","checkout_request_id":"ddf997d0-ea47-47e4-8f43-83a16668e0ef","checkout_request_type":"PaymentLink","id":"channel_2vEjU48xa6jpBJvCS"},"payment_method":{"name":"Lars","exp_month":"04","exp_year":"24","object":"card_payment","type":"credit","last4":"4242","brand":"visa","issuer":"banamex","account_type":"BANAMEX","country":"MX","fraud_indicators":[],"antifraud_flag":""},"object":"charge","description":"Payment from order","status":"pending_payment","amount":95000,"fee":4095,"customer_id":"cus_2vEhn5MpeXKMPHjf8","order_id":"ord_2vEjU48xa6jpBJvCJ"}'
}
{
  values: [
    platform: 'converge',
    paymentintent_id: '65a1ae627b503500193a28ae',
    amount: 95000,
    email: 95000,
    payment_method_type: 'card_payment',
    status: 'pending_payment'
  ]
}
Executing (default): SELECT `id`, `paymentintent_id`, `eta_id`, `amount`, `amount_received`, `email`, `name`, `currency`, `payment_method_type`, `payment_method_details`, `status`, `charge_at`, `platform` FROM `payment_intents` AS `payment_intents` WHERE `payment_intents`.`paymentintent_id` = '65a1ae627b503500193a28ae' LIMIT 1;
Executing (default): UPDATE `payment_intents` SET `email`=?,`status`=? WHERE `id` = ?
{
  resToSave: '{"livemode":false,"amount":95000,"currency":"MXN","payment_status":"paid","amount_refunded":0,"customer_info":{"email":"heriberto.h@gercanada.com","phone":"2999644288","name":"Heriberto","corporate":false,"customer_id":"cus_2vEhn5MpeXKMPHjf8","object":"customer_info"},"channel":{"segment":"Checkout","checkout_request_id":"87f860d9-390a-4a4f-a333-f7d9c5afe565","checkout_request_type":"PaymentLink","id":"channel_2vEjJWJALHAgm8xuW"},"object":"order","id":"ord_2vEjJWJALHAgm8xuY","metadata":{},"is_refundable":true,"created_at":1705094004,"updated_at":1705094005,"line_items":{"object":"list","has_more":false,"total":1,"data":[{"name":"Heriberto","unit_price":95000,"quantity":1,"object":"line_item","id":"line_item_2vEjJWJALHAgm8xuV","parent_id":"ord_2vEjJWJALHAgm8xuY","metadata":{},"antifraud_info":{}}]},"charges":{"object":"list","has_more":false,"total":1,"data":[{"id":"65a1ab7449a82b001b53591e","livemode":false,"created_at":1705094004,"currency":"MXN","device_fingerprint":"8a7552bb3a2d380175329bb85d87f5bb","channel":{"segment":"Checkout","checkout_request_id":"87f860d9-390a-4a4f-a333-f7d9c5afe565","checkout_request_type":"PaymentLink","id":"channel_2vEjJWJALHAgm8xug"},"payment_method":{"name":"Peter Gundry","exp_month":"04","exp_year":"24","auth_code":"250806","object":"card_payment","type":"credit","last4":"4242","brand":"visa","issuer":"banamex","account_type":"BANAMEX","country":"MX","fraud_indicators":[],"antifraud_flag":""},"object":"charge","description":"Payment from order","status":"paid","amount":95000,"paid_at":1705094005,"fee":4095,"customer_id":"cus_2vEhn5MpeXKMPHjf8","order_id":"ord_2vEjJWJALHAgm8xuY"}]}}'
}
{
  values: [
    platform: 'converge',
    paymentintent_id: 'ord_2vEjJWJALHAgm8xuY',
    amount: 95000,
    email: 95000,
    payment_method_type: undefined,
    status: undefined
  ]
}
Executing (default): SELECT `id`, `paymentintent_id`, `eta_id`, `amount`, `amount_received`, `email`, `name`, `currency`, `payment_method_type`, `payment_method_details`, `status`, `charge_at`, `platform` FROM `payment_intents` AS `payment_intents` WHERE `payment_intents`.`paymentintent_id` = 'ord_2vEjJWJALHAgm8xuY' LIMIT 1;
Payment created
Executing (default): INSERT INTO `payment_intents` (`id`,`paymentintent_id`,`amount`,`email`,`platform`) VALUES (DEFAULT,?,?,?,?);
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
Servidor corriendo en puerto 8000
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{ url: undefined }
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{ url: undefined }
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{
  error: SyntaxError: Unexpected token S in JSON at position 0
      at JSON.parse (<anonymous>)
      at /usr/src/app/dist/controllers/ConektaController.js:77:27
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
}
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{
  url: {
    details: [ [Object], [Object], [Object] ],
    object: 'error',
    type: 'parameter_validation_error',
    log_id: '65a1b42035553d001898d022'
  }
}
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{
  url: '{"details":[{"debug_message":"The \\"customer_info attribute email\\" is missing.","message":"El parametro email\\" es requerido.","param":"customer_info.email","code":"conekta.errors.parameter_validation.customer_info.email.missing"},{"debug_message":"The \\"customer_info attribute name\\" is missing.","message":"El parametro name\\" es requerido.","param":"customer_info.name","code":"conekta.errors.parameter_validation.customer_info.name.missing"},{"debug_message":"The \\"line_items at index 0 attribute name\\" is missing.","message":"El parametro name\\" es requerido.","param":"line_items.0.name","code":"conekta.errors.parameter_validation.line_items.name.missing"}],"object":"error","type":"parameter_validation_error","log_id":"65a1b4685a57080016a978dc"}'
}
{
  error: SyntaxError: Unexpected token E in JSON at position 0
      at JSON.parse (<anonymous>)
      at /usr/src/app/dist/controllers/ConektaController.js:77:27
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
}
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{
  error: TypeError: Cannot read properties of undefined (reading 'customer_name')
      at /usr/src/app/dist/controllers/ConektaController.js:38:35
      at Generator.next (<anonymous>)
      at /usr/src/app/dist/controllers/ConektaController.js:8:71
      at new Promise (<anonymous>)
      at __awaiter (/usr/src/app/dist/controllers/ConektaController.js:4:12)
      at newPaymentLink (/usr/src/app/dist/controllers/ConektaController.js:29:38)
      at Layer.handle [as handle_request] (/usr/src/app/node_modules/express/lib/router/layer.js:95:5)
      at next (/usr/src/app/node_modules/express/lib/router/route.js:144:13)
      at Route.dispatch (/usr/src/app/node_modules/express/lib/router/route.js:114:3)
      at Layer.handle [as handle_request] (/usr/src/app/node_modules/express/lib/router/layer.js:95:5)
}
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{
  url: '{"details":[{"debug_message":"The \\"customer_info attribute email\\" is missing.","message":"El parametro email\\" es requerido.","param":"customer_info.email","code":"conekta.errors.parameter_validation.customer_info.email.missing"},{"debug_message":"The \\"customer_info attribute name\\" is missing.","message":"El parametro name\\" es requerido.","param":"customer_info.name","code":"conekta.errors.parameter_validation.customer_info.name.missing"},{"debug_message":"The \\"line_items at index 0 attribute name\\" is missing.","message":"El parametro name\\" es requerido.","param":"line_items.0.name","code":"conekta.errors.parameter_validation.line_items.name.missing"}],"object":"error","type":"parameter_validation_error","log_id":"65a1b48bdd6924001c1192af"}'
}
{
  error: SyntaxError: Unexpected token E in JSON at position 0
      at JSON.parse (<anonymous>)
      at /usr/src/app/dist/controllers/ConektaController.js:77:27
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
}
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{
  url: '{"id":"41adec6f-2d8c-491b-ad72-f8b83e9a8cfc","name":"Payment Link for Heriberto","livemode":false,"emails_sent":0,"success_url":"","failure_url":"","paid_payments_count":0,"sms_sent":0,"status":"Issued","type":"PaymentLink","recurrent":false,"starts_at":1705039200,"expires_at":1705528338,"allowed_payment_methods":["cash","card","bank_transfer"],"exclude_card_networks":[],"needs_shipping_contact":false,"monthly_installments_options":[],"monthly_installments_enabled":false,"force_3ds_flow":false,"metadata":{},"can_not_expire":false,"object":"checkout","is_redirect_on_failure":false,"slug":"41adec6f2d8c491bad72f8b83e9a8cfc","url":"https://pay.conekta.com/link/41adec6f2d8c491bad72f8b83e9a8cfc"}'
}
{
  error: SyntaxError: Unexpected token E in JSON at position 0
      at JSON.parse (<anonymous>)
      at /usr/src/app/dist/controllers/ConektaController.js:77:27
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
}
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{
  url: '{"id":"69e9aba4-5c07-4f2d-a66c-981ec95eef43","name":"Payment Link for Heriberto","livemode":false,"emails_sent":0,"success_url":"","failure_url":"","paid_payments_count":0,"sms_sent":0,"status":"Issued","type":"PaymentLink","recurrent":false,"starts_at":1705039200,"expires_at":1705528353,"allowed_payment_methods":["cash","card","bank_transfer"],"exclude_card_networks":[],"needs_shipping_contact":false,"monthly_installments_options":[],"monthly_installments_enabled":false,"force_3ds_flow":false,"metadata":{},"can_not_expire":false,"object":"checkout","is_redirect_on_failure":false,"slug":"69e9aba45c074f2da66c981ec95eef43","url":"https://pay.conekta.com/link/69e9aba45c074f2da66c981ec95eef43"}'
}
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
{
  url: '{"id":"c926d62c-81e1-47ff-bbd8-73f3192209b2","name":"Payment Link for Heriberto","livemode":false,"emails_sent":0,"success_url":"","failure_url":"","paid_payments_count":0,"sms_sent":0,"status":"Issued","type":"PaymentLink","recurrent":false,"starts_at":1705039200,"expires_at":1705528534,"allowed_payment_methods":["cash","card","bank_transfer"],"exclude_card_networks":[],"needs_shipping_contact":false,"monthly_installments_options":[],"monthly_installments_enabled":false,"force_3ds_flow":false,"metadata":{},"can_not_expire":false,"object":"checkout","is_redirect_on_failure":false,"slug":"c926d62c81e147ffbbd873f3192209b2","url":"https://pay.conekta.com/link/c926d62c81e147ffbbd873f3192209b2"}'
}
{
  url: '{"id":"a3791778-4540-408e-ac95-2f962bf18213","name":"Payment Link for Heriberto","livemode":false,"emails_sent":0,"success_url":"","failure_url":"","paid_payments_count":0,"sms_sent":0,"status":"Issued","type":"PaymentLink","recurrent":false,"starts_at":1705039200,"expires_at":1705528557,"allowed_payment_methods":["cash","card","bank_transfer"],"exclude_card_networks":[],"needs_shipping_contact":false,"monthly_installments_options":[],"monthly_installments_enabled":false,"force_3ds_flow":false,"metadata":{},"can_not_expire":false,"object":"checkout","is_redirect_on_failure":false,"slug":"a37917784540408eac952f962bf18213","url":"https://pay.conekta.com/link/a37917784540408eac952f962bf18213"}'
}
{
  url: '{"id":"c22bd0fd-1116-447e-8609-e76871e4ff18","name":"Payment Link for Heriberto","livemode":false,"emails_sent":0,"success_url":"","failure_url":"","paid_payments_count":0,"sms_sent":0,"status":"Issued","type":"PaymentLink","recurrent":false,"starts_at":1705039200,"expires_at":1705528582,"allowed_payment_methods":["cash","card","bank_transfer"],"exclude_card_networks":[],"needs_shipping_contact":false,"monthly_installments_options":[],"monthly_installments_enabled":false,"force_3ds_flow":false,"metadata":{},"can_not_expire":false,"object":"checkout","is_redirect_on_failure":false,"slug":"c22bd0fd1116447e8609e76871e4ff18","url":"https://pay.conekta.com/link/c22bd0fd1116447e8609e76871e4ff18"}'
}
{
  url: '{"id":"303ac14c-fc12-43e9-95df-55aced9b1d91","name":"Payment Link for Heriberto","livemode":false,"emails_sent":0,"success_url":"","failure_url":"","paid_payments_count":0,"sms_sent":0,"status":"Issued","type":"PaymentLink","recurrent":false,"starts_at":1705039200,"expires_at":1705528612,"allowed_payment_methods":["cash","card","bank_transfer"],"exclude_card_networks":[],"needs_shipping_contact":false,"monthly_installments_options":[],"monthly_installments_enabled":false,"force_3ds_flow":false,"metadata":{},"can_not_expire":false,"object":"checkout","is_redirect_on_failure":false,"slug":"303ac14cfc1243e995df55aced9b1d91","url":"https://pay.conekta.com/link/303ac14cfc1243e995df55aced9b1d91"}'
}
{
  params: {
    eta_id: '1',
    id: 'price_1OWphbJFpQqnD8HRInCZoMqL',
    currency: 'mxn'
  }
}
{
  url: '{"id":"9a987405-2028-4c26-b893-82b6b97902f9","name":"Payment Link for Heriberto","livemode":false,"emails_sent":0,"success_url":"","failure_url":"","paid_payments_count":0,"sms_sent":0,"status":"Issued","type":"PaymentLink","recurrent":false,"starts_at":1705039200,"expires_at":1705528624,"allowed_payment_methods":["cash","card","bank_transfer"],"exclude_card_networks":[],"needs_shipping_contact":false,"monthly_installments_options":[],"monthly_installments_enabled":false,"force_3ds_flow":false,"metadata":{},"can_not_expire":false,"object":"checkout","is_redirect_on_failure":false,"slug":"9a98740520284c26b89382b6b97902f9","url":"https://pay.conekta.com/link/9a98740520284c26b89382b6b97902f9"}'
}
{
  url: '{"id":"3449fa66-e652-437b-a4cc-63b57f17a7f9","name":"Payment Link for Heriberto","livemode":false,"emails_sent":0,"success_url":"","failure_url":"","paid_payments_count":0,"sms_sent":0,"status":"Issued","type":"PaymentLink","recurrent":false,"starts_at":1705039200,"expires_at":1705528629,"allowed_payment_methods":["cash","card","bank_transfer"],"exclude_card_networks":[],"needs_shipping_contact":false,"monthly_installments_options":[],"monthly_installments_enabled":false,"force_3ds_flow":false,"metadata":{},"can_not_expire":false,"object":"checkout","is_redirect_on_failure":false,"slug":"3449fa66e652437ba4cc63b57f17a7f9","url":"https://pay.conekta.com/link/3449fa66e652437ba4cc63b57f17a7f9"}'
}
{
  params: {
    eta_id: '1',
    id: 'price_1OWphbJFpQqnD8HRInCZoMqL',
    currency: 'mxn'
  }
}
{
  params: {
    eta_id: '1',
    id: 'price_1OWphbJFpQqnD8HRInCZoMqL',
    currency: 'mxn'
  }
}
{
  params: {
    eta_id: '1',
    id: 'price_1OWphbJFpQqnD8HRInCZoMqL',
    currency: 'mxn'
  }
}
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node dist/app.js`[39m
Servidor corriendo en puerto 8000
Executing (default): SELECT 1+1 AS result
Database online
